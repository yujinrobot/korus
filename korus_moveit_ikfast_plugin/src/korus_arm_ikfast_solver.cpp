/// autogenerated analytical inverse kinematics code from ikfast program part of OpenRAVE
/// \author Rosen Diankov
///
/// Licensed under the Apache License, Version 2.0 (the "License");
/// you may not use this file except in compliance with the License.
/// You may obtain a copy of the License at
///     http://www.apache.org/licenses/LICENSE-2.0
/// 
/// Unless required by applicable law or agreed to in writing, software
/// distributed under the License is distributed on an "AS IS" BASIS,
/// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
/// See the License for the specific language governing permissions and
/// limitations under the License.
///
/// ikfast version 61 generated on 2013-12-04 23:26:51.090658
/// To compile with gcc:
///     gcc -lstdc++ ik.cpp
/// To compile without any main function as a shared object (might need -llapack):
///     gcc -fPIC -lstdc++ -DIKFAST_NO_MAIN -DIKFAST_CLIBRARY -shared -Wl,-soname,libik.so -o libik.so ik.cpp
#define IKFAST_HAS_LIBRARY
#include "ikfast.h" // found inside share/openrave-X.Y/python/ikfast.h
using namespace ikfast;

// check if the included ikfast version matches what this file was compiled with
#define IKFAST_COMPILE_ASSERT(x) extern int __dummy[(int)x]
IKFAST_COMPILE_ASSERT(IKFAST_VERSION==61);

#include <cmath>
#include <vector>
#include <limits>
#include <algorithm>
#include <complex>

#define IKFAST_STRINGIZE2(s) #s
#define IKFAST_STRINGIZE(s) IKFAST_STRINGIZE2(s)

#ifndef IKFAST_ASSERT
#include <stdexcept>
#include <sstream>
#include <iostream>

#ifdef _MSC_VER
#ifndef __PRETTY_FUNCTION__
#define __PRETTY_FUNCTION__ __FUNCDNAME__
#endif
#endif

#ifndef __PRETTY_FUNCTION__
#define __PRETTY_FUNCTION__ __func__
#endif

#define IKFAST_ASSERT(b) { if( !(b) ) { std::stringstream ss; ss << "ikfast exception: " << __FILE__ << ":" << __LINE__ << ": " <<__PRETTY_FUNCTION__ << ": Assertion '" << #b << "' failed"; throw std::runtime_error(ss.str()); } }

#endif

#if defined(_MSC_VER)
#define IKFAST_ALIGNED16(x) __declspec(align(16)) x
#else
#define IKFAST_ALIGNED16(x) x __attribute((aligned(16)))
#endif

#define IK2PI  ((IkReal)6.28318530717959)
#define IKPI  ((IkReal)3.14159265358979)
#define IKPI_2  ((IkReal)1.57079632679490)

#ifdef _MSC_VER
#ifndef isnan
#define isnan _isnan
#endif
#endif // _MSC_VER

// lapack routines
extern "C" {
  void dgetrf_ (const int* m, const int* n, double* a, const int* lda, int* ipiv, int* info);
  void zgetrf_ (const int* m, const int* n, std::complex<double>* a, const int* lda, int* ipiv, int* info);
  void dgetri_(const int* n, const double* a, const int* lda, int* ipiv, double* work, const int* lwork, int* info);
  void dgesv_ (const int* n, const int* nrhs, double* a, const int* lda, int* ipiv, double* b, const int* ldb, int* info);
  void dgetrs_(const char *trans, const int *n, const int *nrhs, double *a, const int *lda, int *ipiv, double *b, const int *ldb, int *info);
  void dgeev_(const char *jobvl, const char *jobvr, const int *n, double *a, const int *lda, double *wr, double *wi,double *vl, const int *ldvl, double *vr, const int *ldvr, double *work, const int *lwork, int *info);
}

using namespace std; // necessary to get std math routines

#ifdef IKFAST_NAMESPACE
namespace IKFAST_NAMESPACE {
#endif

inline float IKabs(float f) { return fabsf(f); }
inline double IKabs(double f) { return fabs(f); }

inline float IKsqr(float f) { return f*f; }
inline double IKsqr(double f) { return f*f; }

inline float IKlog(float f) { return logf(f); }
inline double IKlog(double f) { return log(f); }

// allows asin and acos to exceed 1
#ifndef IKFAST_SINCOS_THRESH
#define IKFAST_SINCOS_THRESH ((IkReal)0.000001)
#endif

// used to check input to atan2 for degenerate cases
#ifndef IKFAST_ATAN2_MAGTHRESH
#define IKFAST_ATAN2_MAGTHRESH ((IkReal)2e-6)
#endif

// minimum distance of separate solutions
#ifndef IKFAST_SOLUTION_THRESH
#define IKFAST_SOLUTION_THRESH ((IkReal)1e-6)
#endif

inline float IKasin(float f)
{
IKFAST_ASSERT( f > -1-IKFAST_SINCOS_THRESH && f < 1+IKFAST_SINCOS_THRESH ); // any more error implies something is wrong with the solver
if( f <= -1 ) return float(-IKPI_2);
else if( f >= 1 ) return float(IKPI_2);
return asinf(f);
}
inline double IKasin(double f)
{
IKFAST_ASSERT( f > -1-IKFAST_SINCOS_THRESH && f < 1+IKFAST_SINCOS_THRESH ); // any more error implies something is wrong with the solver
if( f <= -1 ) return -IKPI_2;
else if( f >= 1 ) return IKPI_2;
return asin(f);
}

// return positive value in [0,y)
inline float IKfmod(float x, float y)
{
    while(x < 0) {
        x += y;
    }
    return fmodf(x,y);
}

// return positive value in [0,y)
inline double IKfmod(double x, double y)
{
    while(x < 0) {
        x += y;
    }
    return fmod(x,y);
}

inline float IKacos(float f)
{
IKFAST_ASSERT( f > -1-IKFAST_SINCOS_THRESH && f < 1+IKFAST_SINCOS_THRESH ); // any more error implies something is wrong with the solver
if( f <= -1 ) return float(IKPI);
else if( f >= 1 ) return float(0);
return acosf(f);
}
inline double IKacos(double f)
{
IKFAST_ASSERT( f > -1-IKFAST_SINCOS_THRESH && f < 1+IKFAST_SINCOS_THRESH ); // any more error implies something is wrong with the solver
if( f <= -1 ) return IKPI;
else if( f >= 1 ) return 0;
return acos(f);
}
inline float IKsin(float f) { return sinf(f); }
inline double IKsin(double f) { return sin(f); }
inline float IKcos(float f) { return cosf(f); }
inline double IKcos(double f) { return cos(f); }
inline float IKtan(float f) { return tanf(f); }
inline double IKtan(double f) { return tan(f); }
inline float IKsqrt(float f) { if( f <= 0.0f ) return 0.0f; return sqrtf(f); }
inline double IKsqrt(double f) { if( f <= 0.0 ) return 0.0; return sqrt(f); }
inline float IKatan2(float fy, float fx) {
    if( isnan(fy) ) {
        IKFAST_ASSERT(!isnan(fx)); // if both are nan, probably wrong value will be returned
        return float(IKPI_2);
    }
    else if( isnan(fx) ) {
        return 0;
    }
    return atan2f(fy,fx);
}
inline double IKatan2(double fy, double fx) {
    if( isnan(fy) ) {
        IKFAST_ASSERT(!isnan(fx)); // if both are nan, probably wrong value will be returned
        return IKPI_2;
    }
    else if( isnan(fx) ) {
        return 0;
    }
    return atan2(fy,fx);
}

inline float IKsign(float f) {
    if( f > 0 ) {
        return float(1);
    }
    else if( f < 0 ) {
        return float(-1);
    }
    return 0;
}

inline double IKsign(double f) {
    if( f > 0 ) {
        return 1.0;
    }
    else if( f < 0 ) {
        return -1.0;
    }
    return 0;
}

/// solves the forward kinematics equations.
/// \param pfree is an array specifying the free joints of the chain.
IKFAST_API void ComputeFk(const IkReal* j, IkReal* eetrans, IkReal* eerot) {
IkReal x0,x1,x2,x3,x4,x5,x6,x7,x8,x9,x10,x11,x12,x13,x14,x15,x16,x17,x18,x19,x20,x21,x22,x23,x24,x25,x26,x27,x28,x29,x30,x31,x32;
x0=IKcos(j[0]);
x1=IKcos(j[2]);
x2=IKcos(j[3]);
x3=IKsin(j[2]);
x4=IKsin(j[3]);
x5=IKsin(j[0]);
x6=IKsin(j[5]);
x7=IKcos(j[4]);
x8=IKsin(j[4]);
x9=IKcos(j[5]);
x10=((IkReal(1.00000000000000))*(x8));
x11=((IkReal(0.0450000000000000))*(x7));
x12=((IkReal(1.00000000000000))*(x7));
x13=((IkReal(1.00000000000000))*(x1));
x14=((IkReal(0.382000000000000))*(x4));
x15=((IkReal(1.00000000000000))*(x2));
x16=((IkReal(0.0450000000000000))*(x8));
x17=((IkReal(1.00000000000000))*(x4));
x18=((IkReal(0.0450000000000000))*(x0));
x19=((IkReal(0.283000000000000))*(x1));
x20=((IkReal(0.382000000000000))*(x1));
x21=((x5)*(x9));
x22=((x3)*(x5));
x23=((x0)*(x2));
x24=((x2)*(x5));
x25=((x0)*(x3));
x26=((((x1)*(x2)))+(((IkReal(-1.00000000000000))*(x17)*(x3))));
x27=((((IkReal(-1.00000000000000))*(x15)*(x3)))+(((IkReal(-1.00000000000000))*(x13)*(x4))));
x28=((x26)*(x7));
x29=((((IkReal(-1.00000000000000))*(x13)*(x23)))+(((x17)*(x25))));
x30=((((IkReal(-1.00000000000000))*(x13)*(x24)))+(((x17)*(x22))));
x31=((((IkReal(-1.00000000000000))*(x15)*(x25)))+(((IkReal(-1.00000000000000))*(x0)*(x13)*(x4))));
x32=((((IkReal(-1.00000000000000))*(x15)*(x22)))+(((IkReal(-1.00000000000000))*(x13)*(x4)*(x5))));
eetrans[0]=((((x0)*(x19)))+(((x6)*(((((x11)*(x31)))+(((x16)*(x29)))))))+(((IkReal(-0.0450000000000000))*(x21)))+(((IkReal(-1.00000000000000))*(x14)*(x25)))+(((IkReal(0.0450000000000000))*(x5)))+(((IkReal(0.0480000000000000))*(x0)))+(((x20)*(x23))));
eetrans[1]=((((x18)*(x9)))+(((x19)*(x5)))+(((IkReal(-1.00000000000000))*(x18)))+(((IkReal(-1.00000000000000))*(x14)*(x22)))+(((x6)*(((((x16)*(x30)))+(((x11)*(x32)))))))+(((IkReal(0.0480000000000000))*(x5)))+(((x20)*(x24))));
eetrans[2]=((IkReal(0.436500000000000))+(((x1)*(x14)))+(((IkReal(0.382000000000000))*(x2)*(x3)))+(((IkReal(0.283000000000000))*(x3)))+(((x6)*(((((x16)*(x27)))+(((x11)*(x26)))))))+(j[1]));
eerot[0]=((x21)+(((x6)*(((((IkReal(-1.00000000000000))*(x12)*(x31)))+(((IkReal(-1.00000000000000))*(x10)*(x29))))))));
eerot[1]=((((x6)*(((((IkReal(-1.00000000000000))*(x12)*(x32)))+(((IkReal(-1.00000000000000))*(x10)*(x30)))))))+(((IkReal(-1.00000000000000))*(x0)*(x9))));
eerot[2]=((x6)*(((((IkReal(-1.00000000000000))*(x12)*(x26)))+(((IkReal(-1.00000000000000))*(x10)*(x27))))));
}

IKFAST_API int GetNumFreeParameters() { return 1; }
IKFAST_API int* GetFreeParameters() { static int freeparams[] = {1}; return freeparams; }
IKFAST_API int GetNumJoints() { return 6; }

IKFAST_API int GetIkRealSize() { return sizeof(IkReal); }

IKFAST_API int GetIkType() { return 0x56000007; }

class IKSolver {
public:
IkReal j0,cj0,sj0,htj0,j2,cj2,sj2,htj2,j3,cj3,sj3,htj3,j4,cj4,sj4,htj4,j5,cj5,sj5,htj5,j1,cj1,sj1,htj1,new_r00,r00,rxp0_0,new_r01,r01,rxp0_1,new_r02,r02,rxp0_2,new_px,px,npx,new_py,py,npy,new_pz,pz,npz,pp;
unsigned char _ij0[2], _nj0,_ij2[2], _nj2,_ij3[2], _nj3,_ij4[2], _nj4,_ij5[2], _nj5,_ij1[2], _nj1;

bool ComputeIk(const IkReal* eetrans, const IkReal* eerot, const IkReal* pfree, IkSolutionListBase<IkReal>& solutions) {
j0=numeric_limits<IkReal>::quiet_NaN(); _ij0[0] = -1; _ij0[1] = -1; _nj0 = -1; j2=numeric_limits<IkReal>::quiet_NaN(); _ij2[0] = -1; _ij2[1] = -1; _nj2 = -1; j3=numeric_limits<IkReal>::quiet_NaN(); _ij3[0] = -1; _ij3[1] = -1; _nj3 = -1; j4=numeric_limits<IkReal>::quiet_NaN(); _ij4[0] = -1; _ij4[1] = -1; _nj4 = -1; j5=numeric_limits<IkReal>::quiet_NaN(); _ij5[0] = -1; _ij5[1] = -1; _nj5 = -1;  _ij1[0] = -1; _ij1[1] = -1; _nj1 = 0; 
for(int dummyiter = 0; dummyiter < 1; ++dummyiter) {
    solutions.Clear();
px = eetrans[0]; py = eetrans[1]; pz = eetrans[2];

j1=pfree[0]; cj1=cos(pfree[0]); sj1=sin(pfree[0]);
r00 = eerot[0];
r01 = eerot[1];
r02 = eerot[2];
px = eetrans[0]; py = eetrans[1]; pz = eetrans[2];
new_r00=r00;
new_px=px;
new_r01=r01;
new_py=py;
new_r02=r02;
new_pz=((IkReal(-0.436500000000000))+(pz));
r00 = new_r00; r01 = new_r01; r02 = new_r02; px = new_px; py = new_py; pz = new_pz;

pp=(((px)*(px))+((py)*(py))+((pz)*(pz)));
{
IkReal dummyeval[1];
dummyeval[0]=((((IkReal(44.4444444444444))*(py)*(r01)))+(((IkReal(493.827160493827))*((py)*(py))))+((r00)*(r00))+((r01)*(r01))+(((IkReal(44.4444444444444))*(px)*(r00)))+(((IkReal(493.827160493827))*((px)*(px)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j0array[2], cj0array[2], sj0array[2];
bool j0valid[2]={false};
_nj0 = 2;
IkReal x33=((((IkReal(0.0450000000000000))*(r01)))+(py));
IkReal x34=((((IkReal(-0.0450000000000000))*(r00)))+(((IkReal(-1.00000000000000))*(px))));
if( IKabs(x33) < IKFAST_ATAN2_MAGTHRESH && IKabs(x34) < IKFAST_ATAN2_MAGTHRESH )
    continue;
IkReal x35=((IkReal(1.00000000000000))*(IKatan2(x33, x34)));
if( ((((x34)*(x34))+((x33)*(x33)))) < (IkReal)-0.00001 )
    continue;
if( (((IkReal(0.0450000000000000))*(((IKabs(IKabs(IKsqrt((((x34)*(x34))+((x33)*(x33)))))) != 0)?((IkReal)1/(IKabs(IKsqrt((((x34)*(x34))+((x33)*(x33))))))):(IkReal)1.0e30)))) < -1-IKFAST_SINCOS_THRESH || (((IkReal(0.0450000000000000))*(((IKabs(IKabs(IKsqrt((((x34)*(x34))+((x33)*(x33)))))) != 0)?((IkReal)1/(IKabs(IKsqrt((((x34)*(x34))+((x33)*(x33))))))):(IkReal)1.0e30)))) > 1+IKFAST_SINCOS_THRESH )
    continue;
IkReal x36=IKasin(((IkReal(0.0450000000000000))*(((IKabs(IKabs(IKsqrt((((x34)*(x34))+((x33)*(x33)))))) != 0)?((IkReal)1/(IKabs(IKsqrt((((x34)*(x34))+((x33)*(x33))))))):(IkReal)1.0e30))));
j0array[0]=((((IkReal(-1.00000000000000))*(x36)))+(((IkReal(-1.00000000000000))*(x35))));
sj0array[0]=IKsin(j0array[0]);
cj0array[0]=IKcos(j0array[0]);
j0array[1]=((IkReal(3.14159265358979))+(((IkReal(-1.00000000000000))*(x35)))+(x36));
sj0array[1]=IKsin(j0array[1]);
cj0array[1]=IKcos(j0array[1]);
if( j0array[0] > IKPI )
{
    j0array[0]-=IK2PI;
}
else if( j0array[0] < -IKPI )
{    j0array[0]+=IK2PI;
}
j0valid[0] = true;
if( j0array[1] > IKPI )
{
    j0array[1]-=IK2PI;
}
else if( j0array[1] < -IKPI )
{    j0array[1]+=IK2PI;
}
j0valid[1] = true;
for(int ij0 = 0; ij0 < 2; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
for(int iij0 = ij0+1; iij0 < 2; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];

{
IkReal dummyeval[1];
IkReal gconst0;
IkReal x37=(cj0)*(cj0);
IkReal x38=(sj0)*(sj0);
IkReal x39=(r01)*(r01);
IkReal x40=(r00)*(r00);
IkReal x41=((pz)*(r01));
IkReal x42=((IkReal(3.55951111111111))*(px));
IkReal x43=((IkReal(0.160178000000000))*(sj0));
IkReal x44=((cj0)*(pz));
IkReal x45=((cj0)*(r02));
IkReal x46=((py)*(r02));
IkReal x47=((IkReal(0.160178000000000))*(r00));
IkReal x48=((cj0)*(j1));
IkReal x49=((IkReal(0.160178000000000))*(px));
IkReal x50=((r01)*(r02));
IkReal x51=((r02)*(sj0));
IkReal x52=((j1)*(r01));
IkReal x53=((r00)*(sj0));
IkReal x54=((IkReal(3.55951111111111))*(py));
IkReal x55=((j1)*(r00));
IkReal x56=((IkReal(3.55951111111111))*(sj0));
IkReal x57=((pz)*(r00)*(x54));
gconst0=IKsign(((((x37)*(x42)*(x52)))+(((IkReal(-1.00000000000000))*(x37)*(x41)*(x42)))+(((IkReal(-1.00000000000000))*(x37)*(x41)*(x47)))+(((x38)*(x57)))+(((IkReal(-1.00000000000000))*(x42)*(x48)*(x53)))+(((IkReal(0.00768854400000000))*(r00)*(x51)))+(((py)*(r01)*(x43)*(x45)))+(((x41)*(x42)))+(((IkReal(-0.170856533333333))*(py)*(x45)))+(((IkReal(-1.00000000000000))*(x42)*(x52)))+(((r01)*(sj0)*(x48)*(x54)))+(((IkReal(-1.00000000000000))*(x40)*(x43)*(x48)))+(((x47)*(x48)))+(((x43)*(x46)))+(((IkReal(-1.00000000000000))*(x41)*(x43)))+(((IkReal(-0.00768854400000000))*(r02)))+(((IkReal(-0.00768854400000000))*(r01)*(x45)))+(((IkReal(-1.00000000000000))*(x38)*(x47)*(x52)))+(((x40)*(x43)*(x44)))+(((IkReal(-1.00000000000000))*(cj0)*(sj0)*(x41)*(x54)))+(((IkReal(-1.00000000000000))*(px)*(r00)*(x43)*(x45)))+(((IkReal(-1.00000000000000))*(x44)*(x47)))+(((IkReal(-1.00000000000000))*(x39)*(x43)*(x44)))+(((x45)*(x49)))+(((x37)*(x47)*(x52)))+(((x49)*(x50)))+(((IkReal(-1.00000000000000))*(x38)*(x49)*(x50)))+(((x37)*(x46)*(x47)))+(((x43)*(x52)))+(((IkReal(0.170856533333333))*(px)*(x51)))+(((x39)*(x43)*(x48)))+(((py)*(sj0)*(x45)*(x54)))+(((x42)*(x44)*(x53)))+(((x38)*(x41)*(x47)))+(((IkReal(-1.00000000000000))*(px)*(sj0)*(x42)*(x45)))+(((IkReal(-1.00000000000000))*(x57)))+(((IkReal(-1.00000000000000))*(x38)*(x42)*(x46)))+(((x37)*(x42)*(x46)))+(((IkReal(-1.00000000000000))*(x38)*(x54)*(x55)))+(((IkReal(-1.00000000000000))*(x46)*(x47)))+(((x54)*(x55)))));
IkReal x58=(sj0)*(sj0);
IkReal x59=(cj0)*(cj0);
IkReal x60=(r01)*(r01);
IkReal x61=(r00)*(r00);
IkReal x62=((IkReal(20.8333333333333))*(sj0));
IkReal x63=((cj0)*(j1));
IkReal x64=((py)*(r02));
IkReal x65=((px)*(sj0));
IkReal x66=((IkReal(20.8333333333333))*(r00));
IkReal x67=((j1)*(r01));
IkReal x68=((IkReal(462.962962962963))*(r00));
IkReal x69=((cj0)*(r02));
IkReal x70=((IkReal(20.8333333333333))*(px));
IkReal x71=((pz)*(r01));
IkReal x72=((IkReal(462.962962962963))*(px));
IkReal x73=((r01)*(r02));
IkReal x74=((IkReal(462.962962962963))*(sj0));
IkReal x75=((cj0)*(pz));
IkReal x76=((pz)*(x68));
IkReal x77=((py)*(x58));
dummyeval[0]=((((IkReal(22.2222222222222))*(r02)*(x65)))+(((x59)*(x67)*(x72)))+(((cj0)*(r01)*(x62)*(x64)))+(((x60)*(x62)*(x63)))+(((x59)*(x66)*(x67)))+(((IkReal(-1.00000000000000))*(x58)*(x64)*(x72)))+(((IkReal(-1.00000000000000))*(x66)*(x75)))+(((j1)*(py)*(x68)))+(((x58)*(x66)*(x71)))+(((IkReal(-1.00000000000000))*(x58)*(x66)*(x67)))+(((IkReal(-1.00000000000000))*(r02)))+(((IkReal(-1.00000000000000))*(px)*(r00)*(x62)*(x69)))+(((IkReal(-22.2222222222222))*(cj0)*(x64)))+(((x69)*(x70)))+(((x62)*(x64)))+(((x62)*(x67)))+(((IkReal(-1.00000000000000))*(r01)*(x69)))+(((IkReal(-1.00000000000000))*(j1)*(x68)*(x77)))+(((x61)*(x62)*(x75)))+(((py)*(r01)*(x63)*(x74)))+(((IkReal(-1.00000000000000))*(x59)*(x66)*(x71)))+(((IkReal(-1.00000000000000))*(x62)*(x71)))+(((cj0)*(py)*(x64)*(x74)))+(((IkReal(-1.00000000000000))*(x61)*(x62)*(x63)))+(((x65)*(x68)*(x75)))+(((r00)*(r02)*(sj0)))+(((x76)*(x77)))+(((IkReal(-1.00000000000000))*(x59)*(x71)*(x72)))+(((IkReal(-1.00000000000000))*(x64)*(x66)))+(((x63)*(x66)))+(((IkReal(-1.00000000000000))*(x63)*(x65)*(x68)))+(((IkReal(-1.00000000000000))*(x65)*(x69)*(x72)))+(((IkReal(-1.00000000000000))*(cj0)*(py)*(x71)*(x74)))+(((IkReal(-1.00000000000000))*(py)*(x76)))+(((x70)*(x73)))+(((x59)*(x64)*(x66)))+(((IkReal(-1.00000000000000))*(x67)*(x72)))+(((IkReal(-1.00000000000000))*(x58)*(x70)*(x73)))+(((x59)*(x64)*(x72)))+(((IkReal(-1.00000000000000))*(x60)*(x62)*(x75)))+(((x71)*(x72))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
if( IKabs(((gconst0)*(((((IkReal(-0.283000000000000))*(cj0)*(pp)*(r00)))+(((IkReal(-0.403048600000000))*(cj0)*(px)*(r00)*(sj0)))+(((IkReal(0.566000000000000))*(j1)*(py)*(r00)*(r02)))+(((IkReal(-0.0271680000000000))*(px)*(r00)))+(((IkReal(0.603733333333333))*(cj0)*(j1)*(py)*(r02)))+(((IkReal(-0.00122256000000000))*((cj0)*(cj0))*((r01)*(r01))))+(((IkReal(-0.566000000000000))*(j1)*(pz)*(r00)*(r01)*((sj0)*(sj0))))+(((IkReal(0.283000000000000))*(r00)*(r01)*((j1)*(j1))*((sj0)*(sj0))))+(((IkReal(0.0271680000000000))*(cj0)*(j1)*(r01)*(r02)))+(((IkReal(0.566000000000000))*(cj0)*(j1)*(pz)*(sj0)*((r01)*(r01))))+(((IkReal(-0.283000000000000))*(r01)*(sj0)*((j1)*(j1))))+(((IkReal(-0.283000000000000))*(pp)*(r00)*(r01)*((cj0)*(cj0))))+(((IkReal(-0.0271680000000000))*(py)*(r01)*((cj0)*(cj0))))+(((IkReal(12.5777777777778))*(cj0)*(j1)*(r02)*(sj0)*((px)*(px))))+(((IkReal(-0.566000000000000))*(r01)*(sj0)*((px)*(px))))+(((IkReal(12.5777777777778))*(py)*(r00)*((cj0)*(cj0))*((px)*(px))))+(((IkReal(-0.566000000000000))*(px)*(pz)*(r01)*(r02)*((sj0)*(sj0))))+(((IkReal(0.0181371870000000))*(cj0)*(r00)))+(((IkReal(0.403048600000000))*(cj0)*(py)*(r01)*(sj0)))+(((IkReal(-0.428518600000000))*(py)*(r00)*((sj0)*(sj0))))+(((IkReal(-0.566000000000000))*(py)*(pz)*(r00)*(r02)))+(((IkReal(0.0271680000000000))*(cj0)*(px)*(r01)*(sj0)))+(((IkReal(12.5777777777778))*(cj0)*(pz)*(r02)*(sj0)*((py)*(py))))+(((IkReal(-6.28888888888889))*(cj0)*(pp)*(py)*(r01)*(sj0)))+(((IkReal(-0.283000000000000))*(pp)*(r01)*(sj0)))+(((IkReal(-0.0271680000000000))*(cj0)*(px)*(r00)*(r01)))+(((IkReal(6.28888888888889))*(py)*(r00)*((j1)*(j1))*((sj0)*(sj0))))+(((IkReal(-0.566000000000000))*(cj0)*(sj0)*((px)*(px))*((r00)*(r00))))+(((IkReal(0.603733333333333))*(px)*(pz)*(r02)*(sj0)))+(((IkReal(-6.28888888888889))*(cj0)*(py)*(r01)*(sj0)*((j1)*(j1))))+(((IkReal(1.13200000000000))*(px)*(py)*(r00)*(sj0)))+(((IkReal(12.5777777777778))*(j1)*(px)*(pz)*(r01)*((cj0)*(cj0))))+(((IkReal(0.0254700000000000))*(cj0)*(px)*((r01)*(r01))))+(((IkReal(-0.0271680000000000))*(cj0)*(py)*((r01)*(r01))))+(((IkReal(0.566000000000000))*(j1)*(pz)*(r00)*(r01)*((cj0)*(cj0))))+(((IkReal(-0.603733333333333))*(cj0)*(py)*(pz)*(r02)))+(((IkReal(0.566000000000000))*(j1)*(pz)*(r01)*(sj0)))+(((IkReal(-6.28888888888889))*(px)*(r01)*((cj0)*(cj0))*((j1)*(j1))))+(((IkReal(-12.5777777777778))*(cj0)*(j1)*(px)*(pz)*(r00)*(sj0)))+(((IkReal(-0.0181371870000000))*(r00)*(r01)*((sj0)*(sj0))))+(((IkReal(0.566000000000000))*(cj0)*(j1)*(px)*(r00)*(r02)*(sj0)))+(((IkReal(0.0181371870000000))*(r00)*(r01)*((cj0)*(cj0))))+(((IkReal(0.0181371870000000))*(r01)*(sj0)))+(((IkReal(12.5777777777778))*(cj0)*(j1)*(py)*(pz)*(r01)*(sj0)))+(((IkReal(-0.566000000000000))*(r00)*(r01)*((px)*(px))*((sj0)*(sj0))))+(((IkReal(-12.5777777777778))*(j1)*(px)*(py)*(r02)*((cj0)*(cj0))))+(((IkReal(1.13200000000000))*(cj0)*(px)*(py)*(r01)))+(((IkReal(-0.0271680000000000))*(cj0)*(pz)*(r01)*(r02)))+(((IkReal(12.5777777777778))*(cj0)*(r01)*(sj0)*((py)*(py)*(py))))+(((IkReal(12.5777777777778))*(px)*(r01)*((cj0)*(cj0))*((py)*(py))))+(((IkReal(0.566000000000000))*(cj0)*(r00)*((px)*(px))))+(((IkReal(-12.5777777777778))*(cj0)*(r00)*(sj0)*((px)*(px)*(px))))+(((IkReal(0.566000000000000))*(r00)*(r01)*((cj0)*(cj0))*((py)*(py))))+(((IkReal(0.00244512000000000))*(cj0)*(r00)*(r01)*(sj0)))+(((IkReal(0.566000000000000))*(r00)*(r01)*((px)*(px))))+(((IkReal(-0.0254700000000000))*(px)*(r00)*(r01)*(sj0)))+(((IkReal(-12.5777777777778))*(py)*(r00)*((px)*(px))*((sj0)*(sj0))))+(((IkReal(6.28888888888889))*(pp)*(py)*(r00)*((sj0)*(sj0))))+(((IkReal(6.28888888888889))*(cj0)*(px)*(r00)*(sj0)*((j1)*(j1))))+(((IkReal(0.283000000000000))*(cj0)*(pp)*(sj0)*((r00)*(r00))))+(((IkReal(-12.5777777777778))*(j1)*(py)*(pz)*(r00)*((sj0)*(sj0))))+(((IkReal(0.566000000000000))*(cj0)*(py)*(pz)*(r01)*(r02)*(sj0)))+(((IkReal(-0.0271680000000000))*(px)*(r00)*((sj0)*(sj0))))+(((IkReal(-12.5777777777778))*(j1)*(px)*(pz)*(r01)))+(((IkReal(-0.566000000000000))*(r00)*(r01)*((py)*(py))))+(((IkReal(-0.0254700000000000))*(cj0)*(py)*(r00)*(r01)))+(((IkReal(6.28888888888889))*(pp)*(px)*(r01)))+(((IkReal(6.28888888888889))*(cj0)*(pp)*(px)*(r00)*(sj0)))+(((IkReal(0.603733333333333))*(r00)*(sj0)*((px)*(px))))+(((IkReal(0.603733333333333))*(px)*(py)*(r01)*(sj0)))+(((IkReal(0.283000000000000))*(cj0)*(sj0)*((j1)*(j1))*((r00)*(r00))))+(((IkReal(0.566000000000000))*(cj0)*(sj0)*((py)*(py))*((r01)*(r01))))+(((IkReal(-0.283000000000000))*(cj0)*(pp)*(sj0)*((r01)*(r01))))+(((IkReal(12.5777777777778))*(cj0)*(px)*(r00)*(sj0)*((py)*(py))))+(((IkReal(0.0254700000000000))*(py)*(sj0)*((r00)*(r00))))+(((IkReal(-12.5777777777778))*(cj0)*(py)*(r01)*(sj0)*((px)*(px))))+(((IkReal(0.566000000000000))*(px)*(pz)*(r01)*(r02)))+(((IkReal(12.5777777777778))*(j1)*(py)*(pz)*(r00)))+(((IkReal(-0.283000000000000))*(cj0)*(r00)*((j1)*(j1))))+(((IkReal(0.0271680000000000))*(px)*(sj0)*((r00)*(r00))))+(((IkReal(0.0271680000000000))*(py)*(r00)*(r01)*(sj0)))+(((IkReal(0.566000000000000))*(j1)*(px)*(r01)*(r02)*((sj0)*(sj0))))+(((IkReal(6.28888888888889))*(px)*(r01)*((j1)*(j1))))+(((IkReal(0.283000000000000))*(pp)*(r00)*(r01)*((sj0)*(sj0))))+(((IkReal(-0.603733333333333))*(cj0)*(r01)*((py)*(py))))+(((IkReal(0.0254700000000000))*(px)*(r01)*((sj0)*(sj0))))+(((IkReal(-0.00122256000000000))*((r00)*(r00))*((sj0)*(sj0))))+(((IkReal(0.566000000000000))*(cj0)*(j1)*(pz)*(r00)))+(((IkReal(0.403048600000000))*(py)*(r00)))+(((IkReal(12.5777777777778))*(px)*(py)*(pz)*(r02)*((cj0)*(cj0))))+(((IkReal(-0.566000000000000))*(px)*(py)*((r01)*(r01))*((sj0)*(sj0))))+(((IkReal(-6.28888888888889))*(pp)*(px)*(r01)*((cj0)*(cj0))))+(((IkReal(-0.603733333333333))*(j1)*(px)*(r02)*(sj0)))+(((IkReal(12.5777777777778))*(j1)*(px)*(py)*(r02)*((sj0)*(sj0))))+(((IkReal(0.566000000000000))*(cj0)*(px)*(pz)*(r02)))+(((IkReal(0.566000000000000))*(r01)*(sj0)*((py)*(py))))+(((IkReal(-0.566000000000000))*(j1)*(py)*(r02)*(sj0)))+(((IkReal(-0.283000000000000))*(cj0)*(sj0)*((j1)*(j1))*((r01)*(r01))))+(((IkReal(-12.5777777777778))*(px)*(r01)*((py)*(py))*((sj0)*(sj0))))+(((IkReal(0.00122256000000000))*(r00)*(sj0)))+(((IkReal(-0.0254700000000000))*(py)*(r00)*((cj0)*(cj0))))+(((IkReal(-0.566000000000000))*(cj0)*(px)*(pz)*(r00)*(r02)*(sj0)))+(((IkReal(-0.566000000000000))*(cj0)*(j1)*(px)*(r02)))+(((IkReal(0.0271680000000000))*(pz)*(r00)*(r02)*(sj0)))+(((IkReal(0.566000000000000))*(py)*(pz)*(r00)*(r02)*((cj0)*(cj0))))+(((IkReal(0.0181371870000000))*(cj0)*(sj0)*((r01)*(r01))))+(((IkReal(-0.283000000000000))*(r00)*(r01)*((cj0)*(cj0))*((j1)*(j1))))+(((IkReal(-0.603733333333333))*(cj0)*(px)*(py)*(r00)))+(((IkReal(-0.0181371870000000))*(cj0)*(sj0)*((r00)*(r00))))+(((IkReal(-12.5777777777778))*(px)*(py)*(pz)*(r02)*((sj0)*(sj0))))+(((IkReal(-0.566000000000000))*(px)*(py)*((r00)*(r00))))+(((IkReal(-6.28888888888889))*(py)*(r00)*((j1)*(j1))))+(((IkReal(0.0271680000000000))*(j1)*(r02)))+(((IkReal(-12.5777777777778))*(cj0)*(j1)*(r02)*(sj0)*((py)*(py))))+(((IkReal(0.566000000000000))*(px)*(py)*((cj0)*(cj0))*((r00)*(r00))))+(((IkReal(-6.28888888888889))*(pp)*(py)*(r00)))+(((IkReal(-0.566000000000000))*(j1)*(py)*(r00)*(r02)*((cj0)*(cj0))))+(((IkReal(0.566000000000000))*(px)*(py)*((r01)*(r01))))+(((IkReal(-0.0271680000000000))*(j1)*(r00)*(r02)*(sj0)))+(((IkReal(-0.0271680000000000))*(pz)*(r02)))+(((IkReal(-0.403048600000000))*(px)*(r01)))+(((IkReal(-0.0271680000000000))*(py)*(r01)))+(((IkReal(0.428518600000000))*(px)*(r01)*((cj0)*(cj0))))+(((IkReal(-0.566000000000000))*(cj0)*(j1)*(py)*(r01)*(r02)*(sj0)))+(((IkReal(-0.566000000000000))*(j1)*(px)*(r01)*(r02)))+(((IkReal(-0.566000000000000))*(cj0)*(r00)*((py)*(py))))+(((IkReal(-12.5777777777778))*(cj0)*(pz)*(r02)*(sj0)*((px)*(px))))+(((IkReal(0.566000000000000))*(py)*(pz)*(r02)*(sj0)))+(((IkReal(-0.00122256000000000))*(cj0)*(r01)))+(((IkReal(0.0271680000000000))*(cj0)*(py)*(r00)*(sj0)))+(((IkReal(-0.566000000000000))*(cj0)*(j1)*(pz)*(sj0)*((r00)*(r00)))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst0)*(((((IkReal(-0.566000000000000))*(cj0)*(j1)*(py)*(r00)*(sj0)))+(((IkReal(-0.0254700000000000))*(cj0)*(px)*(r01)*(r02)*(sj0)))+(((IkReal(-0.566000000000000))*(j1)*(pz)*(r00)*(r02)*(sj0)))+(((IkReal(0.603733333333333))*(j1)*(px)*(r01)))+(((IkReal(-12.5777777777778))*(cj0)*(px)*(py)*(pz)*(r00)))+(((IkReal(-0.603733333333333))*(px)*(py)*(r02)*((cj0)*(cj0))))+(((IkReal(12.5777777777778))*(pz)*(r00)*(sj0)*((px)*(px))))+(((IkReal(-0.566000000000000))*(px)*(pz)*(r00)*((sj0)*(sj0))))+(((IkReal(0.566000000000000))*(j1)*(px)*(r00)))+(((IkReal(0.0254700000000000))*(px)*(r00)*(r02)*((sj0)*(sj0))))+(((IkReal(-0.0271680000000000))*(cj0)*(j1)*(r00)))+(((IkReal(-0.566000000000000))*(cj0)*(py)*(pz)*((r01)*(r01))))+(((IkReal(-0.603733333333333))*(px)*(pz)*(r01)))+(((IkReal(-0.603733333333333))*(cj0)*(j1)*(py)*(r01)*(sj0)))+(((IkReal(0.283000000000000))*(cj0)*(pp)*(r01)*(r02)))+(((IkReal(-0.0168331230000000))*(r02)))+(((IkReal(-0.566000000000000))*(r02)*((pz)*(pz))))+(((IkReal(12.5777777777778))*(px)*(py)*(pz)*(r01)*(sj0)))+(((IkReal(-0.0271680000000000))*(cj0)*(px)*(r02)))+(((IkReal(-0.603733333333333))*(cj0)*(r02)*(sj0)*((py)*(py))))+(((IkReal(-0.566000000000000))*(cj0)*(px)*(pz)*(r00)*(r01)))+(((IkReal(-0.603733333333333))*(cj0)*(px)*(pz)*(r00)*(sj0)))+(((IkReal(0.0271680000000000))*(cj0)*(px)*(r00)*(r02)*(sj0)))+(((IkReal(-0.0168331230000000))*(cj0)*(r01)*(r02)))+(((IkReal(0.603733333333333))*(j1)*(py)*(r00)*((sj0)*(sj0))))+(((IkReal(-0.0271680000000000))*(py)*(r00)*(r02)*((cj0)*(cj0))))+(((IkReal(0.566000000000000))*(j1)*(px)*(r00)*((sj0)*(sj0))))+(((IkReal(-0.0271680000000000))*(j1)*(r01)*(sj0)))+(((IkReal(-0.283000000000000))*(r02)*((j1)*(j1))))+(((IkReal(-12.5777777777778))*(j1)*(px)*(pz)*(r02)*(sj0)))+(((IkReal(0.0271680000000000))*(py)*(r00)*(r02)))+(((IkReal(-0.0271680000000000))*(cj0)*(py)*(r01)*(r02)*(sj0)))+(((IkReal(-0.566000000000000))*(py)*(pz)*(r01)))+(((IkReal(0.566000000000000))*(j1)*(py)*(r01)))+(((IkReal(12.5777777777778))*(cj0)*(j1)*(px)*(py)*(r00)))+(((IkReal(0.0509400000000000))*(cj0)*(pz)*(r00)*(r01)*(sj0)))+(((IkReal(0.566000000000000))*(r00)*(r02)*(sj0)*((pz)*(pz))))+(((IkReal(0.566000000000000))*(px)*(pz)*(sj0)*((r00)*(r00))))+(((IkReal(0.603733333333333))*(cj0)*(j1)*(px)*(r00)*(sj0)))+(((IkReal(0.603733333333333))*(py)*(pz)*(r00)))+(((IkReal(-0.0254700000000000))*(cj0)*(pz)*(r01)))+(((IkReal(0.566000000000000))*(cj0)*(px)*(pz)*(r01)*(sj0)))+(((IkReal(0.566000000000000))*(r02)*((px)*(px))*((sj0)*(sj0))))+(((IkReal(-0.0271680000000000))*(cj0)*(pz)*(sj0)*((r00)*(r00))))+(((IkReal(0.0168331230000000))*(r00)*(r02)*(sj0)))+(((IkReal(0.566000000000000))*(j1)*(pz)*(r02)))+(((IkReal(6.28888888888889))*(cj0)*(pp)*(py)*(r02)))+(((IkReal(0.0271680000000000))*(px)*(r01)*(r02)*((sj0)*(sj0))))+(((IkReal(-0.566000000000000))*(cj0)*(j1)*(px)*(r01)*(sj0)))+(((IkReal(-0.566000000000000))*(j1)*(px)*(sj0)*((r00)*(r00))))+(((IkReal(12.5777777777778))*(cj0)*(j1)*(py)*(pz)*(r02)))+(((IkReal(0.566000000000000))*(cj0)*(j1)*(px)*(r00)*(r01)))+(((IkReal(-0.566000000000000))*(j1)*(py)*(r00)*(r01)*(sj0)))+(((IkReal(-0.283000000000000))*(cj0)*(r01)*(r02)*((j1)*(j1))))+(((IkReal(0.603733333333333))*(cj0)*(r02)*(sj0)*((px)*(px))))+(((IkReal(-0.566000000000000))*(cj0)*(r01)*(r02)*((pz)*(pz))))+(((IkReal(-12.5777777777778))*(cj0)*(pz)*(r01)*((py)*(py))))+(((IkReal(-0.603733333333333))*(j1)*(px)*(r01)*((cj0)*(cj0))))+(((IkReal(-0.0509400000000000))*(cj0)*(j1)*(r00)*(r01)*(sj0)))+(((IkReal(-0.348599400000000))*(cj0)*(py)*(r02)))+(((IkReal(0.0254700000000000))*(cj0)*(j1)*(r01)))+(((IkReal(-0.603733333333333))*(j1)*(py)*(r00)))+(((IkReal(-0.603733333333333))*(py)*(pz)*(r00)*((sj0)*(sj0))))+(((IkReal(-0.283000000000000))*(pp)*(r00)*(r02)*(sj0)))+(((IkReal(0.566000000000000))*(r02)*((cj0)*(cj0))*((py)*(py))))+(((IkReal(-12.5777777777778))*(j1)*(px)*(py)*(r01)*(sj0)))+(((IkReal(0.566000000000000))*(j1)*(py)*(r01)*((cj0)*(cj0))))+(((IkReal(-12.5777777777778))*(j1)*(r00)*(sj0)*((px)*(px))))+(((IkReal(0.566000000000000))*(py)*(pz)*(r00)*(r01)*(sj0)))+(((IkReal(-6.28888888888889))*(pp)*(px)*(r02)*(sj0)))+(((IkReal(12.5777777777778))*(cj0)*(j1)*(r01)*((py)*(py))))+(((IkReal(-0.0271680000000000))*(pz)*(r00)*(r01)*((sj0)*(sj0))))+(((IkReal(-0.0271680000000000))*(j1)*(r00)*(r01)*((cj0)*(cj0))))+(((IkReal(0.0254700000000000))*(j1)*((cj0)*(cj0))*((r01)*(r01))))+(((IkReal(0.0271680000000000))*(pz)*(r01)*(sj0)))+(((IkReal(0.566000000000000))*(cj0)*(j1)*(py)*((r01)*(r01))))+(((IkReal(-0.0254700000000000))*(pz)*((r00)*(r00))*((sj0)*(sj0))))+(((IkReal(0.348599400000000))*(px)*(r02)*(sj0)))+(((IkReal(0.0271680000000000))*(cj0)*(pz)*(sj0)*((r01)*(r01))))+(((IkReal(6.28888888888889))*(px)*(r02)*(sj0)*((j1)*(j1))))+(((IkReal(-1.13200000000000))*(cj0)*(px)*(py)*(r02)*(sj0)))+(((IkReal(0.0271680000000000))*(j1)*(r00)*(r01)*((sj0)*(sj0))))+(((IkReal(-0.0271680000000000))*(px)*(r01)*(r02)))+(((IkReal(-0.0254700000000000))*(cj0)*(py)*(r00)*(r02)*(sj0)))+(((IkReal(0.283000000000000))*(pp)*(r02)))+(((IkReal(0.0271680000000000))*(cj0)*(pz)*(r00)))+(((IkReal(0.603733333333333))*(px)*(py)*(r02)*((sj0)*(sj0))))+(((IkReal(0.283000000000000))*(r00)*(r02)*(sj0)*((j1)*(j1))))+(((IkReal(0.0271680000000000))*(cj0)*(j1)*(sj0)*((r00)*(r00))))+(((IkReal(-0.566000000000000))*(py)*(pz)*(r01)*((cj0)*(cj0))))+(((IkReal(-0.0254700000000000))*(pz)*((cj0)*(cj0))*((r01)*(r01))))+(((IkReal(0.0271680000000000))*(pz)*(r00)*(r01)*((cj0)*(cj0))))+(((IkReal(-0.0254700000000000))*(j1)*(r00)*(sj0)))+(((IkReal(0.0254700000000000))*(pz)*(r00)*(sj0)))+(((IkReal(0.603733333333333))*(px)*(pz)*(r01)*((cj0)*(cj0))))+(((IkReal(-6.28888888888889))*(cj0)*(py)*(r02)*((j1)*(j1))))+(((IkReal(12.5777777777778))*(px)*(r02)*(sj0)*((pz)*(pz))))+(((IkReal(-0.566000000000000))*(px)*(pz)*(r00)))+(((IkReal(-0.0271680000000000))*(py)*(r02)*(sj0)))+(((IkReal(-12.5777777777778))*(cj0)*(py)*(r02)*((pz)*(pz))))+(((IkReal(0.0254700000000000))*(py)*(r01)*(r02)*((cj0)*(cj0))))+(((IkReal(-0.0271680000000000))*(cj0)*(j1)*(sj0)*((r01)*(r01))))+(((IkReal(0.566000000000000))*(cj0)*(j1)*(pz)*(r01)*(r02)))+(((IkReal(0.0254700000000000))*(j1)*((r00)*(r00))*((sj0)*(sj0))))+(((IkReal(0.566000000000000))*(cj0)*(py)*(pz)*(r00)*(sj0)))+(((IkReal(0.603733333333333))*(cj0)*(py)*(pz)*(r01)*(sj0))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j2array[0]=IKatan2(((gconst0)*(((((IkReal(-0.283000000000000))*(cj0)*(pp)*(r00)))+(((IkReal(-0.403048600000000))*(cj0)*(px)*(r00)*(sj0)))+(((IkReal(0.566000000000000))*(j1)*(py)*(r00)*(r02)))+(((IkReal(-0.0271680000000000))*(px)*(r00)))+(((IkReal(0.603733333333333))*(cj0)*(j1)*(py)*(r02)))+(((IkReal(-0.00122256000000000))*((cj0)*(cj0))*((r01)*(r01))))+(((IkReal(-0.566000000000000))*(j1)*(pz)*(r00)*(r01)*((sj0)*(sj0))))+(((IkReal(0.283000000000000))*(r00)*(r01)*((j1)*(j1))*((sj0)*(sj0))))+(((IkReal(0.0271680000000000))*(cj0)*(j1)*(r01)*(r02)))+(((IkReal(0.566000000000000))*(cj0)*(j1)*(pz)*(sj0)*((r01)*(r01))))+(((IkReal(-0.283000000000000))*(r01)*(sj0)*((j1)*(j1))))+(((IkReal(-0.283000000000000))*(pp)*(r00)*(r01)*((cj0)*(cj0))))+(((IkReal(-0.0271680000000000))*(py)*(r01)*((cj0)*(cj0))))+(((IkReal(12.5777777777778))*(cj0)*(j1)*(r02)*(sj0)*((px)*(px))))+(((IkReal(-0.566000000000000))*(r01)*(sj0)*((px)*(px))))+(((IkReal(12.5777777777778))*(py)*(r00)*((cj0)*(cj0))*((px)*(px))))+(((IkReal(-0.566000000000000))*(px)*(pz)*(r01)*(r02)*((sj0)*(sj0))))+(((IkReal(0.0181371870000000))*(cj0)*(r00)))+(((IkReal(0.403048600000000))*(cj0)*(py)*(r01)*(sj0)))+(((IkReal(-0.428518600000000))*(py)*(r00)*((sj0)*(sj0))))+(((IkReal(-0.566000000000000))*(py)*(pz)*(r00)*(r02)))+(((IkReal(0.0271680000000000))*(cj0)*(px)*(r01)*(sj0)))+(((IkReal(12.5777777777778))*(cj0)*(pz)*(r02)*(sj0)*((py)*(py))))+(((IkReal(-6.28888888888889))*(cj0)*(pp)*(py)*(r01)*(sj0)))+(((IkReal(-0.283000000000000))*(pp)*(r01)*(sj0)))+(((IkReal(-0.0271680000000000))*(cj0)*(px)*(r00)*(r01)))+(((IkReal(6.28888888888889))*(py)*(r00)*((j1)*(j1))*((sj0)*(sj0))))+(((IkReal(-0.566000000000000))*(cj0)*(sj0)*((px)*(px))*((r00)*(r00))))+(((IkReal(0.603733333333333))*(px)*(pz)*(r02)*(sj0)))+(((IkReal(-6.28888888888889))*(cj0)*(py)*(r01)*(sj0)*((j1)*(j1))))+(((IkReal(1.13200000000000))*(px)*(py)*(r00)*(sj0)))+(((IkReal(12.5777777777778))*(j1)*(px)*(pz)*(r01)*((cj0)*(cj0))))+(((IkReal(0.0254700000000000))*(cj0)*(px)*((r01)*(r01))))+(((IkReal(-0.0271680000000000))*(cj0)*(py)*((r01)*(r01))))+(((IkReal(0.566000000000000))*(j1)*(pz)*(r00)*(r01)*((cj0)*(cj0))))+(((IkReal(-0.603733333333333))*(cj0)*(py)*(pz)*(r02)))+(((IkReal(0.566000000000000))*(j1)*(pz)*(r01)*(sj0)))+(((IkReal(-6.28888888888889))*(px)*(r01)*((cj0)*(cj0))*((j1)*(j1))))+(((IkReal(-12.5777777777778))*(cj0)*(j1)*(px)*(pz)*(r00)*(sj0)))+(((IkReal(-0.0181371870000000))*(r00)*(r01)*((sj0)*(sj0))))+(((IkReal(0.566000000000000))*(cj0)*(j1)*(px)*(r00)*(r02)*(sj0)))+(((IkReal(0.0181371870000000))*(r00)*(r01)*((cj0)*(cj0))))+(((IkReal(0.0181371870000000))*(r01)*(sj0)))+(((IkReal(12.5777777777778))*(cj0)*(j1)*(py)*(pz)*(r01)*(sj0)))+(((IkReal(-0.566000000000000))*(r00)*(r01)*((px)*(px))*((sj0)*(sj0))))+(((IkReal(-12.5777777777778))*(j1)*(px)*(py)*(r02)*((cj0)*(cj0))))+(((IkReal(1.13200000000000))*(cj0)*(px)*(py)*(r01)))+(((IkReal(-0.0271680000000000))*(cj0)*(pz)*(r01)*(r02)))+(((IkReal(12.5777777777778))*(cj0)*(r01)*(sj0)*((py)*(py)*(py))))+(((IkReal(12.5777777777778))*(px)*(r01)*((cj0)*(cj0))*((py)*(py))))+(((IkReal(0.566000000000000))*(cj0)*(r00)*((px)*(px))))+(((IkReal(-12.5777777777778))*(cj0)*(r00)*(sj0)*((px)*(px)*(px))))+(((IkReal(0.566000000000000))*(r00)*(r01)*((cj0)*(cj0))*((py)*(py))))+(((IkReal(0.00244512000000000))*(cj0)*(r00)*(r01)*(sj0)))+(((IkReal(0.566000000000000))*(r00)*(r01)*((px)*(px))))+(((IkReal(-0.0254700000000000))*(px)*(r00)*(r01)*(sj0)))+(((IkReal(-12.5777777777778))*(py)*(r00)*((px)*(px))*((sj0)*(sj0))))+(((IkReal(6.28888888888889))*(pp)*(py)*(r00)*((sj0)*(sj0))))+(((IkReal(6.28888888888889))*(cj0)*(px)*(r00)*(sj0)*((j1)*(j1))))+(((IkReal(0.283000000000000))*(cj0)*(pp)*(sj0)*((r00)*(r00))))+(((IkReal(-12.5777777777778))*(j1)*(py)*(pz)*(r00)*((sj0)*(sj0))))+(((IkReal(0.566000000000000))*(cj0)*(py)*(pz)*(r01)*(r02)*(sj0)))+(((IkReal(-0.0271680000000000))*(px)*(r00)*((sj0)*(sj0))))+(((IkReal(-12.5777777777778))*(j1)*(px)*(pz)*(r01)))+(((IkReal(-0.566000000000000))*(r00)*(r01)*((py)*(py))))+(((IkReal(-0.0254700000000000))*(cj0)*(py)*(r00)*(r01)))+(((IkReal(6.28888888888889))*(pp)*(px)*(r01)))+(((IkReal(6.28888888888889))*(cj0)*(pp)*(px)*(r00)*(sj0)))+(((IkReal(0.603733333333333))*(r00)*(sj0)*((px)*(px))))+(((IkReal(0.603733333333333))*(px)*(py)*(r01)*(sj0)))+(((IkReal(0.283000000000000))*(cj0)*(sj0)*((j1)*(j1))*((r00)*(r00))))+(((IkReal(0.566000000000000))*(cj0)*(sj0)*((py)*(py))*((r01)*(r01))))+(((IkReal(-0.283000000000000))*(cj0)*(pp)*(sj0)*((r01)*(r01))))+(((IkReal(12.5777777777778))*(cj0)*(px)*(r00)*(sj0)*((py)*(py))))+(((IkReal(0.0254700000000000))*(py)*(sj0)*((r00)*(r00))))+(((IkReal(-12.5777777777778))*(cj0)*(py)*(r01)*(sj0)*((px)*(px))))+(((IkReal(0.566000000000000))*(px)*(pz)*(r01)*(r02)))+(((IkReal(12.5777777777778))*(j1)*(py)*(pz)*(r00)))+(((IkReal(-0.283000000000000))*(cj0)*(r00)*((j1)*(j1))))+(((IkReal(0.0271680000000000))*(px)*(sj0)*((r00)*(r00))))+(((IkReal(0.0271680000000000))*(py)*(r00)*(r01)*(sj0)))+(((IkReal(0.566000000000000))*(j1)*(px)*(r01)*(r02)*((sj0)*(sj0))))+(((IkReal(6.28888888888889))*(px)*(r01)*((j1)*(j1))))+(((IkReal(0.283000000000000))*(pp)*(r00)*(r01)*((sj0)*(sj0))))+(((IkReal(-0.603733333333333))*(cj0)*(r01)*((py)*(py))))+(((IkReal(0.0254700000000000))*(px)*(r01)*((sj0)*(sj0))))+(((IkReal(-0.00122256000000000))*((r00)*(r00))*((sj0)*(sj0))))+(((IkReal(0.566000000000000))*(cj0)*(j1)*(pz)*(r00)))+(((IkReal(0.403048600000000))*(py)*(r00)))+(((IkReal(12.5777777777778))*(px)*(py)*(pz)*(r02)*((cj0)*(cj0))))+(((IkReal(-0.566000000000000))*(px)*(py)*((r01)*(r01))*((sj0)*(sj0))))+(((IkReal(-6.28888888888889))*(pp)*(px)*(r01)*((cj0)*(cj0))))+(((IkReal(-0.603733333333333))*(j1)*(px)*(r02)*(sj0)))+(((IkReal(12.5777777777778))*(j1)*(px)*(py)*(r02)*((sj0)*(sj0))))+(((IkReal(0.566000000000000))*(cj0)*(px)*(pz)*(r02)))+(((IkReal(0.566000000000000))*(r01)*(sj0)*((py)*(py))))+(((IkReal(-0.566000000000000))*(j1)*(py)*(r02)*(sj0)))+(((IkReal(-0.283000000000000))*(cj0)*(sj0)*((j1)*(j1))*((r01)*(r01))))+(((IkReal(-12.5777777777778))*(px)*(r01)*((py)*(py))*((sj0)*(sj0))))+(((IkReal(0.00122256000000000))*(r00)*(sj0)))+(((IkReal(-0.0254700000000000))*(py)*(r00)*((cj0)*(cj0))))+(((IkReal(-0.566000000000000))*(cj0)*(px)*(pz)*(r00)*(r02)*(sj0)))+(((IkReal(-0.566000000000000))*(cj0)*(j1)*(px)*(r02)))+(((IkReal(0.0271680000000000))*(pz)*(r00)*(r02)*(sj0)))+(((IkReal(0.566000000000000))*(py)*(pz)*(r00)*(r02)*((cj0)*(cj0))))+(((IkReal(0.0181371870000000))*(cj0)*(sj0)*((r01)*(r01))))+(((IkReal(-0.283000000000000))*(r00)*(r01)*((cj0)*(cj0))*((j1)*(j1))))+(((IkReal(-0.603733333333333))*(cj0)*(px)*(py)*(r00)))+(((IkReal(-0.0181371870000000))*(cj0)*(sj0)*((r00)*(r00))))+(((IkReal(-12.5777777777778))*(px)*(py)*(pz)*(r02)*((sj0)*(sj0))))+(((IkReal(-0.566000000000000))*(px)*(py)*((r00)*(r00))))+(((IkReal(-6.28888888888889))*(py)*(r00)*((j1)*(j1))))+(((IkReal(0.0271680000000000))*(j1)*(r02)))+(((IkReal(-12.5777777777778))*(cj0)*(j1)*(r02)*(sj0)*((py)*(py))))+(((IkReal(0.566000000000000))*(px)*(py)*((cj0)*(cj0))*((r00)*(r00))))+(((IkReal(-6.28888888888889))*(pp)*(py)*(r00)))+(((IkReal(-0.566000000000000))*(j1)*(py)*(r00)*(r02)*((cj0)*(cj0))))+(((IkReal(0.566000000000000))*(px)*(py)*((r01)*(r01))))+(((IkReal(-0.0271680000000000))*(j1)*(r00)*(r02)*(sj0)))+(((IkReal(-0.0271680000000000))*(pz)*(r02)))+(((IkReal(-0.403048600000000))*(px)*(r01)))+(((IkReal(-0.0271680000000000))*(py)*(r01)))+(((IkReal(0.428518600000000))*(px)*(r01)*((cj0)*(cj0))))+(((IkReal(-0.566000000000000))*(cj0)*(j1)*(py)*(r01)*(r02)*(sj0)))+(((IkReal(-0.566000000000000))*(j1)*(px)*(r01)*(r02)))+(((IkReal(-0.566000000000000))*(cj0)*(r00)*((py)*(py))))+(((IkReal(-12.5777777777778))*(cj0)*(pz)*(r02)*(sj0)*((px)*(px))))+(((IkReal(0.566000000000000))*(py)*(pz)*(r02)*(sj0)))+(((IkReal(-0.00122256000000000))*(cj0)*(r01)))+(((IkReal(0.0271680000000000))*(cj0)*(py)*(r00)*(sj0)))+(((IkReal(-0.566000000000000))*(cj0)*(j1)*(pz)*(sj0)*((r00)*(r00))))))), ((gconst0)*(((((IkReal(-0.566000000000000))*(cj0)*(j1)*(py)*(r00)*(sj0)))+(((IkReal(-0.0254700000000000))*(cj0)*(px)*(r01)*(r02)*(sj0)))+(((IkReal(-0.566000000000000))*(j1)*(pz)*(r00)*(r02)*(sj0)))+(((IkReal(0.603733333333333))*(j1)*(px)*(r01)))+(((IkReal(-12.5777777777778))*(cj0)*(px)*(py)*(pz)*(r00)))+(((IkReal(-0.603733333333333))*(px)*(py)*(r02)*((cj0)*(cj0))))+(((IkReal(12.5777777777778))*(pz)*(r00)*(sj0)*((px)*(px))))+(((IkReal(-0.566000000000000))*(px)*(pz)*(r00)*((sj0)*(sj0))))+(((IkReal(0.566000000000000))*(j1)*(px)*(r00)))+(((IkReal(0.0254700000000000))*(px)*(r00)*(r02)*((sj0)*(sj0))))+(((IkReal(-0.0271680000000000))*(cj0)*(j1)*(r00)))+(((IkReal(-0.566000000000000))*(cj0)*(py)*(pz)*((r01)*(r01))))+(((IkReal(-0.603733333333333))*(px)*(pz)*(r01)))+(((IkReal(-0.603733333333333))*(cj0)*(j1)*(py)*(r01)*(sj0)))+(((IkReal(0.283000000000000))*(cj0)*(pp)*(r01)*(r02)))+(((IkReal(-0.0168331230000000))*(r02)))+(((IkReal(-0.566000000000000))*(r02)*((pz)*(pz))))+(((IkReal(12.5777777777778))*(px)*(py)*(pz)*(r01)*(sj0)))+(((IkReal(-0.0271680000000000))*(cj0)*(px)*(r02)))+(((IkReal(-0.603733333333333))*(cj0)*(r02)*(sj0)*((py)*(py))))+(((IkReal(-0.566000000000000))*(cj0)*(px)*(pz)*(r00)*(r01)))+(((IkReal(-0.603733333333333))*(cj0)*(px)*(pz)*(r00)*(sj0)))+(((IkReal(0.0271680000000000))*(cj0)*(px)*(r00)*(r02)*(sj0)))+(((IkReal(-0.0168331230000000))*(cj0)*(r01)*(r02)))+(((IkReal(0.603733333333333))*(j1)*(py)*(r00)*((sj0)*(sj0))))+(((IkReal(-0.0271680000000000))*(py)*(r00)*(r02)*((cj0)*(cj0))))+(((IkReal(0.566000000000000))*(j1)*(px)*(r00)*((sj0)*(sj0))))+(((IkReal(-0.0271680000000000))*(j1)*(r01)*(sj0)))+(((IkReal(-0.283000000000000))*(r02)*((j1)*(j1))))+(((IkReal(-12.5777777777778))*(j1)*(px)*(pz)*(r02)*(sj0)))+(((IkReal(0.0271680000000000))*(py)*(r00)*(r02)))+(((IkReal(-0.0271680000000000))*(cj0)*(py)*(r01)*(r02)*(sj0)))+(((IkReal(-0.566000000000000))*(py)*(pz)*(r01)))+(((IkReal(0.566000000000000))*(j1)*(py)*(r01)))+(((IkReal(12.5777777777778))*(cj0)*(j1)*(px)*(py)*(r00)))+(((IkReal(0.0509400000000000))*(cj0)*(pz)*(r00)*(r01)*(sj0)))+(((IkReal(0.566000000000000))*(r00)*(r02)*(sj0)*((pz)*(pz))))+(((IkReal(0.566000000000000))*(px)*(pz)*(sj0)*((r00)*(r00))))+(((IkReal(0.603733333333333))*(cj0)*(j1)*(px)*(r00)*(sj0)))+(((IkReal(0.603733333333333))*(py)*(pz)*(r00)))+(((IkReal(-0.0254700000000000))*(cj0)*(pz)*(r01)))+(((IkReal(0.566000000000000))*(cj0)*(px)*(pz)*(r01)*(sj0)))+(((IkReal(0.566000000000000))*(r02)*((px)*(px))*((sj0)*(sj0))))+(((IkReal(-0.0271680000000000))*(cj0)*(pz)*(sj0)*((r00)*(r00))))+(((IkReal(0.0168331230000000))*(r00)*(r02)*(sj0)))+(((IkReal(0.566000000000000))*(j1)*(pz)*(r02)))+(((IkReal(6.28888888888889))*(cj0)*(pp)*(py)*(r02)))+(((IkReal(0.0271680000000000))*(px)*(r01)*(r02)*((sj0)*(sj0))))+(((IkReal(-0.566000000000000))*(cj0)*(j1)*(px)*(r01)*(sj0)))+(((IkReal(-0.566000000000000))*(j1)*(px)*(sj0)*((r00)*(r00))))+(((IkReal(12.5777777777778))*(cj0)*(j1)*(py)*(pz)*(r02)))+(((IkReal(0.566000000000000))*(cj0)*(j1)*(px)*(r00)*(r01)))+(((IkReal(-0.566000000000000))*(j1)*(py)*(r00)*(r01)*(sj0)))+(((IkReal(-0.283000000000000))*(cj0)*(r01)*(r02)*((j1)*(j1))))+(((IkReal(0.603733333333333))*(cj0)*(r02)*(sj0)*((px)*(px))))+(((IkReal(-0.566000000000000))*(cj0)*(r01)*(r02)*((pz)*(pz))))+(((IkReal(-12.5777777777778))*(cj0)*(pz)*(r01)*((py)*(py))))+(((IkReal(-0.603733333333333))*(j1)*(px)*(r01)*((cj0)*(cj0))))+(((IkReal(-0.0509400000000000))*(cj0)*(j1)*(r00)*(r01)*(sj0)))+(((IkReal(-0.348599400000000))*(cj0)*(py)*(r02)))+(((IkReal(0.0254700000000000))*(cj0)*(j1)*(r01)))+(((IkReal(-0.603733333333333))*(j1)*(py)*(r00)))+(((IkReal(-0.603733333333333))*(py)*(pz)*(r00)*((sj0)*(sj0))))+(((IkReal(-0.283000000000000))*(pp)*(r00)*(r02)*(sj0)))+(((IkReal(0.566000000000000))*(r02)*((cj0)*(cj0))*((py)*(py))))+(((IkReal(-12.5777777777778))*(j1)*(px)*(py)*(r01)*(sj0)))+(((IkReal(0.566000000000000))*(j1)*(py)*(r01)*((cj0)*(cj0))))+(((IkReal(-12.5777777777778))*(j1)*(r00)*(sj0)*((px)*(px))))+(((IkReal(0.566000000000000))*(py)*(pz)*(r00)*(r01)*(sj0)))+(((IkReal(-6.28888888888889))*(pp)*(px)*(r02)*(sj0)))+(((IkReal(12.5777777777778))*(cj0)*(j1)*(r01)*((py)*(py))))+(((IkReal(-0.0271680000000000))*(pz)*(r00)*(r01)*((sj0)*(sj0))))+(((IkReal(-0.0271680000000000))*(j1)*(r00)*(r01)*((cj0)*(cj0))))+(((IkReal(0.0254700000000000))*(j1)*((cj0)*(cj0))*((r01)*(r01))))+(((IkReal(0.0271680000000000))*(pz)*(r01)*(sj0)))+(((IkReal(0.566000000000000))*(cj0)*(j1)*(py)*((r01)*(r01))))+(((IkReal(-0.0254700000000000))*(pz)*((r00)*(r00))*((sj0)*(sj0))))+(((IkReal(0.348599400000000))*(px)*(r02)*(sj0)))+(((IkReal(0.0271680000000000))*(cj0)*(pz)*(sj0)*((r01)*(r01))))+(((IkReal(6.28888888888889))*(px)*(r02)*(sj0)*((j1)*(j1))))+(((IkReal(-1.13200000000000))*(cj0)*(px)*(py)*(r02)*(sj0)))+(((IkReal(0.0271680000000000))*(j1)*(r00)*(r01)*((sj0)*(sj0))))+(((IkReal(-0.0271680000000000))*(px)*(r01)*(r02)))+(((IkReal(-0.0254700000000000))*(cj0)*(py)*(r00)*(r02)*(sj0)))+(((IkReal(0.283000000000000))*(pp)*(r02)))+(((IkReal(0.0271680000000000))*(cj0)*(pz)*(r00)))+(((IkReal(0.603733333333333))*(px)*(py)*(r02)*((sj0)*(sj0))))+(((IkReal(0.283000000000000))*(r00)*(r02)*(sj0)*((j1)*(j1))))+(((IkReal(0.0271680000000000))*(cj0)*(j1)*(sj0)*((r00)*(r00))))+(((IkReal(-0.566000000000000))*(py)*(pz)*(r01)*((cj0)*(cj0))))+(((IkReal(-0.0254700000000000))*(pz)*((cj0)*(cj0))*((r01)*(r01))))+(((IkReal(0.0271680000000000))*(pz)*(r00)*(r01)*((cj0)*(cj0))))+(((IkReal(-0.0254700000000000))*(j1)*(r00)*(sj0)))+(((IkReal(0.0254700000000000))*(pz)*(r00)*(sj0)))+(((IkReal(0.603733333333333))*(px)*(pz)*(r01)*((cj0)*(cj0))))+(((IkReal(-6.28888888888889))*(cj0)*(py)*(r02)*((j1)*(j1))))+(((IkReal(12.5777777777778))*(px)*(r02)*(sj0)*((pz)*(pz))))+(((IkReal(-0.566000000000000))*(px)*(pz)*(r00)))+(((IkReal(-0.0271680000000000))*(py)*(r02)*(sj0)))+(((IkReal(-12.5777777777778))*(cj0)*(py)*(r02)*((pz)*(pz))))+(((IkReal(0.0254700000000000))*(py)*(r01)*(r02)*((cj0)*(cj0))))+(((IkReal(-0.0271680000000000))*(cj0)*(j1)*(sj0)*((r01)*(r01))))+(((IkReal(0.566000000000000))*(cj0)*(j1)*(pz)*(r01)*(r02)))+(((IkReal(0.0254700000000000))*(j1)*((r00)*(r00))*((sj0)*(sj0))))+(((IkReal(0.566000000000000))*(cj0)*(py)*(pz)*(r00)*(sj0)))+(((IkReal(0.603733333333333))*(cj0)*(py)*(pz)*(r01)*(sj0)))))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[2];
IkReal x78=IKcos(j2);
IkReal x79=IKsin(j2);
IkReal x80=(j1)*(j1);
IkReal x81=((IkReal(2.00000000000000))*(sj0));
IkReal x82=((px)*(r01));
IkReal x83=((py)*(r00));
IkReal x84=((j1)*(pz));
IkReal x85=((px)*(sj0));
IkReal x86=((cj0)*(r00));
IkReal x87=((IkReal(0.0900000000000000))*(r02));
IkReal x88=((cj0)*(px));
IkReal x89=((j1)*(r02));
IkReal x90=((r01)*(sj0));
IkReal x91=((py)*(r01));
IkReal x92=((IkReal(2.00000000000000))*(cj0));
IkReal x93=((r00)*(sj0));
IkReal x94=((pz)*(r02));
IkReal x95=((cj0)*(py));
IkReal x96=((cj0)*(r01));
IkReal x97=((px)*(r00));
IkReal x98=((IkReal(1.00000000000000))*(x93));
IkReal x99=((IkReal(0.566000000000000))*(x78));
IkReal x100=((IkReal(0.0254700000000000))*(x78));
IkReal x101=((sj0)*(x78));
IkReal x102=((r02)*(x79));
IkReal x103=((pz)*(x79));
IkReal x104=((j1)*(x79));
IkReal x105=((IkReal(0.566000000000000))*(x79)*(x96));
evalcond[0]=((IkReal(0.660900000000000))+(((IkReal(-6.28888888888889))*(x104)))+(((IkReal(1.06666666666667))*(x88)))+(((IkReal(6.28888888888889))*(x103)))+(((IkReal(0.283000000000000))*(x78)*(x86)))+(((IkReal(22.2222222222222))*(x84)))+(((IkReal(-11.1111111111111))*(pp)))+(((IkReal(0.283000000000000))*(x78)*(x90)))+(((IkReal(0.0450000000000000))*(x93)))+(((IkReal(1.06666666666667))*(py)*(sj0)))+(((IkReal(6.28888888888889))*(x78)*(x88)))+(((IkReal(0.283000000000000))*(x102)))+(x89)+(x85)+(((IkReal(0.0480000000000000))*(x86)))+(((IkReal(0.0480000000000000))*(x90)))+(((IkReal(-0.301866666666667))*(x78)))+(((IkReal(-1.00000000000000))*(x97)))+(((IkReal(-1.00000000000000))*(x95)))+(((IkReal(-1.00000000000000))*(x94)))+(((IkReal(-1.00000000000000))*(x91)))+(((IkReal(-0.0450000000000000))*(x96)))+(((IkReal(-11.1111111111111))*(x80)))+(((IkReal(6.28888888888889))*(py)*(x101))));
evalcond[1]=((((j1)*(x87)))+(((IkReal(-1.00000000000000))*(x82)*(x99)))+(((IkReal(-1.00000000000000))*(px)*(x81)*(x89)))+(((IkReal(0.566000000000000))*(x102)*(x95)))+(((x100)*(x90)))+(((py)*(x89)*(x92)))+(((IkReal(-0.0635310000000000))*(x96)))+(((x100)*(x86)))+(((IkReal(-1.00000000000000))*(x80)*(x98)))+(((IkReal(0.0635310000000000))*(x93)))+(((IkReal(-2.00000000000000))*(x83)*(x88)))+(((r00)*(x81)*(x84)))+(((pp)*(x96)))+(((IkReal(-1.00000000000000))*(r01)*(x84)*(x92)))+(((IkReal(-0.0960000000000000))*(x82)))+(((IkReal(-0.566000000000000))*(x102)*(x85)))+(((IkReal(-0.0271680000000000))*(x78)*(x93)))+(((IkReal(-0.566000000000000))*(x103)*(x96)))+(((py)*(x81)*(x82)))+(((IkReal(-1.00000000000000))*(py)*(x92)*(x94)))+(((IkReal(0.00432000000000000))*(x86)))+(((IkReal(-1.00000000000000))*(py)*(x91)*(x92)))+(((IkReal(0.0960000000000000))*(x83)))+(((IkReal(0.00432000000000000))*(x90)))+(((IkReal(-1.00000000000000))*(pp)*(x98)))+(((x83)*(x99)))+(((x80)*(x96)))+(((IkReal(0.0271680000000000))*(x78)*(x96)))+(((IkReal(0.566000000000000))*(x104)*(x96)))+(((px)*(x81)*(x97)))+(((px)*(x81)*(x94)))+(((IkReal(0.0254700000000000))*(x102)))+(((IkReal(-1.00000000000000))*(pz)*(x87)))+(((IkReal(-0.0900000000000000))*(x91)))+(((IkReal(-0.0900000000000000))*(x97)))+(((IkReal(0.566000000000000))*(x103)*(x93)))+(((IkReal(-0.566000000000000))*(x104)*(x93))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst1;
gconst1=IKsign(((((IkReal(10.4712041884817))*(cj0)*(cj2)*(pz)*(r00)*(r01)*(sj0)))+(((IkReal(5.23560209424084))*(cj0)*(cj2)*(py)*(r02)))+(((IkReal(1.48167539267016))*(cj0)*(r00)*(r02)*((cj2)*(cj2))))+(((IkReal(5.58464223385689))*(cj0)*(py)*(r00)*(sj0)*(sj2)))+(((IkReal(-58.1733566026760))*(cj0)*(pp)*(r00)*(sj2)))+(((IkReal(-3.69581151832461))*(cj2)*(r02)))+(((IkReal(5.23560209424084))*(cj2)*(pz)*((r01)*(r01))*((sj0)*(sj0))))+(((IkReal(5.58464223385689))*(px)*(r00)*(sj2)*((cj0)*(cj0))))+(((IkReal(-5.23560209424084))*(j1)*(r01)*(r02)*(sj0)*(sj2)))+(((IkReal(32.9261198371146))*(cj2)*(j1)*(r02)*(sj2)))+(((IkReal(-5.23560209424084))*(cj0)*(py)*(r01)*(sj0)*(sj2)))+(((IkReal(-10.4712041884817))*(cj0)*(cj2)*(j1)*(r00)*(r01)*(sj0)))+(((IkReal(5.23560209424084))*(px)*(r01)*(sj2)*((sj0)*(sj0))))+(((IkReal(-1.48167539267016))*(cj2)*(sj2)*((cj0)*(cj0))*((r00)*(r00))))+(((IkReal(5.23560209424084))*(cj2)*(pz)*((cj0)*(cj0))*((r00)*(r00))))+(((IkReal(1.58045375218150))*(r02)*((cj2)*(cj2))))+(((IkReal(-58.1733566026760))*(cj0)*(r00)*(sj2)*((j1)*(j1))))+(((IkReal(-5.23560209424084))*(cj2)*(py)*(r01)*(r02)*((sj0)*(sj0))))+(((IkReal(116.346713205352))*(j1)*(pz)*(r01)*(sj0)*(sj2)))+(((IkReal(-1.48167539267016))*(cj0)*(r00)*(r02)*((sj2)*(sj2))))+(((IkReal(58.1733566026760))*(cj2)*(pp)*(r02)))+(((IkReal(-5.23560209424084))*(py)*(sj0)*(sj2)*((r02)*(r02))))+(((IkReal(-5.58464223385689))*(cj2)*(py)*(r02)*(sj0)))+(((IkReal(5.23560209424084))*(pz)*(r01)*(r02)*(sj0)*(sj2)))+(((IkReal(32.9261198371146))*(pz)*(r01)*(sj0)*((sj2)*(sj2))))+(((IkReal(-58.1733566026760))*(pp)*(r01)*(sj0)*(sj2)))+(((IkReal(32.9261198371146))*(cj0)*(cj2)*(px)*(r01)*(sj0)*(sj2)))+(((IkReal(-32.9261198371146))*(j1)*(r01)*(sj0)*((sj2)*(sj2))))+(((IkReal(0.251308900523560))*(cj0)*(cj2)*(r00)*(r02)))+(((IkReal(-5.23560209424084))*(py)*(r00)*(sj2)*((cj0)*(cj0))))+(((IkReal(5.23560209424084))*(cj0)*(px)*(r00)*(sj0)*(sj2)))+(((IkReal(-1.48167539267016))*(r01)*(r02)*(sj0)*((sj2)*(sj2))))+(((IkReal(3.69581151832461))*(r01)*(sj0)*(sj2)))+(((IkReal(3.69581151832461))*(cj0)*(r00)*(sj2)))+(((IkReal(-32.9261198371146))*(cj2)*(pz)*(r02)*(sj2)))+(((IkReal(58.1733566026760))*(cj2)*(r02)*((j1)*(j1))))+(((IkReal(-116.346713205352))*(cj2)*(j1)*(pz)*(r02)))+(((IkReal(-5.23560209424084))*(cj0)*(cj2)*(py)*(r00)*(r02)*(sj0)))+(((IkReal(-32.9261198371146))*(py)*(r02)*(sj0)*((cj2)*(cj2))))+(((IkReal(32.9261198371146))*(cj2)*(py)*(r01)*(sj2)*((sj0)*(sj0))))+(((IkReal(-32.9261198371146))*(cj0)*(j1)*(r00)*((sj2)*(sj2))))+(((IkReal(0.251308900523560))*(cj2)*(r01)*(r02)*(sj0)))+(((IkReal(-5.23560209424084))*(cj0)*(j1)*(r00)*(r02)*(sj2)))+(((IkReal(-5.58464223385689))*(cj0)*(cj2)*(px)*(r02)))+(((IkReal(-5.23560209424084))*(cj2)*(j1)*((r01)*(r01))*((sj0)*(sj0))))+(((IkReal(32.9261198371146))*(cj0)*(cj2)*(py)*(r00)*(sj0)*(sj2)))+(((IkReal(5.58464223385689))*(py)*(r01)*(sj2)*((sj0)*(sj0))))+(((IkReal(-1.58045375218150))*(cj2)*(r01)*(sj0)*(sj2)))+(((IkReal(32.9261198371146))*(cj0)*(pz)*(r00)*((sj2)*(sj2))))+(((IkReal(32.9261198371146))*(cj2)*(px)*(r00)*(sj2)*((cj0)*(cj0))))+(((IkReal(-58.1733566026760))*(r01)*(sj0)*(sj2)*((j1)*(j1))))+(((IkReal(116.346713205352))*(cj0)*(j1)*(pz)*(r00)*(sj2)))+(((IkReal(-5.23560209424084))*(cj0)*(px)*(sj2)*((r02)*(r02))))+(((IkReal(-2.96335078534031))*(cj0)*(cj2)*(r00)*(r01)*(sj0)*(sj2)))+(((IkReal(-5.23560209424084))*(cj2)*(px)*(r02)*(sj0)))+(((IkReal(-5.23560209424084))*(cj2)*(j1)*((cj0)*(cj0))*((r00)*(r00))))+(((IkReal(-5.23560209424084))*(cj0)*(cj2)*(px)*(r01)*(r02)*(sj0)))+(((IkReal(-1.58045375218150))*(cj0)*(cj2)*(r00)*(sj2)))+(((IkReal(-32.9261198371146))*(cj0)*(px)*(r02)*((cj2)*(cj2))))+(((IkReal(5.58464223385689))*(cj0)*(px)*(r01)*(sj0)*(sj2)))+(((IkReal(1.48167539267016))*(r01)*(r02)*(sj0)*((cj2)*(cj2))))+(((IkReal(5.23560209424084))*(cj0)*(pz)*(r00)*(r02)*(sj2)))+(((IkReal(1.48167539267016))*(cj2)*(sj2)*((r02)*(r02))))+(((IkReal(0.251308900523560))*(sj2)*((r02)*(r02))))+(((IkReal(-1.48167539267016))*(cj2)*(sj2)*((r01)*(r01))*((sj0)*(sj0))))+(((IkReal(-5.23560209424084))*(cj2)*(px)*(r00)*(r02)*((cj0)*(cj0))))));
dummyeval[0]=((((IkReal(22.2222222222222))*(cj0)*(py)*(r00)*(sj0)*(sj2)))+(((IkReal(5.89583333333333))*(r01)*(r02)*(sj0)*((cj2)*(cj2))))+(((IkReal(-5.89583333333333))*(r01)*(r02)*(sj0)*((sj2)*(sj2))))+(((IkReal(41.6666666666667))*(cj0)*(cj2)*(pz)*(r00)*(r01)*(sj0)))+(((IkReal(-231.481481481481))*(r01)*(sj0)*(sj2)*((j1)*(j1))))+(((IkReal(-41.6666666666667))*(cj0)*(cj2)*(j1)*(r00)*(r01)*(sj0)))+(((IkReal(-231.481481481481))*(pp)*(r01)*(sj0)*(sj2)))+(((IkReal(-5.89583333333333))*(cj2)*(sj2)*((cj0)*(cj0))*((r00)*(r00))))+(((IkReal(-20.8333333333333))*(cj2)*(px)*(r02)*(sj0)))+(((IkReal(22.2222222222222))*(py)*(r01)*(sj2)*((sj0)*(sj0))))+(((IkReal(231.481481481481))*(cj2)*(pp)*(r02)))+(((IkReal(-20.8333333333333))*(cj0)*(py)*(r01)*(sj0)*(sj2)))+(((IkReal(22.2222222222222))*(cj0)*(px)*(r01)*(sj0)*(sj2)))+(((IkReal(20.8333333333333))*(cj2)*(pz)*((cj0)*(cj0))*((r00)*(r00))))+(((IkReal(-20.8333333333333))*(cj0)*(px)*(sj2)*((r02)*(r02))))+(((IkReal(-131.018518518519))*(j1)*(r01)*(sj0)*((sj2)*(sj2))))+(((IkReal(-20.8333333333333))*(py)*(sj0)*(sj2)*((r02)*(r02))))+(((IkReal(131.018518518519))*(cj0)*(pz)*(r00)*((sj2)*(sj2))))+(((IkReal(131.018518518519))*(cj2)*(py)*(r01)*(sj2)*((sj0)*(sj0))))+(((IkReal(-5.89583333333333))*(cj0)*(r00)*(r02)*((sj2)*(sj2))))+(((IkReal(131.018518518519))*(cj0)*(cj2)*(px)*(r01)*(sj0)*(sj2)))+(((IkReal(231.481481481481))*(cj2)*(r02)*((j1)*(j1))))+(((IkReal(5.89583333333333))*(cj0)*(r00)*(r02)*((cj2)*(cj2))))+(((IkReal(20.8333333333333))*(px)*(r01)*(sj2)*((sj0)*(sj0))))+(((IkReal(-131.018518518519))*(cj0)*(j1)*(r00)*((sj2)*(sj2))))+(((IkReal(20.8333333333333))*(cj2)*(pz)*((r01)*(r01))*((sj0)*(sj0))))+(((IkReal(-20.8333333333333))*(cj2)*(px)*(r00)*(r02)*((cj0)*(cj0))))+(((IkReal(131.018518518519))*(pz)*(r01)*(sj0)*((sj2)*(sj2))))+(((IkReal(20.8333333333333))*(cj0)*(cj2)*(py)*(r02)))+(((IkReal(-20.8333333333333))*(py)*(r00)*(sj2)*((cj0)*(cj0))))+(((IkReal(-231.481481481481))*(cj0)*(r00)*(sj2)*((j1)*(j1))))+(((IkReal(-20.8333333333333))*(cj0)*(cj2)*(px)*(r01)*(r02)*(sj0)))+(((IkReal(5.89583333333333))*(cj2)*(sj2)*((r02)*(r02))))+(((IkReal(14.7062500000000))*(cj0)*(r00)*(sj2)))+(((cj2)*(r01)*(r02)*(sj0)))+(((IkReal(-22.2222222222222))*(cj0)*(cj2)*(px)*(r02)))+(((IkReal(-131.018518518519))*(cj2)*(pz)*(r02)*(sj2)))+(((IkReal(462.962962962963))*(cj0)*(j1)*(pz)*(r00)*(sj2)))+(((IkReal(-20.8333333333333))*(cj2)*(j1)*((r01)*(r01))*((sj0)*(sj0))))+(((IkReal(131.018518518519))*(cj0)*(cj2)*(py)*(r00)*(sj0)*(sj2)))+(((IkReal(-20.8333333333333))*(cj0)*(cj2)*(py)*(r00)*(r02)*(sj0)))+(((IkReal(-14.7062500000000))*(cj2)*(r02)))+(((IkReal(-20.8333333333333))*(cj2)*(py)*(r01)*(r02)*((sj0)*(sj0))))+(((IkReal(131.018518518519))*(cj2)*(j1)*(r02)*(sj2)))+(((IkReal(-20.8333333333333))*(cj2)*(j1)*((cj0)*(cj0))*((r00)*(r00))))+(((IkReal(-231.481481481481))*(cj0)*(pp)*(r00)*(sj2)))+(((IkReal(20.8333333333333))*(cj0)*(px)*(r00)*(sj0)*(sj2)))+(((IkReal(462.962962962963))*(j1)*(pz)*(r01)*(sj0)*(sj2)))+(((IkReal(-11.7916666666667))*(cj0)*(cj2)*(r00)*(r01)*(sj0)*(sj2)))+(((IkReal(-20.8333333333333))*(j1)*(r01)*(r02)*(sj0)*(sj2)))+(((IkReal(6.28888888888889))*(r02)*((cj2)*(cj2))))+(((IkReal(20.8333333333333))*(cj0)*(pz)*(r00)*(r02)*(sj2)))+(((IkReal(14.7062500000000))*(r01)*(sj0)*(sj2)))+(((IkReal(-131.018518518519))*(py)*(r02)*(sj0)*((cj2)*(cj2))))+(((IkReal(-22.2222222222222))*(cj2)*(py)*(r02)*(sj0)))+(((IkReal(-5.89583333333333))*(cj2)*(sj2)*((r01)*(r01))*((sj0)*(sj0))))+(((IkReal(-6.28888888888889))*(cj2)*(r01)*(sj0)*(sj2)))+(((IkReal(-6.28888888888889))*(cj0)*(cj2)*(r00)*(sj2)))+(((IkReal(-131.018518518519))*(cj0)*(px)*(r02)*((cj2)*(cj2))))+(((IkReal(20.8333333333333))*(pz)*(r01)*(r02)*(sj0)*(sj2)))+(((sj2)*((r02)*(r02))))+(((IkReal(-20.8333333333333))*(cj0)*(j1)*(r00)*(r02)*(sj2)))+(((cj0)*(cj2)*(r00)*(r02)))+(((IkReal(131.018518518519))*(cj2)*(px)*(r00)*(sj2)*((cj0)*(cj0))))+(((IkReal(-462.962962962963))*(cj2)*(j1)*(pz)*(r02)))+(((IkReal(22.2222222222222))*(px)*(r00)*(sj2)*((cj0)*(cj0)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
if( IKabs(((gconst1)*(((((IkReal(27.4115292892190))*(j1)*(px)*(r00)*(r02)*((cj0)*(cj0))))+(((IkReal(-7.75746278884899))*(cj2)*(py)*(sj0)*((r02)*(r02))))+(((IkReal(-1.31575340588251))*(j1)*(r01)*(r02)*(sj0)))+(((IkReal(-7.75746278884899))*(cj0)*(cj2)*(px)*((r02)*(r02))))+(((IkReal(-1.80463803075574))*(cj0)*(r00)*(r01)*(sj0)*((sj2)*(sj2))))+(((IkReal(-0.902319015377868))*((cj2)*(cj2))*((r02)*(r02))))+(((IkReal(-27.4115292892190))*(px)*(pz)*(r00)*(r02)*((cj0)*(cj0))))+(((IkReal(7.75746278884899))*(cj0)*(px)*(r01)*(r02)*(sj0)*(sj2)))+(((IkReal(7.75746278884899))*(cj0)*(py)*(r00)*(r02)*(sj0)*(sj2)))+(((IkReal(-7.75746278884899))*(cj2)*(j1)*(r01)*(r02)*(sj0)))+(((IkReal(-27.4115292892190))*(cj0)*(py)*(pz)*(r00)*(r02)*(sj0)))+(((IkReal(27.4115292892190))*(cj0)*(r00)*(r01)*(sj0)*((pz)*(pz))))+(((IkReal(-27.4115292892190))*(cj0)*(px)*(pz)*(r01)*(r02)*(sj0)))+(((IkReal(1.80463803075574))*(cj2)*(r01)*(r02)*(sj0)*(sj2)))+(((IkReal(1.31575340588251))*(pz)*(r01)*(r02)*(sj0)))+(((IkReal(-7.75746278884899))*(pz)*(sj2)*((r01)*(r01))*((sj0)*(sj0))))+(((IkReal(-1.31575340588251))*(cj0)*(px)*((r02)*(r02))))+(((IkReal(27.4115292892190))*(cj0)*(r00)*(r01)*(sj0)*((j1)*(j1))))+(((IkReal(27.4115292892190))*(cj0)*(j1)*(px)*(r01)*(r02)*(sj0)))+(((IkReal(27.4115292892190))*(cj0)*(j1)*(py)*(r00)*(r02)*(sj0)))+(((IkReal(-27.4115292892190))*(py)*(pz)*(r01)*(r02)*((sj0)*(sj0))))+(((IkReal(-0.902319015377868))*((r01)*(r01))*((sj0)*(sj0))*((sj2)*(sj2))))+(((IkReal(-7.75746278884899))*(pz)*(sj2)*((cj0)*(cj0))*((r00)*(r00))))+(((IkReal(15.5149255776980))*(cj0)*(j1)*(r00)*(r01)*(sj0)*(sj2)))+(((IkReal(13.7057646446095))*((cj0)*(cj0))*((pz)*(pz))*((r00)*(r00))))+(((IkReal(13.7057646446095))*((cj0)*(cj0))*((px)*(px))*((r02)*(r02))))+(((IkReal(-7.75746278884899))*(cj0)*(cj2)*(j1)*(r00)*(r02)))+(((IkReal(1.31575340588251))*(cj0)*(pz)*(r00)*(r02)))+(((IkReal(7.75746278884899))*(j1)*(sj2)*((cj0)*(cj0))*((r00)*(r00))))+(((IkReal(-1.31575340588251))*(py)*(sj0)*((r02)*(r02))))+(((IkReal(-15.5149255776980))*(cj0)*(pz)*(r00)*(r01)*(sj0)*(sj2)))+(((IkReal(13.7057646446095))*((j1)*(j1))*((r01)*(r01))*((sj0)*(sj0))))+(((IkReal(7.75746278884899))*(j1)*(sj2)*((r01)*(r01))*((sj0)*(sj0))))+(((IkReal(13.7057646446095))*((py)*(py))*((r02)*(r02))*((sj0)*(sj0))))+(((IkReal(-54.8230585784381))*(cj0)*(j1)*(pz)*(r00)*(r01)*(sj0)))+(((IkReal(0.372358213864752))*(cj2)*((r02)*(r02))))+(((IkReal(-0.372358213864752))*(r01)*(r02)*(sj0)*(sj2)))+(((IkReal(-0.372358213864752))*(cj0)*(r00)*(r02)*(sj2)))+(((IkReal(27.4115292892190))*(j1)*(py)*(r01)*(r02)*((sj0)*(sj0))))+(((IkReal(13.7057646446095))*((cj0)*(cj0))*((j1)*(j1))*((r00)*(r00))))+(((IkReal(27.4115292892190))*(cj0)*(px)*(py)*(sj0)*((r02)*(r02))))+(((IkReal(7.75746278884899))*(py)*(r01)*(r02)*(sj2)*((sj0)*(sj0))))+(((IkReal(7.75746278884899))*(cj0)*(cj2)*(pz)*(r00)*(r02)))+(((IkReal(7.75746278884899))*(px)*(r00)*(r02)*(sj2)*((cj0)*(cj0))))+(((IkReal(1.80463803075574))*(cj0)*(cj2)*(r00)*(r02)*(sj2)))+(((IkReal(0.0315780817411803))*((r02)*(r02))))+(((IkReal(-27.4115292892190))*(j1)*(pz)*((cj0)*(cj0))*((r00)*(r00))))+(((IkReal(-0.902319015377868))*((cj0)*(cj0))*((r00)*(r00))*((sj2)*(sj2))))+(((IkReal(-27.4115292892190))*(j1)*(pz)*((r01)*(r01))*((sj0)*(sj0))))+(((IkReal(-1.31575340588251))*(cj0)*(j1)*(r00)*(r02)))+(((IkReal(13.7057646446095))*((pz)*(pz))*((r01)*(r01))*((sj0)*(sj0))))+(((IkReal(7.75746278884899))*(cj2)*(pz)*(r01)*(r02)*(sj0))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst1)*(((((IkReal(0.657876702941257))*(px)*(r02)*(sj0)))+(((IkReal(152.286273828995))*(j1)*(pp)*(r01)*(sj0)))+(((IkReal(86.1940309872110))*(cj0)*(cj2)*(py)*(pz)*(r00)*(sj0)))+(((IkReal(-4.13731348738613))*(cj0)*(px)*(r01)*(sj0)*(sj2)))+(((IkReal(-86.1940309872110))*(cj0)*(cj2)*(j1)*(py)*(r00)*(sj0)))+(((IkReal(13.7057646446095))*(cj0)*(j1)*(py)*(r01)*(sj0)))+(((IkReal(14.6194822875835))*(px)*(pz)*(r00)*((cj0)*(cj0))))+(((IkReal(13.7057646446095))*(cj0)*(px)*(pz)*(r00)*(sj0)))+(((IkReal(12.4119404621584))*(cj2)*(py)*(r02)*(sj0)))+(((IkReal(-14.6194822875835))*(r02)*((cj0)*(cj0))*((px)*(px))))+(((IkReal(-152.286273828995))*(cj0)*(pp)*(pz)*(r00)))+(((IkReal(3.87873139442449))*(cj0)*(py)*(r01)*(sj0)*(sj2)))+(((IkReal(-2.00000000000000))*(r01)*(r02)*(sj0)*((cj2)*(cj2))))+(((IkReal(-86.1940309872110))*(cj2)*(r02)*((cj0)*(cj0))*((px)*(px))))+(((IkReal(152.286273828995))*(r01)*(sj0)*((j1)*(j1)*(j1))))+(((IkReal(-24.3929107693807))*(cj0)*(pz)*(r00)*((sj2)*(sj2))))+(((IkReal(-43.0970154936055))*(cj2)*(r02)*((j1)*(j1))))+(((IkReal(-152.286273828995))*(pp)*(pz)*(r01)*(sj0)))+(((IkReal(24.3929107693807))*(cj0)*(px)*(r02)*((cj2)*(cj2))))+(((IkReal(2.53940544392972))*(cj2)*(r02)))+(((IkReal(-7.30974114379175))*(r02)*((j1)*(j1))))+(((IkReal(-86.1940309872110))*(py)*(pz)*(r02)*(sj0)*(sj2)))+(((IkReal(24.3929107693807))*(cj0)*(j1)*(r00)*((sj2)*(sj2))))+(((IkReal(-29.2389645751670))*(cj0)*(px)*(py)*(r02)*(sj0)))+(((IkReal(86.1940309872110))*(r01)*(sj0)*(sj2)*((pz)*(pz))))+(((IkReal(-3.87873139442449))*(px)*(r01)*(sj2)*((sj0)*(sj0))))+(((IkReal(-14.6194822875835))*(j1)*(px)*(r00)*((cj0)*(cj0))))+(((IkReal(-0.657876702941257))*(cj0)*(py)*(r02)))+(((IkReal(-4.13731348738613))*(py)*(r01)*(sj2)*((sj0)*(sj0))))+(((IkReal(-13.7057646446095))*(px)*(py)*(r02)*((sj0)*(sj0))))+(((IkReal(-456.858821486984))*(pz)*(r01)*(sj0)*((j1)*(j1))))+(((IkReal(-2.00000000000000))*(cj2)*(sj2)*((r02)*(r02))))+(((IkReal(9.67489926262986))*(cj0)*(pz)*(r00)))+(((IkReal(-4.13731348738613))*(px)*(r00)*(sj2)*((cj0)*(cj0))))+(((IkReal(-86.1940309872110))*(cj2)*(r02)*((py)*(py))*((sj0)*(sj0))))+(((IkReal(-24.3929107693807))*(cj0)*(cj2)*(py)*(r00)*(sj0)*(sj2)))+(((IkReal(-13.7057646446095))*(py)*(pz)*(r00)*((cj0)*(cj0))))+(((IkReal(-3.87873139442449))*(cj0)*(cj2)*(py)*(r02)))+(((IkReal(-24.3929107693807))*(cj0)*(cj2)*(px)*(r01)*(sj0)*(sj2)))+(((IkReal(304.572547657989))*(j1)*(r01)*(sj0)*((pz)*(pz))))+(((IkReal(86.1940309872110))*(cj2)*(px)*(pz)*(r00)*((cj0)*(cj0))))+(((IkReal(43.0970154936055))*(pp)*(r01)*(sj0)*(sj2)))+(((IkReal(-14.6194822875835))*(r02)*((py)*(py))*((sj0)*(sj0))))+(((IkReal(24.3929107693807))*(j1)*(r01)*(sj0)*((sj2)*(sj2))))+(((IkReal(-4.13731348738613))*(cj0)*(cj2)*(pz)*(r00)))+(((IkReal(-43.0970154936055))*(cj2)*(pp)*(r02)))+(((IkReal(152.286273828995))*(cj0)*(j1)*(pp)*(r00)))+(((IkReal(-9.67489926262986))*(cj0)*(j1)*(r00)))+(((IkReal(304.572547657989))*(cj0)*(j1)*(r00)*((pz)*(pz))))+(((IkReal(14.6194822875835))*(j1)*(pz)*(r02)))+(((IkReal(86.1940309872110))*(cj2)*(py)*(pz)*(r01)*((sj0)*(sj0))))+(((IkReal(-24.3929107693807))*(cj2)*(py)*(r01)*(sj2)*((sj0)*(sj0))))+(((IkReal(-13.7057646446095))*(cj0)*(j1)*(px)*(r00)*(sj0)))+(((IkReal(152.286273828995))*(cj0)*(px)*(r02)*((j1)*(j1))))+(((IkReal(-9.67489926262986))*(j1)*(r01)*(sj0)))+(((IkReal(13.7057646446095))*(px)*(pz)*(r01)*((sj0)*(sj0))))+(((IkReal(86.1940309872110))*(cj0)*(j1)*(px)*(r02)*(sj2)))+(((IkReal(-172.388061974422))*(cj0)*(cj2)*(px)*(py)*(r02)*(sj0)))+(((IkReal(-14.6194822875835))*(cj0)*(j1)*(px)*(r01)*(sj0)))+(((IkReal(-86.1940309872110))*(cj0)*(px)*(pz)*(r02)*(sj2)))+(((IkReal(-24.3929107693807))*(pz)*(r01)*(sj0)*((sj2)*(sj2))))+(((IkReal(-24.3929107693807))*(cj2)*(px)*(r00)*(sj2)*((cj0)*(cj0))))+(((IkReal(152.286273828995))*(cj0)*(pp)*(px)*(r02)))+(((IkReal(-13.7057646446095))*(cj0)*(r02)*(sj0)*((px)*(px))))+(((IkReal(86.1940309872110))*(cj0)*(cj2)*(px)*(pz)*(r01)*(sj0)))+(((IkReal(2.00000000000000))*(cj2)*(sj2)*((cj0)*(cj0))*((r00)*(r00))))+(((IkReal(-304.572547657989))*(j1)*(py)*(pz)*(r02)*(sj0)))+(((IkReal(-86.1940309872110))*(cj2)*(j1)*(px)*(r00)*((cj0)*(cj0))))+(((IkReal(-3.87873139442449))*(cj0)*(px)*(r00)*(sj0)*(sj2)))+(((IkReal(-304.572547657989))*(cj0)*(j1)*(px)*(pz)*(r02)))+(((IkReal(152.286273828995))*(pp)*(py)*(r02)*(sj0)))+(((IkReal(129.291046480817))*(r01)*(sj0)*(sj2)*((j1)*(j1))))+(((IkReal(0.464395164606233))*(r02)))+(((IkReal(13.7057646446095))*(j1)*(py)*(r00)*((cj0)*(cj0))))+(((IkReal(-2.00000000000000))*(cj0)*(r00)*(r02)*((cj2)*(cj2))))+(((IkReal(-86.1940309872110))*(cj0)*(cj2)*(j1)*(px)*(r01)*(sj0)))+(((IkReal(-1.17085971693027))*(r02)*((cj2)*(cj2))))+(((IkReal(2.00000000000000))*(r01)*(r02)*(sj0)*((sj2)*(sj2))))+(((IkReal(-4.13731348738613))*(cj0)*(py)*(r00)*(sj0)*(sj2)))+(((IkReal(2.00000000000000))*(cj0)*(r00)*(r02)*((sj2)*(sj2))))+(((IkReal(-4.13731348738613))*(j1)*(r02)*(sj2)))+(((IkReal(-258.582092961633))*(j1)*(pz)*(r01)*(sj0)*(sj2)))+(((IkReal(129.291046480817))*(cj0)*(r00)*(sj2)*((j1)*(j1))))+(((IkReal(9.67489926262986))*(pz)*(r01)*(sj0)))+(((IkReal(86.1940309872110))*(cj0)*(r00)*(sj2)*((pz)*(pz))))+(((IkReal(-13.7057646446095))*(j1)*(px)*(r01)*((sj0)*(sj0))))+(((IkReal(-86.1940309872110))*(cj2)*(j1)*(py)*(r01)*((sj0)*(sj0))))+(((IkReal(13.7057646446095))*(cj0)*(r02)*(sj0)*((py)*(py))))+(((IkReal(-8.97316411282585))*(cj0)*(px)*(r02)))+(((IkReal(86.1940309872110))*(cj2)*(j1)*(pz)*(r02)))+(((IkReal(-13.7057646446095))*(cj0)*(py)*(pz)*(r01)*(sj0)))+(((IkReal(1.17085971693027))*(cj2)*(r01)*(sj0)*(sj2)))+(((IkReal(4.13731348738613))*(cj2)*(j1)*(r01)*(sj0)))+(((IkReal(43.0970154936055))*(cj0)*(pp)*(r00)*(sj2)))+(((IkReal(2.00000000000000))*(cj2)*(sj2)*((r01)*(r01))*((sj0)*(sj0))))+(((IkReal(-7.30974114379175))*(pp)*(r02)))+(((IkReal(-456.858821486984))*(cj0)*(pz)*(r00)*((j1)*(j1))))+(((IkReal(-4.13731348738613))*(cj2)*(pz)*(r01)*(sj0)))+(((IkReal(-24.3929107693807))*(cj2)*(j1)*(r02)*(sj2)))+(((IkReal(24.3929107693807))*(py)*(r02)*(sj0)*((cj2)*(cj2))))+(((IkReal(3.87873139442449))*(cj2)*(px)*(r02)*(sj0)))+(((IkReal(14.6194822875835))*(cj0)*(py)*(pz)*(r00)*(sj0)))+(((IkReal(4.13731348738613))*(pz)*(r02)*(sj2)))+(((IkReal(12.4119404621584))*(cj0)*(cj2)*(px)*(r02)))+(((IkReal(4.13731348738613))*(cj0)*(cj2)*(j1)*(r00)))+(((IkReal(-258.582092961633))*(cj0)*(j1)*(pz)*(r00)*(sj2)))+(((IkReal(152.286273828995))*(py)*(r02)*(sj0)*((j1)*(j1))))+(((IkReal(-8.97316411282585))*(py)*(r02)*(sj0)))+(((IkReal(14.6194822875835))*(py)*(pz)*(r01)*((sj0)*(sj0))))+(((IkReal(4.00000000000000))*(cj0)*(cj2)*(r00)*(r01)*(sj0)*(sj2)))+(((IkReal(152.286273828995))*(cj0)*(r00)*((j1)*(j1)*(j1))))+(((IkReal(-2.73799649132425))*(r01)*(sj0)*(sj2)))+(((IkReal(-14.6194822875835))*(j1)*(py)*(r01)*((sj0)*(sj0))))+(((IkReal(14.6194822875835))*(cj0)*(px)*(pz)*(r01)*(sj0)))+(((IkReal(1.17085971693027))*(cj0)*(cj2)*(r00)*(sj2)))+(((IkReal(-14.6194822875835))*(cj0)*(j1)*(py)*(r00)*(sj0)))+(((IkReal(3.87873139442449))*(py)*(r00)*(sj2)*((cj0)*(cj0))))+(((IkReal(13.7057646446095))*(px)*(py)*(r02)*((cj0)*(cj0))))+(((IkReal(-2.73799649132425))*(cj0)*(r00)*(sj2)))+(((IkReal(24.3929107693807))*(cj2)*(pz)*(r02)*(sj2)))+(((IkReal(86.1940309872110))*(j1)*(py)*(r02)*(sj0)*(sj2))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j3array[0]=IKatan2(((gconst1)*(((((IkReal(27.4115292892190))*(j1)*(px)*(r00)*(r02)*((cj0)*(cj0))))+(((IkReal(-7.75746278884899))*(cj2)*(py)*(sj0)*((r02)*(r02))))+(((IkReal(-1.31575340588251))*(j1)*(r01)*(r02)*(sj0)))+(((IkReal(-7.75746278884899))*(cj0)*(cj2)*(px)*((r02)*(r02))))+(((IkReal(-1.80463803075574))*(cj0)*(r00)*(r01)*(sj0)*((sj2)*(sj2))))+(((IkReal(-0.902319015377868))*((cj2)*(cj2))*((r02)*(r02))))+(((IkReal(-27.4115292892190))*(px)*(pz)*(r00)*(r02)*((cj0)*(cj0))))+(((IkReal(7.75746278884899))*(cj0)*(px)*(r01)*(r02)*(sj0)*(sj2)))+(((IkReal(7.75746278884899))*(cj0)*(py)*(r00)*(r02)*(sj0)*(sj2)))+(((IkReal(-7.75746278884899))*(cj2)*(j1)*(r01)*(r02)*(sj0)))+(((IkReal(-27.4115292892190))*(cj0)*(py)*(pz)*(r00)*(r02)*(sj0)))+(((IkReal(27.4115292892190))*(cj0)*(r00)*(r01)*(sj0)*((pz)*(pz))))+(((IkReal(-27.4115292892190))*(cj0)*(px)*(pz)*(r01)*(r02)*(sj0)))+(((IkReal(1.80463803075574))*(cj2)*(r01)*(r02)*(sj0)*(sj2)))+(((IkReal(1.31575340588251))*(pz)*(r01)*(r02)*(sj0)))+(((IkReal(-7.75746278884899))*(pz)*(sj2)*((r01)*(r01))*((sj0)*(sj0))))+(((IkReal(-1.31575340588251))*(cj0)*(px)*((r02)*(r02))))+(((IkReal(27.4115292892190))*(cj0)*(r00)*(r01)*(sj0)*((j1)*(j1))))+(((IkReal(27.4115292892190))*(cj0)*(j1)*(px)*(r01)*(r02)*(sj0)))+(((IkReal(27.4115292892190))*(cj0)*(j1)*(py)*(r00)*(r02)*(sj0)))+(((IkReal(-27.4115292892190))*(py)*(pz)*(r01)*(r02)*((sj0)*(sj0))))+(((IkReal(-0.902319015377868))*((r01)*(r01))*((sj0)*(sj0))*((sj2)*(sj2))))+(((IkReal(-7.75746278884899))*(pz)*(sj2)*((cj0)*(cj0))*((r00)*(r00))))+(((IkReal(15.5149255776980))*(cj0)*(j1)*(r00)*(r01)*(sj0)*(sj2)))+(((IkReal(13.7057646446095))*((cj0)*(cj0))*((pz)*(pz))*((r00)*(r00))))+(((IkReal(13.7057646446095))*((cj0)*(cj0))*((px)*(px))*((r02)*(r02))))+(((IkReal(-7.75746278884899))*(cj0)*(cj2)*(j1)*(r00)*(r02)))+(((IkReal(1.31575340588251))*(cj0)*(pz)*(r00)*(r02)))+(((IkReal(7.75746278884899))*(j1)*(sj2)*((cj0)*(cj0))*((r00)*(r00))))+(((IkReal(-1.31575340588251))*(py)*(sj0)*((r02)*(r02))))+(((IkReal(-15.5149255776980))*(cj0)*(pz)*(r00)*(r01)*(sj0)*(sj2)))+(((IkReal(13.7057646446095))*((j1)*(j1))*((r01)*(r01))*((sj0)*(sj0))))+(((IkReal(7.75746278884899))*(j1)*(sj2)*((r01)*(r01))*((sj0)*(sj0))))+(((IkReal(13.7057646446095))*((py)*(py))*((r02)*(r02))*((sj0)*(sj0))))+(((IkReal(-54.8230585784381))*(cj0)*(j1)*(pz)*(r00)*(r01)*(sj0)))+(((IkReal(0.372358213864752))*(cj2)*((r02)*(r02))))+(((IkReal(-0.372358213864752))*(r01)*(r02)*(sj0)*(sj2)))+(((IkReal(-0.372358213864752))*(cj0)*(r00)*(r02)*(sj2)))+(((IkReal(27.4115292892190))*(j1)*(py)*(r01)*(r02)*((sj0)*(sj0))))+(((IkReal(13.7057646446095))*((cj0)*(cj0))*((j1)*(j1))*((r00)*(r00))))+(((IkReal(27.4115292892190))*(cj0)*(px)*(py)*(sj0)*((r02)*(r02))))+(((IkReal(7.75746278884899))*(py)*(r01)*(r02)*(sj2)*((sj0)*(sj0))))+(((IkReal(7.75746278884899))*(cj0)*(cj2)*(pz)*(r00)*(r02)))+(((IkReal(7.75746278884899))*(px)*(r00)*(r02)*(sj2)*((cj0)*(cj0))))+(((IkReal(1.80463803075574))*(cj0)*(cj2)*(r00)*(r02)*(sj2)))+(((IkReal(0.0315780817411803))*((r02)*(r02))))+(((IkReal(-27.4115292892190))*(j1)*(pz)*((cj0)*(cj0))*((r00)*(r00))))+(((IkReal(-0.902319015377868))*((cj0)*(cj0))*((r00)*(r00))*((sj2)*(sj2))))+(((IkReal(-27.4115292892190))*(j1)*(pz)*((r01)*(r01))*((sj0)*(sj0))))+(((IkReal(-1.31575340588251))*(cj0)*(j1)*(r00)*(r02)))+(((IkReal(13.7057646446095))*((pz)*(pz))*((r01)*(r01))*((sj0)*(sj0))))+(((IkReal(7.75746278884899))*(cj2)*(pz)*(r01)*(r02)*(sj0)))))), ((gconst1)*(((((IkReal(0.657876702941257))*(px)*(r02)*(sj0)))+(((IkReal(152.286273828995))*(j1)*(pp)*(r01)*(sj0)))+(((IkReal(86.1940309872110))*(cj0)*(cj2)*(py)*(pz)*(r00)*(sj0)))+(((IkReal(-4.13731348738613))*(cj0)*(px)*(r01)*(sj0)*(sj2)))+(((IkReal(-86.1940309872110))*(cj0)*(cj2)*(j1)*(py)*(r00)*(sj0)))+(((IkReal(13.7057646446095))*(cj0)*(j1)*(py)*(r01)*(sj0)))+(((IkReal(14.6194822875835))*(px)*(pz)*(r00)*((cj0)*(cj0))))+(((IkReal(13.7057646446095))*(cj0)*(px)*(pz)*(r00)*(sj0)))+(((IkReal(12.4119404621584))*(cj2)*(py)*(r02)*(sj0)))+(((IkReal(-14.6194822875835))*(r02)*((cj0)*(cj0))*((px)*(px))))+(((IkReal(-152.286273828995))*(cj0)*(pp)*(pz)*(r00)))+(((IkReal(3.87873139442449))*(cj0)*(py)*(r01)*(sj0)*(sj2)))+(((IkReal(-2.00000000000000))*(r01)*(r02)*(sj0)*((cj2)*(cj2))))+(((IkReal(-86.1940309872110))*(cj2)*(r02)*((cj0)*(cj0))*((px)*(px))))+(((IkReal(152.286273828995))*(r01)*(sj0)*((j1)*(j1)*(j1))))+(((IkReal(-24.3929107693807))*(cj0)*(pz)*(r00)*((sj2)*(sj2))))+(((IkReal(-43.0970154936055))*(cj2)*(r02)*((j1)*(j1))))+(((IkReal(-152.286273828995))*(pp)*(pz)*(r01)*(sj0)))+(((IkReal(24.3929107693807))*(cj0)*(px)*(r02)*((cj2)*(cj2))))+(((IkReal(2.53940544392972))*(cj2)*(r02)))+(((IkReal(-7.30974114379175))*(r02)*((j1)*(j1))))+(((IkReal(-86.1940309872110))*(py)*(pz)*(r02)*(sj0)*(sj2)))+(((IkReal(24.3929107693807))*(cj0)*(j1)*(r00)*((sj2)*(sj2))))+(((IkReal(-29.2389645751670))*(cj0)*(px)*(py)*(r02)*(sj0)))+(((IkReal(86.1940309872110))*(r01)*(sj0)*(sj2)*((pz)*(pz))))+(((IkReal(-3.87873139442449))*(px)*(r01)*(sj2)*((sj0)*(sj0))))+(((IkReal(-14.6194822875835))*(j1)*(px)*(r00)*((cj0)*(cj0))))+(((IkReal(-0.657876702941257))*(cj0)*(py)*(r02)))+(((IkReal(-4.13731348738613))*(py)*(r01)*(sj2)*((sj0)*(sj0))))+(((IkReal(-13.7057646446095))*(px)*(py)*(r02)*((sj0)*(sj0))))+(((IkReal(-456.858821486984))*(pz)*(r01)*(sj0)*((j1)*(j1))))+(((IkReal(-2.00000000000000))*(cj2)*(sj2)*((r02)*(r02))))+(((IkReal(9.67489926262986))*(cj0)*(pz)*(r00)))+(((IkReal(-4.13731348738613))*(px)*(r00)*(sj2)*((cj0)*(cj0))))+(((IkReal(-86.1940309872110))*(cj2)*(r02)*((py)*(py))*((sj0)*(sj0))))+(((IkReal(-24.3929107693807))*(cj0)*(cj2)*(py)*(r00)*(sj0)*(sj2)))+(((IkReal(-13.7057646446095))*(py)*(pz)*(r00)*((cj0)*(cj0))))+(((IkReal(-3.87873139442449))*(cj0)*(cj2)*(py)*(r02)))+(((IkReal(-24.3929107693807))*(cj0)*(cj2)*(px)*(r01)*(sj0)*(sj2)))+(((IkReal(304.572547657989))*(j1)*(r01)*(sj0)*((pz)*(pz))))+(((IkReal(86.1940309872110))*(cj2)*(px)*(pz)*(r00)*((cj0)*(cj0))))+(((IkReal(43.0970154936055))*(pp)*(r01)*(sj0)*(sj2)))+(((IkReal(-14.6194822875835))*(r02)*((py)*(py))*((sj0)*(sj0))))+(((IkReal(24.3929107693807))*(j1)*(r01)*(sj0)*((sj2)*(sj2))))+(((IkReal(-4.13731348738613))*(cj0)*(cj2)*(pz)*(r00)))+(((IkReal(-43.0970154936055))*(cj2)*(pp)*(r02)))+(((IkReal(152.286273828995))*(cj0)*(j1)*(pp)*(r00)))+(((IkReal(-9.67489926262986))*(cj0)*(j1)*(r00)))+(((IkReal(304.572547657989))*(cj0)*(j1)*(r00)*((pz)*(pz))))+(((IkReal(14.6194822875835))*(j1)*(pz)*(r02)))+(((IkReal(86.1940309872110))*(cj2)*(py)*(pz)*(r01)*((sj0)*(sj0))))+(((IkReal(-24.3929107693807))*(cj2)*(py)*(r01)*(sj2)*((sj0)*(sj0))))+(((IkReal(-13.7057646446095))*(cj0)*(j1)*(px)*(r00)*(sj0)))+(((IkReal(152.286273828995))*(cj0)*(px)*(r02)*((j1)*(j1))))+(((IkReal(-9.67489926262986))*(j1)*(r01)*(sj0)))+(((IkReal(13.7057646446095))*(px)*(pz)*(r01)*((sj0)*(sj0))))+(((IkReal(86.1940309872110))*(cj0)*(j1)*(px)*(r02)*(sj2)))+(((IkReal(-172.388061974422))*(cj0)*(cj2)*(px)*(py)*(r02)*(sj0)))+(((IkReal(-14.6194822875835))*(cj0)*(j1)*(px)*(r01)*(sj0)))+(((IkReal(-86.1940309872110))*(cj0)*(px)*(pz)*(r02)*(sj2)))+(((IkReal(-24.3929107693807))*(pz)*(r01)*(sj0)*((sj2)*(sj2))))+(((IkReal(-24.3929107693807))*(cj2)*(px)*(r00)*(sj2)*((cj0)*(cj0))))+(((IkReal(152.286273828995))*(cj0)*(pp)*(px)*(r02)))+(((IkReal(-13.7057646446095))*(cj0)*(r02)*(sj0)*((px)*(px))))+(((IkReal(86.1940309872110))*(cj0)*(cj2)*(px)*(pz)*(r01)*(sj0)))+(((IkReal(2.00000000000000))*(cj2)*(sj2)*((cj0)*(cj0))*((r00)*(r00))))+(((IkReal(-304.572547657989))*(j1)*(py)*(pz)*(r02)*(sj0)))+(((IkReal(-86.1940309872110))*(cj2)*(j1)*(px)*(r00)*((cj0)*(cj0))))+(((IkReal(-3.87873139442449))*(cj0)*(px)*(r00)*(sj0)*(sj2)))+(((IkReal(-304.572547657989))*(cj0)*(j1)*(px)*(pz)*(r02)))+(((IkReal(152.286273828995))*(pp)*(py)*(r02)*(sj0)))+(((IkReal(129.291046480817))*(r01)*(sj0)*(sj2)*((j1)*(j1))))+(((IkReal(0.464395164606233))*(r02)))+(((IkReal(13.7057646446095))*(j1)*(py)*(r00)*((cj0)*(cj0))))+(((IkReal(-2.00000000000000))*(cj0)*(r00)*(r02)*((cj2)*(cj2))))+(((IkReal(-86.1940309872110))*(cj0)*(cj2)*(j1)*(px)*(r01)*(sj0)))+(((IkReal(-1.17085971693027))*(r02)*((cj2)*(cj2))))+(((IkReal(2.00000000000000))*(r01)*(r02)*(sj0)*((sj2)*(sj2))))+(((IkReal(-4.13731348738613))*(cj0)*(py)*(r00)*(sj0)*(sj2)))+(((IkReal(2.00000000000000))*(cj0)*(r00)*(r02)*((sj2)*(sj2))))+(((IkReal(-4.13731348738613))*(j1)*(r02)*(sj2)))+(((IkReal(-258.582092961633))*(j1)*(pz)*(r01)*(sj0)*(sj2)))+(((IkReal(129.291046480817))*(cj0)*(r00)*(sj2)*((j1)*(j1))))+(((IkReal(9.67489926262986))*(pz)*(r01)*(sj0)))+(((IkReal(86.1940309872110))*(cj0)*(r00)*(sj2)*((pz)*(pz))))+(((IkReal(-13.7057646446095))*(j1)*(px)*(r01)*((sj0)*(sj0))))+(((IkReal(-86.1940309872110))*(cj2)*(j1)*(py)*(r01)*((sj0)*(sj0))))+(((IkReal(13.7057646446095))*(cj0)*(r02)*(sj0)*((py)*(py))))+(((IkReal(-8.97316411282585))*(cj0)*(px)*(r02)))+(((IkReal(86.1940309872110))*(cj2)*(j1)*(pz)*(r02)))+(((IkReal(-13.7057646446095))*(cj0)*(py)*(pz)*(r01)*(sj0)))+(((IkReal(1.17085971693027))*(cj2)*(r01)*(sj0)*(sj2)))+(((IkReal(4.13731348738613))*(cj2)*(j1)*(r01)*(sj0)))+(((IkReal(43.0970154936055))*(cj0)*(pp)*(r00)*(sj2)))+(((IkReal(2.00000000000000))*(cj2)*(sj2)*((r01)*(r01))*((sj0)*(sj0))))+(((IkReal(-7.30974114379175))*(pp)*(r02)))+(((IkReal(-456.858821486984))*(cj0)*(pz)*(r00)*((j1)*(j1))))+(((IkReal(-4.13731348738613))*(cj2)*(pz)*(r01)*(sj0)))+(((IkReal(-24.3929107693807))*(cj2)*(j1)*(r02)*(sj2)))+(((IkReal(24.3929107693807))*(py)*(r02)*(sj0)*((cj2)*(cj2))))+(((IkReal(3.87873139442449))*(cj2)*(px)*(r02)*(sj0)))+(((IkReal(14.6194822875835))*(cj0)*(py)*(pz)*(r00)*(sj0)))+(((IkReal(4.13731348738613))*(pz)*(r02)*(sj2)))+(((IkReal(12.4119404621584))*(cj0)*(cj2)*(px)*(r02)))+(((IkReal(4.13731348738613))*(cj0)*(cj2)*(j1)*(r00)))+(((IkReal(-258.582092961633))*(cj0)*(j1)*(pz)*(r00)*(sj2)))+(((IkReal(152.286273828995))*(py)*(r02)*(sj0)*((j1)*(j1))))+(((IkReal(-8.97316411282585))*(py)*(r02)*(sj0)))+(((IkReal(14.6194822875835))*(py)*(pz)*(r01)*((sj0)*(sj0))))+(((IkReal(4.00000000000000))*(cj0)*(cj2)*(r00)*(r01)*(sj0)*(sj2)))+(((IkReal(152.286273828995))*(cj0)*(r00)*((j1)*(j1)*(j1))))+(((IkReal(-2.73799649132425))*(r01)*(sj0)*(sj2)))+(((IkReal(-14.6194822875835))*(j1)*(py)*(r01)*((sj0)*(sj0))))+(((IkReal(14.6194822875835))*(cj0)*(px)*(pz)*(r01)*(sj0)))+(((IkReal(1.17085971693027))*(cj0)*(cj2)*(r00)*(sj2)))+(((IkReal(-14.6194822875835))*(cj0)*(j1)*(py)*(r00)*(sj0)))+(((IkReal(3.87873139442449))*(py)*(r00)*(sj2)*((cj0)*(cj0))))+(((IkReal(13.7057646446095))*(px)*(py)*(r02)*((cj0)*(cj0))))+(((IkReal(-2.73799649132425))*(cj0)*(r00)*(sj2)))+(((IkReal(24.3929107693807))*(cj2)*(pz)*(r02)*(sj2)))+(((IkReal(86.1940309872110))*(j1)*(py)*(r02)*(sj0)*(sj2)))))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[16];
IkReal x106=IKcos(j3);
IkReal x107=IKsin(j3);
IkReal x108=((IkReal(0.125654450261780))*(r02));
IkReal x109=(j1)*(j1);
IkReal x110=((IkReal(1.30890052356021))*(pp));
IkReal x111=((IkReal(0.790226876090750))*(cj2));
IkReal x112=((IkReal(29.0866783013380))*(pp));
IkReal x113=((cj2)*(j1));
IkReal x114=((IkReal(0.00565445026178010))*(r02));
IkReal x115=((IkReal(0.0480000000000000))*(sj2));
IkReal x116=((IkReal(0.0450000000000000))*(r02));
IkReal x117=((pz)*(r01));
IkReal x118=((cj0)*(r01));
IkReal x119=((py)*(sj0));
IkReal x120=((IkReal(0.0124397905759162))*(cj2));
IkReal x121=((IkReal(0.665000000000000))*(r00));
IkReal x122=((cj0)*(r00));
IkReal x123=((IkReal(2.61780104712042))*(pz));
IkReal x124=((IkReal(16.4630599185573))*(cj2));
IkReal x125=((IkReal(1.74083769633508))*(sj2));
IkReal x126=((IkReal(1.00000000000000))*(cj0));
IkReal x127=((py)*(sj2));
IkReal x128=((IkReal(1.74083769633508))*(r02));
IkReal x129=((px)*(r01));
IkReal x130=((IkReal(16.4630599185573))*(j1));
IkReal x131=((IkReal(1.00000000000000))*(j1));
IkReal x132=((py)*(r02));
IkReal x133=((px)*(sj0));
IkReal x134=((IkReal(0.259162303664921))*(pz));
IkReal x135=((cj2)*(r02));
IkReal x136=((IkReal(0.0990000000000000))*(r00));
IkReal x137=((r01)*(sj0));
IkReal x138=((IkReal(1.00000000000000))*(r00));
IkReal x139=((IkReal(58.1733566026760))*(pz));
IkReal x140=((IkReal(0.117801047120419))*(j1));
IkReal x141=((pz)*(sj0));
IkReal x142=((cj0)*(px));
IkReal x143=((cj2)*(r00));
IkReal x144=((IkReal(1.00000000000000))*(r02));
IkReal x145=((IkReal(1.74083769633508))*(cj2));
IkReal x146=((j1)*(sj2));
IkReal x147=((IkReal(0.117801047120419))*(r02));
IkReal x148=((IkReal(1.00000000000000))*(cj2));
IkReal x149=((r02)*(sj2));
IkReal x150=((r00)*(sj0));
IkReal x151=((py)*(r00));
IkReal x152=((IkReal(0.117801047120419))*(pz));
IkReal x153=((IkReal(2.61780104712042))*(j1));
IkReal x154=((IkReal(2.61780104712042))*(sj0));
IkReal x155=((IkReal(0.259162303664921))*(cj2));
IkReal x156=((IkReal(2.61780104712042))*(r02));
IkReal x157=((cj0)*(cj2));
IkReal x158=((cj0)*(py));
IkReal x159=((IkReal(16.4630599185573))*(pz));
IkReal x160=((IkReal(1.00000000000000))*(pz));
IkReal x161=((IkReal(0.0333376963350785))*(r02));
IkReal x162=((IkReal(0.259162303664921))*(j1));
IkReal x163=((IkReal(0.0450000000000000))*(cj2));
IkReal x164=((IkReal(0.259162303664921))*(r02));
IkReal x165=((IkReal(1.00000000000000))*(sj2));
IkReal x166=((IkReal(1.84790575916230))*(x107));
IkReal x167=((IkReal(0.117801047120419))*(x158));
IkReal x168=((IkReal(1.30890052356021))*(x109));
IkReal x169=((IkReal(0.125654450261780))*(x119));
IkReal x170=((IkReal(0.125654450261780))*(x142));
IkReal x171=((j1)*(x123));
IkReal x172=((IkReal(0.117801047120419))*(x133));
IkReal x173=((j1)*(x139));
IkReal x174=((IkReal(2.79232111692845))*(x119));
IkReal x175=((IkReal(2.61780104712042))*(x133));
IkReal x176=((IkReal(1.84790575916230))*(x106));
IkReal x177=((sj2)*(x159));
IkReal x178=((IkReal(2.79232111692845))*(x142));
IkReal x179=((IkReal(29.0866783013380))*(x109));
IkReal x180=((sj2)*(x130));
IkReal x181=((IkReal(2.61780104712042))*(x158));
IkReal x182=((sj2)*(x142));
IkReal x183=((sj2)*(x119));
IkReal x184=((IkReal(0.0333376963350785))*(x135));
IkReal x185=((pz)*(x148));
IkReal x186=((cj2)*(x116));
IkReal x187=((cj2)*(x129));
IkReal x188=((sj2)*(x116));
IkReal x189=((sj2)*(x107));
IkReal x190=((sj0)*(x107));
IkReal x191=((cj2)*(x106));
IkReal x192=((cj2)*(x107));
IkReal x193=((r02)*(x106));
IkReal x194=((sj2)*(x137));
IkReal x195=((sj2)*(x106));
IkReal x196=((j1)*(x106));
IkReal x197=((pz)*(x106));
IkReal x198=((IkReal(0.125654450261780))*(x106));
IkReal x199=((r02)*(x107));
IkReal x200=((IkReal(0.117801047120419))*(x106));
IkReal x201=((IkReal(2.79232111692845))*(x106));
IkReal x202=((sj0)*(x106));
IkReal x203=((IkReal(2.61780104712042))*(x106));
IkReal x204=((j1)*(x107));
IkReal x205=((x117)*(x154));
IkReal x206=((x122)*(x123));
IkReal x207=((x122)*(x153));
IkReal x208=((x106)*(x108));
IkReal x209=((x119)*(x156));
IkReal x210=((x142)*(x156));
IkReal x211=((x107)*(x111));
IkReal x212=((x137)*(x153));
IkReal x213=((x107)*(x112));
IkReal x214=((x107)*(x113));
IkReal x215=((x107)*(x114));
IkReal x216=((x107)*(x115));
IkReal x217=((x106)*(x110));
IkReal x218=((x124)*(x142));
IkReal x219=((x119)*(x124));
IkReal x220=((x107)*(x108));
IkReal x221=((x106)*(x111));
IkReal x222=((x106)*(x112));
IkReal x223=((x106)*(x115));
IkReal x224=((x106)*(x114));
IkReal x225=((IkReal(0.0333376963350785))*(x194));
IkReal x226=((x142)*(x147));
IkReal x227=((x107)*(x110));
IkReal x228=((IkReal(0.0333376963350785))*(sj2)*(x122));
IkReal x229=((x122)*(x140));
IkReal x230=((x119)*(x147));
IkReal x231=((x137)*(x140));
IkReal x232=((IkReal(0.117801047120419))*(sj0)*(x117));
IkReal x233=((x122)*(x152));
IkReal x234=((x115)*(x150));
IkReal x235=((x115)*(x118));
IkReal x236=((IkReal(0.0450000000000000))*(sj2)*(x122));
IkReal x237=((IkReal(0.0450000000000000))*(x194));
IkReal x238=((x146)*(x150));
IkReal x239=((x133)*(x149));
IkReal x240=((cj0)*(sj2)*(x117));
IkReal x241=((IkReal(0.0480000000000000))*(sj0)*(x143));
IkReal x242=((x137)*(x163));
IkReal x243=((cj2)*(py)*(x138));
IkReal x244=((IkReal(0.0480000000000000))*(cj2)*(x118));
IkReal x245=((x122)*(x163));
IkReal x246=((x106)*(x109));
IkReal x247=((x107)*(x175));
IkReal x248=((x107)*(x178));
IkReal x249=((x107)*(x177));
IkReal x250=((x107)*(x174));
IkReal x251=((x107)*(x173));
IkReal x252=((x107)*(x179));
IkReal x253=((x107)*(x180));
IkReal x254=((x107)*(x181));
IkReal x255=((x106)*(x172));
IkReal x256=((x107)*(x182));
IkReal x257=((x107)*(x184));
IkReal x258=((x106)*(x170));
IkReal x259=((x106)*(x169));
IkReal x260=((x107)*(x183));
IkReal x261=((x106)*(x171));
IkReal x262=((x106)*(x167));
IkReal x263=((x107)*(x185));
IkReal x264=((x106)*(x168));
IkReal x265=((x106)*(x178));
IkReal x266=((x106)*(x174));
IkReal x267=((x106)*(x177));
IkReal x268=((x106)*(x175));
IkReal x269=((x106)*(x173));
IkReal x270=((x106)*(x181));
IkReal x271=((x106)*(x179));
IkReal x272=((x144)*(x195));
IkReal x273=((x106)*(x180));
IkReal x274=((x107)*(x168));
IkReal x275=((x107)*(x167));
IkReal x276=((x106)*(x184));
IkReal x277=((x107)*(x172));
IkReal x278=((x107)*(x170));
IkReal x279=((x107)*(x171));
IkReal x280=((x107)*(x169));
IkReal x281=((x107)*(x187));
IkReal x282=((x129)*(x195));
IkReal x283=((x106)*(x186));
IkReal x284=((x107)*(x188));
IkReal x285=((x107)*(x186));
IkReal x286=((x106)*(x188));
IkReal x287=((r02)*(x126)*(x127));
IkReal x288=((sj2)*(x118)*(x131));
IkReal x289=((sj2)*(x138)*(x141));
IkReal x290=((x122)*(x195));
IkReal x291=((x106)*(x207));
IkReal x292=((x106)*(x210));
IkReal x293=((x106)*(x212));
IkReal x294=((x107)*(x219));
IkReal x295=((x107)*(x218));
IkReal x296=((x106)*(x209));
IkReal x297=((x106)*(x205));
IkReal x298=((x106)*(x206));
IkReal x299=((x107)*(x233));
IkReal x300=((IkReal(0.117801047120419))*(x117)*(x190));
IkReal x301=((x107)*(x231));
IkReal x302=((IkReal(0.0333376963350785))*(x137)*(x189));
IkReal x303=((IkReal(0.0333376963350785))*(x122)*(x189));
IkReal x304=((x107)*(x230));
IkReal x305=((x107)*(x229));
IkReal x306=((x107)*(x226));
IkReal x307=((x107)*(x206));
IkReal x308=((x106)*(x218));
IkReal x309=((x107)*(x205));
IkReal x310=((x106)*(x219));
IkReal x311=((x107)*(x210));
IkReal x312=((x107)*(x209));
IkReal x313=((x106)*(x137)*(x148));
IkReal x314=((x107)*(x207));
IkReal x315=((x106)*(x122)*(x148));
IkReal x316=((x107)*(x212));
IkReal x317=((sj0)*(x117)*(x200));
IkReal x318=((x106)*(x233));
IkReal x319=((IkReal(0.0333376963350785))*(x290));
IkReal x320=((x106)*(x230));
IkReal x321=((x106)*(x231));
IkReal x322=((x106)*(x226));
IkReal x323=((x106)*(x229));
IkReal x324=((x106)*(x225));
IkReal x325=((IkReal(0.0480000000000000))*(x143)*(x190));
IkReal x326=((x106)*(x132)*(x157));
IkReal x327=((x106)*(x113)*(x118));
IkReal x328=((x107)*(x238));
IkReal x329=((x106)*(x141)*(x143));
IkReal x330=((x107)*(x239));
IkReal x331=((x150)*(x223));
IkReal x332=((cj0)*(x117)*(x189));
IkReal x333=((IkReal(0.0450000000000000))*(x290));
IkReal x334=((IkReal(0.0480000000000000))*(x118)*(x192));
IkReal x335=((x118)*(x223));
IkReal x336=((x106)*(x127)*(x138));
IkReal x337=((x106)*(x237));
IkReal x338=((py)*(x138)*(x192));
IkReal x339=((x107)*(x245));
IkReal x340=((x107)*(x242));
IkReal x341=((IkReal(0.0480000000000000))*(x118)*(x191));
IkReal x342=((x150)*(x216));
IkReal x343=((x106)*(x245));
IkReal x344=((x106)*(x242));
IkReal x345=((x118)*(x216));
IkReal x346=((IkReal(0.0480000000000000))*(x143)*(x202));
IkReal x347=((IkReal(0.0450000000000000))*(x137)*(x189));
IkReal x348=((IkReal(0.0450000000000000))*(x122)*(x189));
IkReal x349=((x117)*(x126)*(x191));
IkReal x350=((x113)*(x138)*(x202));
IkReal x351=((x138)*(x141)*(x189));
IkReal x352=((x126)*(x127)*(x199));
IkReal x353=((x118)*(x131)*(x189));
IkReal x354=((IkReal(1.00000000000000))*(x106)*(x133)*(x135));
IkReal x355=((x186)+(x234));
IkReal x356=((x108)+(x206)+(x205));
IkReal x357=((x236)+(x237)+(x235));
IkReal x358=((x114)+(x184)+(x232)+(x233));
IkReal x359=((x210)+(x212)+(x207)+(x209));
IkReal x360=((x187)+(x238)+(x239)+(x241)+(x240));
IkReal x361=((x171)+(x170)+(x172)+(x169)+(x216)+(x263));
IkReal x362=((x168)+(x167)+(x110)+(x214)+(x256)+(x260));
IkReal x363=((x346)+(x347)+(x345)+(x348));
IkReal x364=((IkReal(1.84790575916230))+(x178)+(x173)+(x175)+(x174)+(x177)+(x218)+(x219));
IkReal x365=((x229)+(x228)+(x223)+(x225)+(x226)+(x230)+(x231));
IkReal x366=((x179)+(x112)+(x111)+(x180)+(x181)+(x315)+(x313)+(x272));
IkReal x367=((x188)+(x243)+(x242)+(x245)+(x244)+(x289)+(x288)+(x287));
IkReal x368=((x342)+(x343)+(x341)+(x344)+(x286)+(x285));
IkReal x369=((x211)+(x213)+(x254)+(x252)+(x253)+(x208)+(x298)+(x297));
IkReal x370=((x300)+(x215)+(x258)+(x259)+(x255)+(x257)+(x299)+(x261));
IkReal x371=((x113)+(x182)+(x183)+(x318)+(x317)+(x224)+(x227)+(x276)+(x274)+(x275));
IkReal x372=((x314)+(x316)+(x311)+(x312)+(x221)+(x222)+(x273)+(x270)+(x271));
IkReal x373=((x306)+(x304)+(x305)+(x302)+(x303)+(x301)+(x217)+(x264)+(x262));
IkReal x374=((x176)+(x308)+(x309)+(x307)+(x310)+(x220)+(x265)+(x267)+(x266)+(x269)+(x268));
IkReal x375=((x115)+(x185)+(x324)+(x320)+(x321)+(x322)+(x323)+(x319)+(x277)+(x278)+(x279)+(x280));
IkReal x376=((x332)+(x331)+(x330)+(x325)+(x326)+(x327)+(x328)+(x329)+(x283)+(x282)+(x281));
IkReal x377=((x166)+(x250)+(x251)+(x291)+(x292)+(x293)+(x294)+(x295)+(x296)+(x247)+(x249)+(x248));
IkReal x378=((x339)+(x338)+(x333)+(x337)+(x336)+(x335)+(x334)+(x351)+(x350)+(x353)+(x352)+(x354)+(x340)+(x349)+(x284));
evalcond[0]=((((x106)*(x125)*(x137)))+(((x137)*(x192)))+(((IkReal(-1.00000000000000))*(x369)))+(((IkReal(-1.00000000000000))*(x356)))+(((x107)*(x149)))+(((IkReal(-1.00000000000000))*(x128)*(x191)))+(((IkReal(-1.00000000000000))*(cj2)*(x128)))+(((x122)*(x125)))+(((x106)*(x122)*(x125)))+(x359)+(x377)+(((x125)*(x137)))+(((x122)*(x192))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x144)*(x189)))+(((IkReal(-0.259162303664921))*(x290)))+(((IkReal(0.259162303664921))*(sj2)*(x122)))+(((IkReal(-1.00000000000000))*(x107)*(x137)*(x148)))+(((IkReal(-1.00000000000000))*(x369)))+(((IkReal(-1.00000000000000))*(x359)))+(((IkReal(-0.259162303664921))*(x106)*(x194)))+(((IkReal(0.259162303664921))*(x106)*(x135)))+(x356)+(x377)+(((IkReal(-1.00000000000000))*(x107)*(x122)*(x148)))+(((IkReal(-0.259162303664921))*(x135)))+(((IkReal(0.259162303664921))*(x194))));
evalcond[2]=((IkReal(0.581844240837696))+(((IkReal(-1.00000000000000))*(pz)*(x125)))+(((IkReal(-1.00000000000000))*(x142)*(x145)))+(((IkReal(-1.00000000000000))*(x361)))+(((IkReal(-1.00000000000000))*(x370)))+(((IkReal(0.0835602094240838))*(cj2)))+(((IkReal(0.0835602094240838))*(x191)))+(((IkReal(-1.00000000000000))*(x106)*(x142)*(x145)))+(((IkReal(-1.00000000000000))*(x125)*(x197)))+(x373)+(x362)+(((IkReal(-1.00000000000000))*(x106)*(x119)*(x145)))+(((j1)*(x125)))+(((IkReal(-1.00000000000000))*(x119)*(x145)))+(((IkReal(0.581844240837696))*(x106)))+(((x125)*(x196))));
evalcond[3]=((IkReal(0.0158442408376963))+(((IkReal(-0.0158442408376963))*(x106)))+(((x142)*(x155)))+(((IkReal(-1.00000000000000))*(x361)))+(((x106)*(x120)))+(((IkReal(-1.00000000000000))*(x373)))+(((IkReal(-1.00000000000000))*(x106)*(x142)*(x155)))+(((sj2)*(x134)))+(((IkReal(-0.259162303664921))*(x146)))+(((IkReal(-1.00000000000000))*(x120)))+(x370)+(x362)+(((x119)*(x155)))+(((IkReal(-1.00000000000000))*(x106)*(x119)*(x155)))+(((IkReal(-1.00000000000000))*(x134)*(x195)))+(((IkReal(0.259162303664921))*(x106)*(x146))));
evalcond[4]=((((cj2)*(x122)))+(((cj2)*(x137)))+(((IkReal(-1.00000000000000))*(x366)))+(((x107)*(x125)*(x137)))+(((IkReal(-1.00000000000000))*(x374)))+(((IkReal(-1.00000000000000))*(x128)*(x192)))+(x149)+(x372)+(x364)+(((x107)*(x122)*(x125))));
evalcond[5]=((((IkReal(-1.00000000000000))*(x137)*(x148)))+(((IkReal(0.259162303664921))*(x137)*(x189)))+(((IkReal(-1.00000000000000))*(x366)))+(((IkReal(-1.00000000000000))*(x372)))+(((IkReal(0.259162303664921))*(x122)*(x189)))+(((IkReal(-1.00000000000000))*(x122)*(x148)))+(x374)+(x364)+(((IkReal(-1.00000000000000))*(sj2)*(x144)))+(((IkReal(-0.259162303664921))*(x107)*(x135))));
evalcond[6]=((((x106)*(x183)))+(((x106)*(x182)))+(((x107)*(x119)*(x155)))+(((x106)*(x113)))+(((IkReal(-1.00000000000000))*(x365)))+(((x107)*(x142)*(x155)))+(((IkReal(-1.00000000000000))*(x375)))+(((IkReal(-0.259162303664921))*(x107)*(x146)))+(((IkReal(-1.00000000000000))*(x106)*(x185)))+(((IkReal(-1.00000000000000))*(x107)*(x120)))+(x358)+(x371)+(((x134)*(x189)))+(((IkReal(0.0158442408376963))*(x107))));
evalcond[7]=((((IkReal(-1.00000000000000))*(x107)*(x142)*(x145)))+(((x125)*(x204)))+(((IkReal(-1.00000000000000))*(x358)))+(((IkReal(-1.00000000000000))*(x375)))+(((IkReal(0.0835602094240838))*(x192)))+(((IkReal(-1.00000000000000))*(px)*(x126)*(x195)))+(x371)+(x365)+(((IkReal(-1.00000000000000))*(x106)*(x113)))+(((IkReal(-1.00000000000000))*(x106)*(x119)*(x165)))+(((IkReal(-1.00000000000000))*(pz)*(x107)*(x125)))+(((IkReal(0.581844240837696))*(x107)))+(((IkReal(-1.00000000000000))*(x107)*(x119)*(x145)))+(((pz)*(x191))));
evalcond[8]=((((x113)*(x150)))+(((x121)*(x190)))+(((x117)*(x157)))+(((IkReal(-1.00000000000000))*(x113)*(x118)))+(((IkReal(-1.00000000000000))*(x355)))+(((IkReal(-1.00000000000000))*(x378)))+(((r00)*(x127)))+(x357)+(x376)+(((IkReal(-1.00000000000000))*(cj2)*(x126)*(x132)))+(((IkReal(-1.00000000000000))*(x129)*(x165)))+(((x133)*(x135)))+(((IkReal(-0.665000000000000))*(x107)*(x118)))+(((IkReal(-1.00000000000000))*(cj2)*(x138)*(x141))));
evalcond[9]=((((IkReal(0.0990000000000000))*(x107)*(x118)))+(((sj2)*(x129)))+(((IkReal(-1.00000000000000))*(x357)))+(((IkReal(-1.00000000000000))*(x378)))+(((x113)*(x118)))+(((IkReal(-1.00000000000000))*(cj2)*(x117)*(x126)))+(x355)+(x376)+(((x141)*(x143)))+(((IkReal(-1.00000000000000))*(sj0)*(x113)*(x138)))+(((IkReal(-1.00000000000000))*(x133)*(x135)))+(((x132)*(x157)))+(((IkReal(-1.00000000000000))*(x127)*(x138)))+(((IkReal(-1.00000000000000))*(x136)*(x190))));
evalcond[10]=((((x106)*(x239)))+(((x106)*(x238)))+(((r00)*(x107)*(x127)))+(((x106)*(x187)))+(((IkReal(-1.00000000000000))*(x118)*(x214)))+(((x121)*(x202)))+(((IkReal(-1.00000000000000))*(x367)))+(((IkReal(-1.00000000000000))*(x368)))+(((IkReal(-0.665000000000000))*(x118)))+(((x107)*(x117)*(x157)))+(x360)+(x363)+(((x107)*(x133)*(x135)))+(((IkReal(-1.00000000000000))*(x138)*(x141)*(x192)))+(((IkReal(-1.00000000000000))*(x138)*(x141)*(x195)))+(((cj0)*(x117)*(x195)))+(((IkReal(-1.00000000000000))*(x107)*(x129)*(x165)))+(((IkReal(-1.00000000000000))*(py)*(x138)*(x191)))+(((IkReal(-0.665000000000000))*(x106)*(x118)))+(((IkReal(-1.00000000000000))*(x118)*(x131)*(x195)))+(((IkReal(-1.00000000000000))*(x126)*(x127)*(x193)))+(((sj0)*(x121)))+(((IkReal(-1.00000000000000))*(x126)*(x132)*(x192)))+(((x150)*(x214))));
evalcond[11]=((((x107)*(x141)*(x143)))+(((r00)*(x141)*(x195)))+(((IkReal(-1.00000000000000))*(x367)))+(((IkReal(-1.00000000000000))*(x363)))+(((x129)*(x189)))+(((x136)*(x202)))+(((x107)*(x132)*(x157)))+(((IkReal(-1.00000000000000))*(x133)*(x272)))+(((IkReal(-1.00000000000000))*(x107)*(x133)*(x135)))+(((x118)*(x214)))+(((IkReal(-1.00000000000000))*(x131)*(x150)*(x195)))+(x368)+(x360)+(((IkReal(-0.0990000000000000))*(x106)*(x118)))+(((IkReal(-1.00000000000000))*(x113)*(x138)*(x190)))+(((IkReal(-1.00000000000000))*(x117)*(x126)*(x192)))+(((IkReal(-1.00000000000000))*(x117)*(x126)*(x195)))+(((x106)*(x118)*(x146)))+(((cj0)*(x127)*(x193)))+(((IkReal(-1.00000000000000))*(x106)*(x129)*(x148)))+(((IkReal(0.0990000000000000))*(x118)))+(((IkReal(-1.00000000000000))*(sj0)*(x136)))+(((py)*(x106)*(x143)))+(((IkReal(-1.00000000000000))*(x107)*(x127)*(x138))));
evalcond[12]=((((pp)*(r02)*(sj2)*(IKsin(j3))))+(((IkReal(-2.00000000000000))*(r02)*(sj2)*((pz)*(pz))*(IKsin(j3))))+(((IkReal(-2.00000000000000))*(cj2)*(j1)*(pz)*(r01)*(sj0)*(IKsin(j3))))+(((IkReal(-2.00000000000000))*(cj0)*(cj2)*(px)*(pz)*(r02)*(IKsin(j3))))+(((r01)*(sj0)*(sj2)*((j1)*(j1))*(IKcos(j3))))+(((IkReal(-2.00000000000000))*(cj2)*(py)*(pz)*(r02)*(sj0)*(IKsin(j3))))+(((IkReal(0.186415803664921))*(cj0)*(r00)*(sj2)*(IKcos(j3))))+(((IkReal(-0.0960000000000000))*(j1)*(r02)*(sj2)))+(((IkReal(0.942698952879581))*(py)*(r02)*(sj0)))+(((IkReal(-2.00000000000000))*(cj0)*(px)*(py)*(r01)*(sj2)))+(((IkReal(-2.00000000000000))*(j1)*(pz)*(r01)*(sj0)*(sj2)*(IKcos(j3))))+(((IkReal(-0.0900000000000000))*(j1)*(r00)*(sj0)*(sj2)*(IKsin(j3))))+(((IkReal(0.0960000000000000))*(cj2)*(py)*(r02)*(sj0)))+(((IkReal(0.0960000000000000))*(cj0)*(cj2)*(px)*(r02)*(IKcos(j3))))+(((IkReal(2.00000000000000))*(j1)*(pz)*(r02)*(sj2)*(IKsin(j3))))+(((IkReal(-0.942698952879581))*(cj0)*(pz)*(r00)))+(((IkReal(-0.0960000000000000))*(cj2)*(pz)*(r01)*(sj0)))+(((IkReal(0.00432000000000000))*(cj0)*(r01)*(sj2)*(IKcos(j3))))+(((IkReal(0.0900000000000000))*(cj2)*(px)*(r02)*(sj0)))+(((IkReal(0.0900000000000000))*(cj0)*(cj2)*(pz)*(r01)*(IKcos(j3))))+(((IkReal(0.0960000000000000))*(cj0)*(cj2)*(j1)*(r00)))+(((IkReal(-0.0960000000000000))*(cj0)*(cj2)*(pz)*(r00)))+(((IkReal(-0.0900000000000000))*(cj0)*(cj2)*(py)*(r02)*(IKcos(j3))))+(((IkReal(0.942698952879581))*(cj0)*(px)*(r02)*(IKcos(j3))))+(((IkReal(-2.00000000000000))*(cj0)*(cj2)*(j1)*(pz)*(r00)*(IKsin(j3))))+(((IkReal(-1.00000000000000))*(cj2)*(pp)*(r02)*(IKcos(j3))))+(((IkReal(-8.60668993600931))*(j1)*(pz)*(IKsin(j3))))+(((IkReal(0.0900000000000000))*(cj2)*(py)*(r00)*(IKsin(j3))))+(((IkReal(0.186415803664921))*(r01)*(sj0)*(sj2)))+(((IkReal(0.0960000000000000))*(cj0)*(cj2)*(j1)*(r00)*(IKcos(j3))))+(((IkReal(-2.00000000000000))*(py)*(pz)*(r02)*(sj0)*(sj2)*(IKcos(j3))))+(((IkReal(0.0960000000000000))*(cj0)*(cj2)*(px)*(r02)))+(((IkReal(-0.191023803664921))*(cj2)*(r02)))+(((IkReal(0.186415803664921))*(cj0)*(r00)*(sj2)))+(((cj0)*(r00)*(sj2)*((j1)*(j1))))+(((cj2)*(r02)*((j1)*(j1))))+(((IkReal(-0.0960000000000000))*(cj0)*(cj2)*(pz)*(r00)*(IKcos(j3))))+(((IkReal(-0.387301047120419))*(px)*(sj0)*(IKsin(j3))))+(((IkReal(2.00000000000000))*(j1)*(py)*(r01)*(sj2)*(IKsin(j3))))+(((cj0)*(pp)*(r00)*(sj2)))+(((IkReal(-0.0452495497382199))*(r02)))+(((cj0)*(cj2)*(pp)*(r00)*(IKsin(j3))))+(((IkReal(0.942698952879581))*(cj0)*(j1)*(r00)))+(((IkReal(-2.43569325189063))*(pz)*(sj2)*(IKsin(j3))))+(((IkReal(0.0960000000000000))*(cj2)*(py)*(r01)*(IKsin(j3))))+(((IkReal(2.00000000000000))*(j1)*(py)*(r02)*(sj0)*(sj2)))+(((IkReal(-0.0960000000000000))*(cj0)*(px)*(r02)*(sj2)*(IKsin(j3))))+(((IkReal(0.0960000000000000))*(cj2)*(px)*(r00)*(IKsin(j3))))+(((IkReal(2.00000000000000))*(cj0)*(j1)*(px)*(r02)*(sj2)*(IKcos(j3))))+(((IkReal(0.0900000000000000))*(pz)*(r00)*(sj0)*(sj2)*(IKsin(j3))))+(((cj0)*(pp)*(r00)*(sj2)*(IKcos(j3))))+(((IkReal(0.0900000000000000))*(py)*(r00)*(sj2)*(IKcos(j3))))+(((IkReal(0.0900000000000000))*(cj0)*(py)*(r02)*(sj2)*(IKsin(j3))))+(((IkReal(-2.00000000000000))*(cj2)*(j1)*(pz)*(r02)*(IKcos(j3))))+(((IkReal(4.30334496800465))*(pp)*(IKsin(j3))))+(((pp)*(r01)*(sj0)*(sj2)*(IKcos(j3))))+(((IkReal(-2.00000000000000))*(cj0)*(cj2)*(r00)*((px)*(px))*(IKsin(j3))))+(((IkReal(0.0960000000000000))*(px)*(r00)*(sj2)*(IKcos(j3))))+(((IkReal(0.00432000000000000))*(cj0)*(cj2)*(r01)*(IKsin(j3))))+(((IkReal(-0.00432000000000000))*(cj2)*(r00)*(sj0)*(IKsin(j3))))+(((IkReal(-2.00000000000000))*(py)*(pz)*(r02)*(sj0)*(sj2)))+(((IkReal(0.942698952879581))*(py)*(r02)*(sj0)*(IKcos(j3))))+(((IkReal(-2.00000000000000))*(cj0)*(r00)*(sj2)*((px)*(px))*(IKcos(j3))))+(((IkReal(0.0960000000000000))*(px)*(r00)*(sj2)))+(((cj2)*(r01)*(sj0)*((j1)*(j1))*(IKsin(j3))))+(((IkReal(0.116913276090750))*(cj2)*(IKsin(j3))))+(((IkReal(2.00000000000000))*(j1)*(py)*(r02)*(sj0)*(sj2)*(IKcos(j3))))+(((IkReal(-0.00432000000000000))*(r00)*(sj0)*(sj2)*(IKcos(j3))))+(((IkReal(0.0254700000000000))*(cj0)*(r01)*(IKsin(j3))))+(((IkReal(-2.00000000000000))*(cj2)*(j1)*(px)*(r00)*(IKcos(j3))))+(((IkReal(-2.00000000000000))*(cj2)*(j1)*(py)*(r01)))+(((IkReal(2.00000000000000))*(cj2)*(j1)*(py)*(r02)*(sj0)*(IKsin(j3))))+(((IkReal(-2.00000000000000))*(j1)*(pz)*(r01)*(sj0)*(sj2)))+(((IkReal(0.0900000000000000))*(cj2)*(px)*(r02)*(sj0)*(IKcos(j3))))+(((IkReal(0.0960000000000000))*(py)*(r01)*(sj2)))+(((IkReal(-2.43569325189063))*(cj0)*(cj2)*(px)*(IKsin(j3))))+(((IkReal(4.30334496800465))*((j1)*(j1))*(IKsin(j3))))+(((IkReal(-2.00000000000000))*(cj2)*(j1)*(py)*(r01)*(IKcos(j3))))+(((IkReal(2.00000000000000))*(cj2)*(px)*(pz)*(r00)))+(((IkReal(-0.0960000000000000))*(py)*(r02)*(sj0)*(sj2)*(IKsin(j3))))+(((IkReal(-0.942698952879581))*(pz)*(r01)*(sj0)*(IKcos(j3))))+(((IkReal(0.942698952879581))*(cj0)*(px)*(r02)))+(((IkReal(-0.0271680000000000))*(cj0)*(r00)*(IKsin(j3))))+(((IkReal(-0.0900000000000000))*(px)*(r02)*(sj0)*(sj2)*(IKsin(j3))))+(((IkReal(-2.00000000000000))*(r01)*(sj0)*(sj2)*((py)*(py))))+(((IkReal(-0.0960000000000000))*(j1)*(r02)*(sj2)*(IKcos(j3))))+(((IkReal(0.0960000000000000))*(pz)*(r01)*(sj0)*(sj2)*(IKsin(j3))))+(((pp)*(r01)*(sj0)*(sj2)))+(((IkReal(-0.00432000000000000))*(r00)*(sj0)*(sj2)))+(((IkReal(0.566000000000000))*(pz)*(r02)*(IKsin(j3))))+(((IkReal(0.0960000000000000))*(cj2)*(pz)*(r02)*(IKsin(j3))))+(((IkReal(-2.00000000000000))*(cj0)*(px)*(py)*(r01)*(sj2)*(IKcos(j3))))+(((IkReal(-0.566000000000000))*(j1)*(r02)*(IKsin(j3))))+(((IkReal(2.00000000000000))*(cj0)*(j1)*(px)*(r02)*(sj2)))+(((IkReal(0.0960000000000000))*(pz)*(r02)*(sj2)*(IKcos(j3))))+(((IkReal(-0.413121116928447))*(cj0)*(px)*(IKsin(j3))))+(((IkReal(-0.0452495497382199))*(r02)*(IKcos(j3))))+(((IkReal(0.0900000000000000))*(cj0)*(cj2)*(pz)*(r01)))+(((IkReal(-2.00000000000000))*(cj2)*(px)*(py)*(r00)*(sj0)*(IKsin(j3))))+(((IkReal(-0.413121116928447))*(py)*(sj0)*(IKsin(j3))))+(((IkReal(-0.0271680000000000))*(r01)*(sj0)*(IKsin(j3))))+(((IkReal(-0.0900000000000000))*(cj2)*(pz)*(r00)*(sj0)*(IKcos(j3))))+(((IkReal(-0.0960000000000000))*(cj0)*(j1)*(r00)*(sj2)*(IKsin(j3))))+(((IkReal(-2.00000000000000))*(py)*(pz)*(r01)*(sj2)*(IKsin(j3))))+(((IkReal(-2.00000000000000))*(cj2)*(j1)*(pz)*(r02)))+(((IkReal(-0.0900000000000000))*(cj2)*(px)*(r01)*(IKsin(j3))))+(((IkReal(-2.00000000000000))*(px)*(py)*(r00)*(sj0)*(sj2)))+(((IkReal(-2.00000000000000))*(cj0)*(j1)*(pz)*(r00)*(sj2)))+(((IkReal(-2.43569325189063))*(cj2)*(py)*(sj0)*(IKsin(j3))))+(((IkReal(-0.0900000000000000))*(cj0)*(cj2)*(py)*(r02)))+(((IkReal(-2.00000000000000))*(cj0)*(cj2)*(px)*(py)*(r01)*(IKsin(j3))))+(((cj0)*(cj2)*(r00)*((j1)*(j1))*(IKsin(j3))))+(((IkReal(-0.191023803664921))*(cj2)*(r02)*(IKcos(j3))))+(((IkReal(-0.0960000000000000))*(cj2)*(j1)*(r02)*(IKsin(j3))))+(((IkReal(2.00000000000000))*(cj2)*(py)*(pz)*(r01)))+(((IkReal(-2.00000000000000))*(cj0)*(r00)*(sj2)*((px)*(px))))+(((IkReal(0.566000000000000))*(px)*(r00)*(IKsin(j3))))+(((IkReal(-0.942698952879581))*(pz)*(r01)*(sj0)))+(((IkReal(-0.0803680000000000))*(cj0)*(cj2)*(r00)*(IKsin(j3))))+(((IkReal(0.0960000000000000))*(cj0)*(pz)*(r00)*(sj2)*(IKsin(j3))))+(((cj2)*(pp)*(r01)*(sj0)*(IKsin(j3))))+(((IkReal(-0.0900000000000000))*(px)*(r01)*(sj2)*(IKcos(j3))))+(((IkReal(2.00000000000000))*(j1)*(px)*(r00)*(sj2)*(IKsin(j3))))+(((IkReal(-2.00000000000000))*(px)*(py)*(r00)*(sj0)*(sj2)*(IKcos(j3))))+(((IkReal(0.0960000000000000))*(cj2)*(j1)*(r01)*(sj0)))+(((IkReal(-0.0960000000000000))*(j1)*(r01)*(sj0)*(sj2)*(IKsin(j3))))+(((IkReal(-0.0757600000000000))*(r02)*(sj2)*(IKsin(j3))))+(((IkReal(-0.942698952879581))*(cj0)*(pz)*(r00)*(IKcos(j3))))+(((IkReal(-2.00000000000000))*(cj2)*(r01)*(sj0)*((py)*(py))*(IKsin(j3))))+(((cj2)*(r02)*((j1)*(j1))*(IKcos(j3))))+(((IkReal(0.0900000000000000))*(cj0)*(j1)*(r01)*(sj2)*(IKsin(j3))))+(((IkReal(0.942698952879581))*(cj0)*(j1)*(r00)*(IKcos(j3))))+(((IkReal(2.00000000000000))*(cj2)*(r02)*((pz)*(pz))))+(((IkReal(0.942698952879581))*(j1)*(r01)*(sj0)))+(((IkReal(0.0960000000000000))*(cj2)*(j1)*(r01)*(sj0)*(IKcos(j3))))+(((IkReal(-2.00000000000000))*(cj2)*(j1)*(px)*(r00)))+(((r01)*(sj0)*(sj2)*((j1)*(j1))))+(((IkReal(-0.0254700000000000))*(r00)*(sj0)*(IKsin(j3))))+(((IkReal(0.387301047120419))*(cj0)*(py)*(IKsin(j3))))+(((IkReal(-0.0803680000000000))*(cj2)*(r01)*(sj0)*(IKsin(j3))))+(((IkReal(-0.0900000000000000))*(cj0)*(cj2)*(j1)*(r01)))+(((IkReal(-2.00000000000000))*(r01)*(sj0)*(sj2)*((py)*(py))*(IKcos(j3))))+(((IkReal(2.00000000000000))*(cj2)*(px)*(pz)*(r00)*(IKcos(j3))))+(((IkReal(2.00000000000000))*(cj2)*(py)*(pz)*(r01)*(IKcos(j3))))+(((IkReal(-0.239015809162304))*(IKsin(j3))))+(((IkReal(2.00000000000000))*(cj2)*(r02)*((pz)*(pz))*(IKcos(j3))))+(((IkReal(0.0960000000000000))*(cj2)*(py)*(r02)*(sj0)*(IKcos(j3))))+(((IkReal(-2.00000000000000))*(cj0)*(px)*(pz)*(r02)*(sj2)*(IKcos(j3))))+(((IkReal(-0.0900000000000000))*(cj2)*(pz)*(r00)*(sj0)))+(((IkReal(0.0900000000000000))*(py)*(r00)*(sj2)))+(((cj0)*(r00)*(sj2)*((j1)*(j1))*(IKcos(j3))))+(((IkReal(0.0900000000000000))*(cj2)*(j1)*(r00)*(sj0)))+(((IkReal(-2.00000000000000))*(cj0)*(px)*(pz)*(r02)*(sj2)))+(((IkReal(-0.0900000000000000))*(cj0)*(cj2)*(j1)*(r01)*(IKcos(j3))))+(((IkReal(0.566000000000000))*(py)*(r01)*(IKsin(j3))))+(((IkReal(0.0960000000000000))*(py)*(r01)*(sj2)*(IKcos(j3))))+(((IkReal(-1.00000000000000))*(r02)*(sj2)*((j1)*(j1))*(IKsin(j3))))+(((IkReal(-2.00000000000000))*(cj0)*(j1)*(pz)*(r00)*(sj2)*(IKcos(j3))))+(((IkReal(-2.00000000000000))*(px)*(pz)*(r00)*(sj2)*(IKsin(j3))))+(((IkReal(0.942698952879581))*(j1)*(r01)*(sj0)*(IKcos(j3))))+(((IkReal(0.0900000000000000))*(cj2)*(j1)*(r00)*(sj0)*(IKcos(j3))))+(((IkReal(2.43569325189063))*(j1)*(sj2)*(IKsin(j3))))+(((IkReal(0.00432000000000000))*(cj0)*(r01)*(sj2)))+(((IkReal(-0.0900000000000000))*(px)*(r01)*(sj2)))+(((IkReal(0.186415803664921))*(r01)*(sj0)*(sj2)*(IKcos(j3))))+(((IkReal(-0.0900000000000000))*(cj0)*(pz)*(r01)*(sj2)*(IKsin(j3))))+(((IkReal(-0.0960000000000000))*(cj2)*(pz)*(r01)*(sj0)*(IKcos(j3))))+(((IkReal(0.0960000000000000))*(pz)*(r02)*(sj2)))+(((IkReal(-1.00000000000000))*(cj2)*(pp)*(r02)))+(((IkReal(2.00000000000000))*(cj0)*(cj2)*(j1)*(px)*(r02)*(IKsin(j3)))));
evalcond[13]=((((IkReal(-1.00000000000000))*(cj0)*(cj2)*(pp)*(r00)*(IKsin(j3))))+(((IkReal(0.0900000000000000))*(cj0)*(pz)*(r01)*(sj2)*(IKsin(j3))))+(((IkReal(0.00432000000000000))*(r00)*(sj0)*(sj2)*(IKcos(j3))))+(((IkReal(-2.00000000000000))*(cj2)*(j1)*(py)*(r02)*(sj0)*(IKsin(j3))))+(((IkReal(-0.0900000000000000))*(cj0)*(cj2)*(pz)*(r01)*(IKcos(j3))))+(((IkReal(2.00000000000000))*(cj0)*(cj2)*(px)*(pz)*(r02)*(IKsin(j3))))+(((IkReal(-0.0960000000000000))*(j1)*(r02)*(sj2)))+(((IkReal(-1.00000000000000))*(pp)*(r01)*(sj0)*(sj2)*(IKcos(j3))))+(((IkReal(0.566000000000000))*(j1)*(r02)*(IKsin(j3))))+(((IkReal(-2.00000000000000))*(cj0)*(px)*(py)*(r01)*(sj2)))+(((IkReal(2.00000000000000))*(cj0)*(cj2)*(r00)*((px)*(px))*(IKsin(j3))))+(((IkReal(-0.189301047120419))*(pz)*(r01)*(sj0)))+(((IkReal(-0.189301047120419))*(cj0)*(px)*(r02)*(IKcos(j3))))+(((IkReal(0.0271680000000000))*(cj0)*(r00)*(IKsin(j3))))+(((IkReal(0.0960000000000000))*(cj2)*(py)*(r02)*(sj0)))+(((IkReal(2.00000000000000))*(cj0)*(r00)*(sj2)*((px)*(px))*(IKcos(j3))))+(((IkReal(0.189301047120419))*(py)*(r02)*(sj0)))+(((IkReal(-0.0960000000000000))*(cj2)*(pz)*(r02)*(IKsin(j3))))+(((IkReal(2.00000000000000))*(cj2)*(j1)*(py)*(r01)*(IKcos(j3))))+(((IkReal(0.0960000000000000))*(cj0)*(px)*(r02)*(sj2)*(IKsin(j3))))+(((IkReal(0.0960000000000000))*(py)*(r02)*(sj0)*(sj2)*(IKsin(j3))))+(((IkReal(-2.00000000000000))*(cj2)*(r02)*((pz)*(pz))*(IKcos(j3))))+(((IkReal(-0.0267958036649215))*(cj0)*(r00)*(sj2)))+(((IkReal(-0.0960000000000000))*(cj2)*(pz)*(r01)*(sj0)))+(((IkReal(0.0900000000000000))*(cj2)*(px)*(r02)*(sj0)))+(((IkReal(0.189301047120419))*(pz)*(r01)*(sj0)*(IKcos(j3))))+(((IkReal(0.0960000000000000))*(cj0)*(cj2)*(j1)*(r00)))+(((IkReal(2.00000000000000))*(py)*(pz)*(r01)*(sj2)*(IKsin(j3))))+(((IkReal(-0.0960000000000000))*(cj0)*(cj2)*(pz)*(r00)))+(((IkReal(2.00000000000000))*(r02)*(sj2)*((pz)*(pz))*(IKsin(j3))))+(((IkReal(2.00000000000000))*(cj2)*(r01)*(sj0)*((py)*(py))*(IKsin(j3))))+(((IkReal(0.0960000000000000))*(cj0)*(cj2)*(pz)*(r00)*(IKcos(j3))))+(((IkReal(-8.60668993600931))*(j1)*(pz)*(IKsin(j3))))+(((IkReal(0.0960000000000000))*(cj0)*(cj2)*(px)*(r02)))+(((IkReal(2.00000000000000))*(px)*(py)*(r00)*(sj0)*(sj2)*(IKcos(j3))))+(((cj0)*(r00)*(sj2)*((j1)*(j1))))+(((cj2)*(r02)*((j1)*(j1))))+(((IkReal(-0.387301047120419))*(px)*(sj0)*(IKsin(j3))))+(((cj0)*(pp)*(r00)*(sj2)))+(((IkReal(-0.0960000000000000))*(cj2)*(px)*(r00)*(IKsin(j3))))+(((IkReal(2.00000000000000))*(cj2)*(py)*(pz)*(r02)*(sj0)*(IKsin(j3))))+(((IkReal(2.00000000000000))*(cj2)*(j1)*(px)*(r00)*(IKcos(j3))))+(((cj2)*(pp)*(r02)*(IKcos(j3))))+(((IkReal(0.189301047120419))*(j1)*(r01)*(sj0)))+(((IkReal(-2.00000000000000))*(j1)*(py)*(r02)*(sj0)*(sj2)*(IKcos(j3))))+(((IkReal(-2.43569325189063))*(pz)*(sj2)*(IKsin(j3))))+(((IkReal(-1.00000000000000))*(cj2)*(r01)*(sj0)*((j1)*(j1))*(IKsin(j3))))+(((IkReal(-2.00000000000000))*(j1)*(px)*(r00)*(sj2)*(IKsin(j3))))+(((IkReal(-1.00000000000000))*(r01)*(sj0)*(sj2)*((j1)*(j1))*(IKcos(j3))))+(((IkReal(2.00000000000000))*(j1)*(py)*(r02)*(sj0)*(sj2)))+(((IkReal(2.00000000000000))*(cj0)*(j1)*(pz)*(r00)*(sj2)*(IKcos(j3))))+(((IkReal(0.0803680000000000))*(cj2)*(r01)*(sj0)*(IKsin(j3))))+(((IkReal(4.30334496800465))*(pp)*(IKsin(j3))))+(((IkReal(2.00000000000000))*(cj2)*(px)*(py)*(r00)*(sj0)*(IKsin(j3))))+(((IkReal(-2.00000000000000))*(py)*(pz)*(r02)*(sj0)*(sj2)))+(((IkReal(-1.00000000000000))*(cj0)*(pp)*(r00)*(sj2)*(IKcos(j3))))+(((IkReal(-0.0900000000000000))*(cj2)*(j1)*(r00)*(sj0)*(IKcos(j3))))+(((IkReal(2.00000000000000))*(cj0)*(cj2)*(px)*(py)*(r01)*(IKsin(j3))))+(((IkReal(0.0960000000000000))*(px)*(r00)*(sj2)))+(((IkReal(0.116913276090750))*(cj2)*(IKsin(j3))))+(((IkReal(0.0254700000000000))*(r00)*(sj0)*(IKsin(j3))))+(((IkReal(-0.0900000000000000))*(py)*(r00)*(sj2)*(IKcos(j3))))+(((IkReal(-0.0900000000000000))*(cj0)*(py)*(r02)*(sj2)*(IKsin(j3))))+(((IkReal(-0.566000000000000))*(px)*(r00)*(IKsin(j3))))+(((IkReal(-0.0960000000000000))*(cj0)*(cj2)*(j1)*(r00)*(IKcos(j3))))+(((IkReal(0.0900000000000000))*(j1)*(r00)*(sj0)*(sj2)*(IKsin(j3))))+(((IkReal(-2.00000000000000))*(cj2)*(j1)*(py)*(r01)))+(((IkReal(-2.00000000000000))*(j1)*(pz)*(r01)*(sj0)*(sj2)))+(((IkReal(0.0960000000000000))*(py)*(r01)*(sj2)))+(((IkReal(-0.189301047120419))*(cj0)*(j1)*(r00)*(IKcos(j3))))+(((IkReal(-2.43569325189063))*(cj0)*(cj2)*(px)*(IKsin(j3))))+(((IkReal(0.0900000000000000))*(cj0)*(cj2)*(j1)*(r01)*(IKcos(j3))))+(((IkReal(4.30334496800465))*((j1)*(j1))*(IKsin(j3))))+(((IkReal(0.189301047120419))*(cj0)*(j1)*(r00)))+(((IkReal(2.00000000000000))*(cj2)*(px)*(pz)*(r00)))+(((IkReal(-1.00000000000000))*(cj2)*(pp)*(r01)*(sj0)*(IKsin(j3))))+(((IkReal(-0.0960000000000000))*(cj2)*(j1)*(r01)*(sj0)*(IKcos(j3))))+(((IkReal(0.189301047120419))*(cj0)*(px)*(r02)))+(((IkReal(-0.0960000000000000))*(pz)*(r02)*(sj2)*(IKcos(j3))))+(((IkReal(2.00000000000000))*(cj2)*(j1)*(pz)*(r01)*(sj0)*(IKsin(j3))))+(((IkReal(-0.566000000000000))*(py)*(r01)*(IKsin(j3))))+(((IkReal(-2.00000000000000))*(r01)*(sj0)*(sj2)*((py)*(py))))+(((IkReal(2.00000000000000))*(px)*(pz)*(r00)*(sj2)*(IKsin(j3))))+(((IkReal(2.00000000000000))*(r01)*(sj0)*(sj2)*((py)*(py))*(IKcos(j3))))+(((IkReal(-0.0900000000000000))*(cj2)*(py)*(r00)*(IKsin(j3))))+(((pp)*(r01)*(sj0)*(sj2)))+(((IkReal(-0.189301047120419))*(j1)*(r01)*(sj0)*(IKcos(j3))))+(((IkReal(-0.00432000000000000))*(r00)*(sj0)*(sj2)))+(((IkReal(-1.00000000000000))*(cj0)*(cj2)*(r00)*((j1)*(j1))*(IKsin(j3))))+(((IkReal(0.0757600000000000))*(r02)*(sj2)*(IKsin(j3))))+(((IkReal(-2.00000000000000))*(j1)*(py)*(r01)*(sj2)*(IKsin(j3))))+(((IkReal(-0.0960000000000000))*(px)*(r00)*(sj2)*(IKcos(j3))))+(((IkReal(2.00000000000000))*(cj0)*(j1)*(px)*(r02)*(sj2)))+(((IkReal(-0.00432000000000000))*(cj0)*(cj2)*(r01)*(IKsin(j3))))+(((IkReal(-0.413121116928447))*(cj0)*(px)*(IKsin(j3))))+(((IkReal(-0.189301047120419))*(py)*(r02)*(sj0)*(IKcos(j3))))+(((IkReal(0.0960000000000000))*(j1)*(r01)*(sj0)*(sj2)*(IKsin(j3))))+(((IkReal(-0.0960000000000000))*(cj0)*(cj2)*(px)*(r02)*(IKcos(j3))))+(((IkReal(0.0900000000000000))*(cj0)*(cj2)*(pz)*(r01)))+(((IkReal(-1.00000000000000))*(cj2)*(r02)*((j1)*(j1))*(IKcos(j3))))+(((IkReal(-0.413121116928447))*(py)*(sj0)*(IKsin(j3))))+(((r02)*(sj2)*((j1)*(j1))*(IKsin(j3))))+(((IkReal(-0.566000000000000))*(pz)*(r02)*(IKsin(j3))))+(((IkReal(-1.00000000000000))*(cj0)*(r00)*(sj2)*((j1)*(j1))*(IKcos(j3))))+(((IkReal(-2.00000000000000))*(cj2)*(j1)*(pz)*(r02)))+(((IkReal(-2.00000000000000))*(j1)*(pz)*(r02)*(sj2)*(IKsin(j3))))+(((IkReal(0.0221878036649215))*(cj2)*(r02)))+(((IkReal(0.0960000000000000))*(cj0)*(j1)*(r00)*(sj2)*(IKsin(j3))))+(((IkReal(0.0271680000000000))*(r01)*(sj0)*(IKsin(j3))))+(((IkReal(-2.00000000000000))*(px)*(py)*(r00)*(sj0)*(sj2)))+(((IkReal(-2.00000000000000))*(cj0)*(j1)*(pz)*(r00)*(sj2)))+(((IkReal(-2.43569325189063))*(cj2)*(py)*(sj0)*(IKsin(j3))))+(((IkReal(-0.0900000000000000))*(cj0)*(cj2)*(py)*(r02)))+(((IkReal(-0.0900000000000000))*(pz)*(r00)*(sj0)*(sj2)*(IKsin(j3))))+(((IkReal(2.00000000000000))*(cj2)*(py)*(pz)*(r01)))+(((IkReal(-2.00000000000000))*(cj0)*(r00)*(sj2)*((px)*(px))))+(((IkReal(0.0267958036649215))*(cj0)*(r00)*(sj2)*(IKcos(j3))))+(((IkReal(-0.0900000000000000))*(cj0)*(j1)*(r01)*(sj2)*(IKsin(j3))))+(((IkReal(0.0900000000000000))*(px)*(r01)*(sj2)*(IKcos(j3))))+(((IkReal(-0.00432000000000000))*(cj0)*(r01)*(sj2)*(IKcos(j3))))+(((IkReal(-0.0960000000000000))*(pz)*(r01)*(sj0)*(sj2)*(IKsin(j3))))+(((IkReal(0.0803680000000000))*(cj0)*(cj2)*(r00)*(IKsin(j3))))+(((IkReal(-2.00000000000000))*(cj2)*(py)*(pz)*(r01)*(IKcos(j3))))+(((IkReal(2.00000000000000))*(py)*(pz)*(r02)*(sj0)*(sj2)*(IKcos(j3))))+(((IkReal(0.0900000000000000))*(cj2)*(px)*(r01)*(IKsin(j3))))+(((IkReal(0.0960000000000000))*(cj2)*(j1)*(r01)*(sj0)))+(((IkReal(-0.0267958036649215))*(r01)*(sj0)*(sj2)))+(((IkReal(0.0960000000000000))*(cj2)*(pz)*(r01)*(sj0)*(IKcos(j3))))+(((IkReal(0.00432000000000000))*(cj2)*(r00)*(sj0)*(IKsin(j3))))+(((IkReal(2.00000000000000))*(cj2)*(r02)*((pz)*(pz))))+(((IkReal(-0.0900000000000000))*(cj2)*(px)*(r02)*(sj0)*(IKcos(j3))))+(((IkReal(2.00000000000000))*(cj0)*(px)*(pz)*(r02)*(sj2)*(IKcos(j3))))+(((IkReal(-2.00000000000000))*(cj2)*(j1)*(px)*(r00)))+(((IkReal(0.0267958036649215))*(r01)*(sj0)*(sj2)*(IKcos(j3))))+(((r01)*(sj0)*(sj2)*((j1)*(j1))))+(((IkReal(0.387301047120419))*(cj0)*(py)*(IKsin(j3))))+(((IkReal(-0.00908645026178010))*(r02)))+(((IkReal(-0.0900000000000000))*(cj0)*(cj2)*(j1)*(r01)))+(((IkReal(-2.00000000000000))*(cj0)*(j1)*(px)*(r02)*(sj2)*(IKcos(j3))))+(((IkReal(-0.239015809162304))*(IKsin(j3))))+(((IkReal(0.189301047120419))*(cj0)*(pz)*(r00)*(IKcos(j3))))+(((IkReal(0.00908645026178010))*(r02)*(IKcos(j3))))+(((IkReal(-2.00000000000000))*(cj0)*(cj2)*(j1)*(px)*(r02)*(IKsin(j3))))+(((IkReal(0.0900000000000000))*(cj0)*(cj2)*(py)*(r02)*(IKcos(j3))))+(((IkReal(-2.00000000000000))*(cj2)*(px)*(pz)*(r00)*(IKcos(j3))))+(((IkReal(-0.0900000000000000))*(cj2)*(pz)*(r00)*(sj0)))+(((IkReal(-0.0960000000000000))*(cj2)*(py)*(r02)*(sj0)*(IKcos(j3))))+(((IkReal(0.0900000000000000))*(py)*(r00)*(sj2)))+(((IkReal(2.00000000000000))*(cj0)*(cj2)*(j1)*(pz)*(r00)*(IKsin(j3))))+(((IkReal(0.0900000000000000))*(cj2)*(j1)*(r00)*(sj0)))+(((IkReal(2.00000000000000))*(cj2)*(j1)*(pz)*(r02)*(IKcos(j3))))+(((IkReal(-2.00000000000000))*(cj0)*(px)*(pz)*(r02)*(sj2)))+(((IkReal(0.0900000000000000))*(px)*(r02)*(sj0)*(sj2)*(IKsin(j3))))+(((IkReal(-0.189301047120419))*(cj0)*(pz)*(r00)))+(((IkReal(2.00000000000000))*(j1)*(pz)*(r01)*(sj0)*(sj2)*(IKcos(j3))))+(((IkReal(-1.00000000000000))*(pp)*(r02)*(sj2)*(IKsin(j3))))+(((IkReal(2.00000000000000))*(cj0)*(px)*(py)*(r01)*(sj2)*(IKcos(j3))))+(((IkReal(-0.0960000000000000))*(cj2)*(py)*(r01)*(IKsin(j3))))+(((IkReal(-0.0254700000000000))*(cj0)*(r01)*(IKsin(j3))))+(((IkReal(-0.0960000000000000))*(py)*(r01)*(sj2)*(IKcos(j3))))+(((IkReal(-0.0960000000000000))*(cj0)*(pz)*(r00)*(sj2)*(IKsin(j3))))+(((IkReal(2.43569325189063))*(j1)*(sj2)*(IKsin(j3))))+(((IkReal(0.00432000000000000))*(cj0)*(r01)*(sj2)))+(((IkReal(-0.0900000000000000))*(px)*(r01)*(sj2)))+(((IkReal(0.0900000000000000))*(cj2)*(pz)*(r00)*(sj0)*(IKcos(j3))))+(((IkReal(0.0960000000000000))*(j1)*(r02)*(sj2)*(IKcos(j3))))+(((IkReal(0.0960000000000000))*(pz)*(r02)*(sj2)))+(((IkReal(-1.00000000000000))*(cj2)*(pp)*(r02)))+(((IkReal(-0.0221878036649215))*(cj2)*(r02)*(IKcos(j3))))+(((IkReal(0.0960000000000000))*(cj2)*(j1)*(r02)*(IKsin(j3)))));
evalcond[14]=((IkReal(-0.239015809162304))+(((IkReal(-1.00000000000000))*(r02)*(sj2)*((j1)*(j1))))+(((IkReal(0.0254700000000000))*(cj0)*(r01)))+(((IkReal(-0.0803680000000000))*(cj2)*(r01)*(sj0)))+(((IkReal(-2.00000000000000))*(cj2)*(r01)*(sj0)*((py)*(py))))+(((IkReal(2.00000000000000))*(cj0)*(cj2)*(px)*(py)*(r01)*(IKcos(j3))))+(((IkReal(0.0960000000000000))*(pz)*(r02)*(sj2)*(IKsin(j3))))+(((IkReal(2.43569325189063))*(cj0)*(cj2)*(px)*(IKcos(j3))))+(((IkReal(-0.566000000000000))*(j1)*(r02)))+(((IkReal(-0.00432000000000000))*(cj0)*(cj2)*(r01)*(IKcos(j3))))+(((IkReal(0.0960000000000000))*(cj2)*(py)*(r02)*(sj0)*(IKsin(j3))))+(((IkReal(0.0254700000000000))*(r00)*(sj0)*(IKcos(j3))))+(((IkReal(-0.0900000000000000))*(px)*(r02)*(sj0)*(sj2)))+(((IkReal(4.30334496800465))*(pp)))+(((IkReal(0.0803680000000000))*(cj0)*(cj2)*(r00)*(IKcos(j3))))+(((IkReal(2.00000000000000))*(j1)*(py)*(r02)*(sj0)*(sj2)*(IKsin(j3))))+(((IkReal(0.0757600000000000))*(r02)*(sj2)*(IKcos(j3))))+(((IkReal(-0.0254700000000000))*(r00)*(sj0)))+(((IkReal(8.60668993600931))*(j1)*(pz)*(IKcos(j3))))+(((IkReal(0.0271680000000000))*(cj0)*(r00)*(IKcos(j3))))+(((IkReal(-0.0803680000000000))*(cj0)*(cj2)*(r00)))+(((IkReal(0.0960000000000000))*(j1)*(r01)*(sj0)*(sj2)*(IKcos(j3))))+(((IkReal(0.0960000000000000))*(py)*(r01)*(sj2)*(IKsin(j3))))+(((IkReal(-2.00000000000000))*(cj0)*(j1)*(pz)*(r00)*(sj2)*(IKsin(j3))))+(((IkReal(-0.0900000000000000))*(cj0)*(cj2)*(py)*(r02)*(IKsin(j3))))+(((IkReal(2.43569325189063))*(j1)*(sj2)))+(((IkReal(-1.00000000000000))*(cj2)*(pp)*(r02)*(IKsin(j3))))+(((IkReal(-2.00000000000000))*(j1)*(pz)*(r01)*(sj0)*(sj2)*(IKsin(j3))))+(((IkReal(0.00432000000000000))*(cj2)*(r00)*(sj0)*(IKcos(j3))))+(((IkReal(-0.0960000000000000))*(cj0)*(px)*(r02)*(sj2)))+(((IkReal(0.00432000000000000))*(cj0)*(cj2)*(r01)))+(((IkReal(2.00000000000000))*(cj2)*(r02)*((pz)*(pz))*(IKsin(j3))))+(((IkReal(0.0960000000000000))*(cj2)*(j1)*(r02)*(IKcos(j3))))+(((IkReal(0.0803680000000000))*(cj2)*(r01)*(sj0)*(IKcos(j3))))+(((IkReal(2.00000000000000))*(cj2)*(py)*(pz)*(r02)*(sj0)*(IKcos(j3))))+(((IkReal(0.0960000000000000))*(cj2)*(px)*(r00)))+(((IkReal(-2.00000000000000))*(cj2)*(j1)*(px)*(r00)*(IKsin(j3))))+(((IkReal(-0.116913276090750))*(cj2)*(IKcos(j3))))+(((IkReal(2.00000000000000))*(cj2)*(px)*(py)*(r00)*(sj0)*(IKcos(j3))))+(((IkReal(-0.942698952879581))*(pz)*(r01)*(sj0)*(IKsin(j3))))+(((IkReal(2.00000000000000))*(cj2)*(r01)*(sj0)*((py)*(py))*(IKcos(j3))))+(((cj0)*(cj2)*(pp)*(r00)))+(((cj2)*(r01)*(sj0)*((j1)*(j1))))+(((IkReal(-0.942698952879581))*(cj0)*(pz)*(r00)*(IKsin(j3))))+(((IkReal(-0.0960000000000000))*(cj2)*(pz)*(r01)*(sj0)*(IKsin(j3))))+(((IkReal(-0.0960000000000000))*(cj2)*(py)*(r01)*(IKcos(j3))))+(((IkReal(0.0960000000000000))*(cj2)*(j1)*(r01)*(sj0)*(IKsin(j3))))+(((IkReal(-8.60668993600931))*(j1)*(pz)))+(((IkReal(-2.00000000000000))*(py)*(pz)*(r02)*(sj0)*(sj2)*(IKsin(j3))))+(((IkReal(0.566000000000000))*(j1)*(r02)*(IKcos(j3))))+(((IkReal(2.00000000000000))*(j1)*(py)*(r01)*(sj2)))+(((IkReal(-2.43569325189063))*(cj0)*(cj2)*(px)))+(((IkReal(-2.00000000000000))*(cj2)*(j1)*(pz)*(r02)*(IKsin(j3))))+(((IkReal(-0.0900000000000000))*(cj2)*(px)*(r01)))+(((pp)*(r02)*(sj2)))+(((IkReal(0.0960000000000000))*(py)*(r02)*(sj0)*(sj2)*(IKcos(j3))))+(((IkReal(-0.0900000000000000))*(px)*(r01)*(sj2)*(IKsin(j3))))+(((cj0)*(pp)*(r00)*(sj2)*(IKsin(j3))))+(((IkReal(0.0900000000000000))*(cj2)*(px)*(r02)*(sj0)*(IKsin(j3))))+(((r01)*(sj0)*(sj2)*((j1)*(j1))*(IKsin(j3))))+(((IkReal(-0.0900000000000000))*(cj2)*(py)*(r00)*(IKcos(j3))))+(((IkReal(0.566000000000000))*(px)*(r00)))+(((IkReal(-2.00000000000000))*(j1)*(px)*(r00)*(sj2)*(IKcos(j3))))+(((IkReal(2.00000000000000))*(cj0)*(cj2)*(r00)*((px)*(px))*(IKcos(j3))))+(((IkReal(0.0960000000000000))*(pz)*(r01)*(sj0)*(sj2)))+(((IkReal(0.0900000000000000))*(py)*(r00)*(sj2)*(IKsin(j3))))+(((IkReal(0.413121116928447))*(cj0)*(px)*(IKcos(j3))))+(((IkReal(-0.191023803664921))*(cj2)*(r02)*(IKsin(j3))))+(((IkReal(0.0900000000000000))*(cj2)*(px)*(r01)*(IKcos(j3))))+(((IkReal(0.0900000000000000))*(px)*(r02)*(sj0)*(sj2)*(IKcos(j3))))+(((IkReal(2.00000000000000))*(cj2)*(py)*(pz)*(r01)*(IKsin(j3))))+(((IkReal(-0.413121116928447))*(py)*(sj0)))+(((IkReal(2.00000000000000))*(r02)*(sj2)*((pz)*(pz))*(IKcos(j3))))+(((IkReal(0.0960000000000000))*(cj0)*(px)*(r02)*(sj2)*(IKcos(j3))))+(((IkReal(0.0960000000000000))*(cj0)*(cj2)*(j1)*(r00)*(IKsin(j3))))+(((IkReal(-0.0960000000000000))*(cj0)*(pz)*(r00)*(sj2)*(IKcos(j3))))+(((IkReal(-0.0271680000000000))*(cj0)*(r00)))+(((IkReal(-2.00000000000000))*(cj0)*(cj2)*(j1)*(pz)*(r00)))+(((IkReal(0.186415803664921))*(r01)*(sj0)*(sj2)*(IKsin(j3))))+(((IkReal(0.0900000000000000))*(j1)*(r00)*(sj0)*(sj2)*(IKcos(j3))))+(((IkReal(-2.43569325189063))*(cj2)*(py)*(sj0)))+(((IkReal(-1.00000000000000))*(pp)*(r02)*(sj2)*(IKcos(j3))))+(((IkReal(0.0900000000000000))*(pz)*(r00)*(sj0)*(sj2)))+(((IkReal(-2.00000000000000))*(j1)*(pz)*(r02)*(sj2)*(IKcos(j3))))+(((IkReal(0.942698952879581))*(j1)*(r01)*(sj0)*(IKsin(j3))))+(((IkReal(2.00000000000000))*(px)*(pz)*(r00)*(sj2)*(IKcos(j3))))+(((IkReal(0.0900000000000000))*(cj0)*(pz)*(r01)*(sj2)*(IKcos(j3))))+(((IkReal(-0.0900000000000000))*(cj0)*(j1)*(r01)*(sj2)*(IKcos(j3))))+(((IkReal(-2.00000000000000))*(cj0)*(r00)*(sj2)*((px)*(px))*(IKsin(j3))))+(((IkReal(-1.00000000000000))*(cj2)*(r01)*(sj0)*((j1)*(j1))*(IKcos(j3))))+(((r02)*(sj2)*((j1)*(j1))*(IKcos(j3))))+(((IkReal(-0.566000000000000))*(px)*(r00)*(IKcos(j3))))+(((IkReal(-2.00000000000000))*(cj2)*(j1)*(py)*(r02)*(sj0)*(IKcos(j3))))+(((IkReal(2.00000000000000))*(cj2)*(j1)*(pz)*(r01)*(sj0)*(IKcos(j3))))+(((IkReal(-2.43569325189063))*(j1)*(sj2)*(IKcos(j3))))+(((IkReal(0.0900000000000000))*(cj2)*(py)*(r00)))+(((IkReal(-0.0960000000000000))*(py)*(r02)*(sj0)*(sj2)))+(((IkReal(0.00432000000000000))*(cj0)*(r01)*(sj2)*(IKsin(j3))))+(((IkReal(-2.00000000000000))*(cj0)*(cj2)*(r00)*((px)*(px))))+(((IkReal(-2.00000000000000))*(cj2)*(j1)*(pz)*(r01)*(sj0)))+(((IkReal(0.186415803664921))*(cj0)*(r00)*(sj2)*(IKsin(j3))))+(((IkReal(2.00000000000000))*(cj0)*(cj2)*(px)*(pz)*(r02)*(IKcos(j3))))+(((pp)*(r01)*(sj0)*(sj2)*(IKsin(j3))))+(((IkReal(-0.00432000000000000))*(r00)*(sj0)*(sj2)*(IKsin(j3))))+(((IkReal(-2.00000000000000))*(cj0)*(cj2)*(px)*(pz)*(r02)))+(((cj0)*(r00)*(sj2)*((j1)*(j1))*(IKsin(j3))))+(((IkReal(-0.0900000000000000))*(cj0)*(pz)*(r01)*(sj2)))+(((IkReal(-0.0960000000000000))*(cj0)*(j1)*(r00)*(sj2)))+(((IkReal(0.387301047120419))*(px)*(sj0)*(IKcos(j3))))+(((IkReal(0.0900000000000000))*(cj0)*(py)*(r02)*(sj2)))+(((IkReal(2.00000000000000))*(cj0)*(cj2)*(j1)*(pz)*(r00)*(IKcos(j3))))+(((IkReal(-0.0757600000000000))*(r02)*(sj2)))+(((IkReal(0.0960000000000000))*(cj0)*(j1)*(r00)*(sj2)*(IKcos(j3))))+(((IkReal(-1.00000000000000))*(cj0)*(cj2)*(r00)*((j1)*(j1))*(IKcos(j3))))+(((IkReal(-2.00000000000000))*(cj2)*(py)*(pz)*(r02)*(sj0)))+(((IkReal(2.43569325189063))*(pz)*(sj2)*(IKcos(j3))))+(((IkReal(-4.30334496800465))*(pp)*(IKcos(j3))))+(((IkReal(-2.00000000000000))*(px)*(pz)*(r00)*(sj2)))+(((IkReal(-0.387301047120419))*(cj0)*(py)*(IKcos(j3))))+(((IkReal(-2.00000000000000))*(r01)*(sj0)*(sj2)*((py)*(py))*(IKsin(j3))))+(((IkReal(-0.0960000000000000))*(j1)*(r02)*(sj2)*(IKsin(j3))))+(((IkReal(-2.00000000000000))*(r02)*(sj2)*((pz)*(pz))))+(((IkReal(-1.00000000000000))*(cj0)*(cj2)*(pp)*(r00)*(IKcos(j3))))+(((IkReal(-0.0900000000000000))*(cj2)*(pz)*(r00)*(sj0)*(IKsin(j3))))+(((IkReal(-2.00000000000000))*(cj0)*(px)*(py)*(r01)*(sj2)*(IKsin(j3))))+(((IkReal(-2.00000000000000))*(py)*(pz)*(r01)*(sj2)))+(((IkReal(-2.00000000000000))*(j1)*(py)*(r01)*(sj2)*(IKcos(j3))))+(((IkReal(0.942698952879581))*(py)*(r02)*(sj0)*(IKsin(j3))))+(((IkReal(0.0960000000000000))*(cj2)*(py)*(r01)))+(((IkReal(-1.00000000000000))*(cj2)*(pp)*(r01)*(sj0)*(IKcos(j3))))+(((IkReal(-0.566000000000000))*(py)*(r01)*(IKcos(j3))))+(((cj0)*(cj2)*(r00)*((j1)*(j1))))+(((IkReal(0.387301047120419))*(cj0)*(py)))+(((IkReal(-2.00000000000000))*(cj2)*(px)*(py)*(r00)*(sj0)))+(((IkReal(-0.0452495497382199))*(r02)*(IKsin(j3))))+(((IkReal(4.30334496800465))*((j1)*(j1))))+(((IkReal(-2.00000000000000))*(cj0)*(px)*(pz)*(r02)*(sj2)*(IKsin(j3))))+(((IkReal(2.43569325189063))*(cj2)*(py)*(sj0)*(IKcos(j3))))+(((IkReal(2.00000000000000))*(cj0)*(j1)*(px)*(r02)*(sj2)*(IKsin(j3))))+(((IkReal(0.0960000000000000))*(cj0)*(cj2)*(px)*(r02)*(IKsin(j3))))+(((IkReal(0.0960000000000000))*(px)*(r00)*(sj2)*(IKsin(j3))))+(((IkReal(-0.0960000000000000))*(cj2)*(j1)*(r02)))+(((IkReal(-0.0960000000000000))*(j1)*(r01)*(sj0)*(sj2)))+(((IkReal(-2.43569325189063))*(pz)*(sj2)))+(((IkReal(0.566000000000000))*(py)*(r01)))+(((IkReal(2.00000000000000))*(j1)*(px)*(r00)*(sj2)))+(((IkReal(-2.00000000000000))*(px)*(py)*(r00)*(sj0)*(sj2)*(IKsin(j3))))+(((IkReal(-0.387301047120419))*(px)*(sj0)))+(((IkReal(-2.00000000000000))*(cj2)*(j1)*(py)*(r01)*(IKsin(j3))))+(((IkReal(0.0271680000000000))*(r01)*(sj0)*(IKcos(j3))))+(((IkReal(-0.0900000000000000))*(pz)*(r00)*(sj0)*(sj2)*(IKcos(j3))))+(((IkReal(0.942698952879581))*(cj0)*(j1)*(r00)*(IKsin(j3))))+(((IkReal(0.942698952879581))*(cj0)*(px)*(r02)*(IKsin(j3))))+(((IkReal(-0.566000000000000))*(pz)*(r02)*(IKcos(j3))))+(((IkReal(0.0960000000000000))*(cj0)*(pz)*(r00)*(sj2)))+(((IkReal(-0.0960000000000000))*(pz)*(r01)*(sj0)*(sj2)*(IKcos(j3))))+(((IkReal(-0.0960000000000000))*(cj0)*(cj2)*(pz)*(r00)*(IKsin(j3))))+(((IkReal(-2.00000000000000))*(cj0)*(cj2)*(j1)*(px)*(r02)*(IKcos(j3))))+(((IkReal(-0.0900000000000000))*(cj0)*(cj2)*(j1)*(r01)*(IKsin(j3))))+(((cj2)*(r02)*((j1)*(j1))*(IKsin(j3))))+(((IkReal(2.00000000000000))*(cj2)*(px)*(pz)*(r00)*(IKsin(j3))))+(((IkReal(0.0900000000000000))*(cj2)*(j1)*(r00)*(sj0)*(IKsin(j3))))+(((IkReal(0.0900000000000000))*(cj0)*(cj2)*(pz)*(r01)*(IKsin(j3))))+(((IkReal(-0.0900000000000000))*(cj0)*(py)*(r02)*(sj2)*(IKcos(j3))))+(((IkReal(2.00000000000000))*(cj0)*(cj2)*(j1)*(px)*(r02)))+(((IkReal(-0.0900000000000000))*(j1)*(r00)*(sj0)*(sj2)))+(((IkReal(-0.0254700000000000))*(cj0)*(r01)*(IKcos(j3))))+(((cj2)*(pp)*(r01)*(sj0)))+(((IkReal(0.239015809162304))*(IKcos(j3))))+(((IkReal(2.00000000000000))*(cj2)*(j1)*(py)*(r02)*(sj0)))+(((IkReal(0.413121116928447))*(py)*(sj0)*(IKcos(j3))))+(((IkReal(0.0960000000000000))*(cj2)*(pz)*(r02)))+(((IkReal(-0.0960000000000000))*(cj2)*(px)*(r00)*(IKcos(j3))))+(((IkReal(-0.0960000000000000))*(cj2)*(pz)*(r02)*(IKcos(j3))))+(((IkReal(2.00000000000000))*(py)*(pz)*(r01)*(sj2)*(IKcos(j3))))+(((IkReal(0.116913276090750))*(cj2)))+(((IkReal(-2.00000000000000))*(cj0)*(cj2)*(px)*(py)*(r01)))+(((IkReal(2.00000000000000))*(j1)*(pz)*(r02)*(sj2)))+(((IkReal(-4.30334496800465))*((j1)*(j1))*(IKcos(j3))))+(((IkReal(-0.0271680000000000))*(r01)*(sj0)))+(((IkReal(0.0900000000000000))*(cj0)*(j1)*(r01)*(sj2)))+(((IkReal(-0.00432000000000000))*(cj2)*(r00)*(sj0)))+(((IkReal(0.566000000000000))*(pz)*(r02)))+(((IkReal(-0.413121116928447))*(cj0)*(px))));
evalcond[15]=((IkReal(-0.239015809162304))+(((IkReal(0.0900000000000000))*(cj0)*(pz)*(r01)*(sj2)))+(((IkReal(-0.566000000000000))*(pz)*(r02)))+(((IkReal(2.00000000000000))*(cj0)*(cj2)*(px)*(py)*(r01)*(IKcos(j3))))+(((IkReal(0.0960000000000000))*(pz)*(r02)*(sj2)*(IKsin(j3))))+(((IkReal(0.0254700000000000))*(r00)*(sj0)))+(((IkReal(0.189301047120419))*(cj0)*(px)*(r02)*(IKsin(j3))))+(((IkReal(-0.566000000000000))*(py)*(r01)))+(((IkReal(-0.00432000000000000))*(cj0)*(cj2)*(r01)*(IKcos(j3))))+(((IkReal(0.0960000000000000))*(cj2)*(py)*(r02)*(sj0)*(IKsin(j3))))+(((IkReal(0.0254700000000000))*(r00)*(sj0)*(IKcos(j3))))+(((IkReal(0.0960000000000000))*(py)*(r02)*(sj0)*(sj2)))+(((IkReal(-0.189301047120419))*(cj0)*(pz)*(r00)*(IKsin(j3))))+(((IkReal(4.30334496800465))*(pp)))+(((IkReal(0.0803680000000000))*(cj0)*(cj2)*(r00)*(IKcos(j3))))+(((IkReal(2.00000000000000))*(j1)*(py)*(r02)*(sj0)*(sj2)*(IKsin(j3))))+(((IkReal(2.43569325189063))*(j1)*(sj2)*(IKcos(j3))))+(((IkReal(0.00432000000000000))*(cj2)*(r00)*(sj0)))+(((IkReal(-1.00000000000000))*(cj2)*(pp)*(r01)*(sj0)))+(((IkReal(0.0757600000000000))*(r02)*(sj2)*(IKcos(j3))))+(((IkReal(-1.00000000000000))*(cj2)*(r01)*(sj0)*((j1)*(j1))))+(((IkReal(0.0271680000000000))*(cj0)*(r00)*(IKcos(j3))))+(((IkReal(0.0960000000000000))*(j1)*(r01)*(sj0)*(sj2)*(IKcos(j3))))+(((IkReal(0.0960000000000000))*(py)*(r01)*(sj2)*(IKsin(j3))))+(((IkReal(2.00000000000000))*(cj2)*(px)*(py)*(r00)*(sj0)))+(((IkReal(-2.00000000000000))*(cj0)*(j1)*(pz)*(r00)*(sj2)*(IKsin(j3))))+(((IkReal(0.0271680000000000))*(cj0)*(r00)))+(((IkReal(-0.0900000000000000))*(cj0)*(cj2)*(py)*(r02)*(IKsin(j3))))+(((IkReal(2.43569325189063))*(j1)*(sj2)))+(((IkReal(0.0803680000000000))*(cj0)*(cj2)*(r00)))+(((IkReal(-1.00000000000000))*(cj2)*(pp)*(r02)*(IKsin(j3))))+(((IkReal(-2.00000000000000))*(j1)*(pz)*(r01)*(sj0)*(sj2)*(IKsin(j3))))+(((IkReal(0.00432000000000000))*(cj2)*(r00)*(sj0)*(IKcos(j3))))+(((IkReal(-0.0900000000000000))*(cj2)*(py)*(r00)))+(((IkReal(0.0960000000000000))*(cj0)*(px)*(r02)*(sj2)))+(((IkReal(2.00000000000000))*(cj2)*(r02)*((pz)*(pz))*(IKsin(j3))))+(((IkReal(-2.00000000000000))*(cj2)*(j1)*(py)*(r02)*(sj0)))+(((IkReal(0.0960000000000000))*(cj0)*(j1)*(r00)*(sj2)))+(((IkReal(0.0960000000000000))*(cj2)*(j1)*(r02)*(IKcos(j3))))+(((IkReal(0.0803680000000000))*(cj2)*(r01)*(sj0)*(IKcos(j3))))+(((IkReal(2.00000000000000))*(cj2)*(py)*(pz)*(r02)*(sj0)*(IKcos(j3))))+(((IkReal(-0.413121116928447))*(cj0)*(px)*(IKcos(j3))))+(((IkReal(-2.00000000000000))*(cj2)*(j1)*(px)*(r00)*(IKsin(j3))))+(((IkReal(0.0757600000000000))*(r02)*(sj2)))+(((IkReal(2.00000000000000))*(cj2)*(px)*(py)*(r00)*(sj0)*(IKcos(j3))))+(((IkReal(2.00000000000000))*(cj2)*(r01)*(sj0)*((py)*(py))*(IKcos(j3))))+(((IkReal(-0.0960000000000000))*(pz)*(r01)*(sj0)*(sj2)))+(((IkReal(0.0221878036649215))*(cj2)*(r02)*(IKsin(j3))))+(((IkReal(2.00000000000000))*(r02)*(sj2)*((pz)*(pz))))+(((IkReal(-0.0960000000000000))*(cj2)*(pz)*(r01)*(sj0)*(IKsin(j3))))+(((IkReal(-0.0960000000000000))*(cj2)*(py)*(r01)*(IKcos(j3))))+(((IkReal(0.0960000000000000))*(cj2)*(j1)*(r01)*(sj0)*(IKsin(j3))))+(((IkReal(-8.60668993600931))*(j1)*(pz)))+(((IkReal(-1.00000000000000))*(cj0)*(cj2)*(r00)*((j1)*(j1))))+(((IkReal(-0.0267958036649215))*(r01)*(sj0)*(sj2)*(IKsin(j3))))+(((IkReal(-2.00000000000000))*(py)*(pz)*(r02)*(sj0)*(sj2)*(IKsin(j3))))+(((IkReal(0.566000000000000))*(j1)*(r02)*(IKcos(j3))))+(((IkReal(-2.43569325189063))*(cj0)*(cj2)*(px)))+(((IkReal(-2.00000000000000))*(cj2)*(j1)*(pz)*(r02)*(IKsin(j3))))+(((IkReal(0.0960000000000000))*(py)*(r02)*(sj0)*(sj2)*(IKcos(j3))))+(((IkReal(-0.0900000000000000))*(px)*(r01)*(sj2)*(IKsin(j3))))+(((cj0)*(pp)*(r00)*(sj2)*(IKsin(j3))))+(((IkReal(2.00000000000000))*(cj2)*(py)*(pz)*(r02)*(sj0)))+(((IkReal(4.30334496800465))*((j1)*(j1))*(IKcos(j3))))+(((IkReal(0.0900000000000000))*(cj2)*(px)*(r02)*(sj0)*(IKsin(j3))))+(((r01)*(sj0)*(sj2)*((j1)*(j1))*(IKsin(j3))))+(((IkReal(-0.0900000000000000))*(cj0)*(py)*(r02)*(sj2)))+(((IkReal(-2.00000000000000))*(cj0)*(cj2)*(j1)*(px)*(r02)))+(((IkReal(-0.0900000000000000))*(cj2)*(py)*(r00)*(IKcos(j3))))+(((IkReal(-2.00000000000000))*(j1)*(px)*(r00)*(sj2)*(IKcos(j3))))+(((IkReal(2.00000000000000))*(cj0)*(cj2)*(r00)*((px)*(px))*(IKcos(j3))))+(((IkReal(0.0900000000000000))*(py)*(r00)*(sj2)*(IKsin(j3))))+(((IkReal(0.189301047120419))*(py)*(r02)*(sj0)*(IKsin(j3))))+(((IkReal(0.0900000000000000))*(cj2)*(px)*(r01)*(IKcos(j3))))+(((IkReal(-0.189301047120419))*(pz)*(r01)*(sj0)*(IKsin(j3))))+(((IkReal(0.0900000000000000))*(px)*(r02)*(sj0)*(sj2)*(IKcos(j3))))+(((IkReal(2.00000000000000))*(cj2)*(py)*(pz)*(r01)*(IKsin(j3))))+(((IkReal(-8.60668993600931))*(j1)*(pz)*(IKcos(j3))))+(((IkReal(-0.413121116928447))*(py)*(sj0)))+(((IkReal(2.00000000000000))*(r02)*(sj2)*((pz)*(pz))*(IKcos(j3))))+(((IkReal(0.0960000000000000))*(cj0)*(px)*(r02)*(sj2)*(IKcos(j3))))+(((IkReal(0.0960000000000000))*(cj0)*(cj2)*(j1)*(r00)*(IKsin(j3))))+(((IkReal(2.00000000000000))*(cj2)*(r01)*(sj0)*((py)*(py))))+(((IkReal(-0.0960000000000000))*(cj0)*(pz)*(r00)*(sj2)*(IKcos(j3))))+(((IkReal(-0.413121116928447))*(py)*(sj0)*(IKcos(j3))))+(((IkReal(0.0900000000000000))*(j1)*(r00)*(sj0)*(sj2)*(IKcos(j3))))+(((IkReal(-0.0960000000000000))*(cj2)*(pz)*(r02)))+(((IkReal(-2.43569325189063))*(cj2)*(py)*(sj0)))+(((IkReal(-1.00000000000000))*(pp)*(r02)*(sj2)*(IKcos(j3))))+(((IkReal(-0.0900000000000000))*(pz)*(r00)*(sj0)*(sj2)))+(((IkReal(-2.00000000000000))*(j1)*(pz)*(r02)*(sj2)*(IKcos(j3))))+(((IkReal(0.0803680000000000))*(cj2)*(r01)*(sj0)))+(((IkReal(-0.0267958036649215))*(cj0)*(r00)*(sj2)*(IKsin(j3))))+(((IkReal(2.00000000000000))*(px)*(pz)*(r00)*(sj2)*(IKcos(j3))))+(((IkReal(-0.0254700000000000))*(cj0)*(r01)))+(((IkReal(-0.239015809162304))*(IKcos(j3))))+(((IkReal(0.0900000000000000))*(cj0)*(pz)*(r01)*(sj2)*(IKcos(j3))))+(((IkReal(-0.0900000000000000))*(cj0)*(j1)*(r01)*(sj2)*(IKcos(j3))))+(((IkReal(-2.00000000000000))*(cj0)*(r00)*(sj2)*((px)*(px))*(IKsin(j3))))+(((IkReal(-1.00000000000000))*(cj2)*(r01)*(sj0)*((j1)*(j1))*(IKcos(j3))))+(((r02)*(sj2)*((j1)*(j1))*(IKcos(j3))))+(((IkReal(-0.566000000000000))*(px)*(r00)*(IKcos(j3))))+(((IkReal(-2.00000000000000))*(cj2)*(j1)*(py)*(r02)*(sj0)*(IKcos(j3))))+(((IkReal(2.00000000000000))*(cj2)*(j1)*(pz)*(r01)*(sj0)*(IKcos(j3))))+(((IkReal(2.00000000000000))*(cj0)*(cj2)*(j1)*(pz)*(r00)))+(((IkReal(0.00432000000000000))*(cj0)*(r01)*(sj2)*(IKsin(j3))))+(((IkReal(0.189301047120419))*(j1)*(r01)*(sj0)*(IKsin(j3))))+(((IkReal(0.387301047120419))*(cj0)*(py)*(IKcos(j3))))+(((IkReal(-0.0960000000000000))*(cj2)*(py)*(r01)))+(((IkReal(-0.00908645026178010))*(r02)*(IKsin(j3))))+(((IkReal(2.00000000000000))*(cj0)*(cj2)*(px)*(pz)*(r02)))+(((IkReal(-0.0900000000000000))*(cj0)*(j1)*(r01)*(sj2)))+(((IkReal(2.00000000000000))*(cj0)*(cj2)*(px)*(pz)*(r02)*(IKcos(j3))))+(((pp)*(r01)*(sj0)*(sj2)*(IKsin(j3))))+(((IkReal(-2.00000000000000))*(j1)*(py)*(r01)*(sj2)))+(((IkReal(2.00000000000000))*(py)*(pz)*(r01)*(sj2)))+(((IkReal(-0.00432000000000000))*(r00)*(sj0)*(sj2)*(IKsin(j3))))+(((cj0)*(r00)*(sj2)*((j1)*(j1))*(IKsin(j3))))+(((IkReal(-2.43569325189063))*(cj2)*(py)*(sj0)*(IKcos(j3))))+(((IkReal(-1.00000000000000))*(cj0)*(cj2)*(pp)*(r00)))+(((IkReal(-0.566000000000000))*(px)*(r00)))+(((IkReal(2.00000000000000))*(cj0)*(cj2)*(j1)*(pz)*(r00)*(IKcos(j3))))+(((r02)*(sj2)*((j1)*(j1))))+(((IkReal(0.0960000000000000))*(cj0)*(j1)*(r00)*(sj2)*(IKcos(j3))))+(((IkReal(0.189301047120419))*(cj0)*(j1)*(r00)*(IKsin(j3))))+(((IkReal(-1.00000000000000))*(cj0)*(cj2)*(r00)*((j1)*(j1))*(IKcos(j3))))+(((IkReal(0.0900000000000000))*(px)*(r02)*(sj0)*(sj2)))+(((IkReal(2.00000000000000))*(cj2)*(j1)*(pz)*(r01)*(sj0)))+(((IkReal(-2.00000000000000))*(r01)*(sj0)*(sj2)*((py)*(py))*(IKsin(j3))))+(((IkReal(-0.0960000000000000))*(cj0)*(pz)*(r00)*(sj2)))+(((IkReal(-0.0960000000000000))*(j1)*(r02)*(sj2)*(IKsin(j3))))+(((IkReal(-1.00000000000000))*(cj0)*(cj2)*(pp)*(r00)*(IKcos(j3))))+(((IkReal(-0.0900000000000000))*(cj2)*(pz)*(r00)*(sj0)*(IKsin(j3))))+(((IkReal(-2.00000000000000))*(cj0)*(px)*(py)*(r01)*(sj2)*(IKsin(j3))))+(((IkReal(-2.00000000000000))*(j1)*(py)*(r01)*(sj2)*(IKcos(j3))))+(((IkReal(-1.00000000000000))*(cj2)*(pp)*(r01)*(sj0)*(IKcos(j3))))+(((IkReal(-0.566000000000000))*(py)*(r01)*(IKcos(j3))))+(((IkReal(-0.387301047120419))*(px)*(sj0)*(IKcos(j3))))+(((IkReal(0.387301047120419))*(cj0)*(py)))+(((IkReal(4.30334496800465))*((j1)*(j1))))+(((IkReal(-2.00000000000000))*(cj0)*(px)*(pz)*(r02)*(sj2)*(IKsin(j3))))+(((IkReal(2.00000000000000))*(cj0)*(cj2)*(px)*(py)*(r01)))+(((IkReal(2.00000000000000))*(cj0)*(j1)*(px)*(r02)*(sj2)*(IKsin(j3))))+(((IkReal(0.0960000000000000))*(cj0)*(cj2)*(px)*(r02)*(IKsin(j3))))+(((IkReal(0.0960000000000000))*(cj2)*(j1)*(r02)))+(((IkReal(0.0960000000000000))*(px)*(r00)*(sj2)*(IKsin(j3))))+(((IkReal(0.566000000000000))*(j1)*(r02)))+(((IkReal(0.0960000000000000))*(j1)*(r01)*(sj0)*(sj2)))+(((IkReal(-2.43569325189063))*(pz)*(sj2)))+(((IkReal(-2.00000000000000))*(j1)*(pz)*(r02)*(sj2)))+(((IkReal(-2.00000000000000))*(px)*(py)*(r00)*(sj0)*(sj2)*(IKsin(j3))))+(((IkReal(-0.387301047120419))*(px)*(sj0)))+(((IkReal(-2.00000000000000))*(cj2)*(j1)*(py)*(r01)*(IKsin(j3))))+(((IkReal(0.0271680000000000))*(r01)*(sj0)*(IKcos(j3))))+(((IkReal(-0.0900000000000000))*(pz)*(r00)*(sj0)*(sj2)*(IKcos(j3))))+(((IkReal(-0.00432000000000000))*(cj0)*(cj2)*(r01)))+(((IkReal(0.0271680000000000))*(r01)*(sj0)))+(((IkReal(-1.00000000000000))*(pp)*(r02)*(sj2)))+(((IkReal(-0.566000000000000))*(pz)*(r02)*(IKcos(j3))))+(((IkReal(2.00000000000000))*(cj0)*(cj2)*(r00)*((px)*(px))))+(((IkReal(-0.0960000000000000))*(pz)*(r01)*(sj0)*(sj2)*(IKcos(j3))))+(((IkReal(4.30334496800465))*(pp)*(IKcos(j3))))+(((IkReal(-0.0960000000000000))*(cj0)*(cj2)*(pz)*(r00)*(IKsin(j3))))+(((IkReal(-0.0960000000000000))*(cj2)*(px)*(r00)))+(((IkReal(-2.43569325189063))*(pz)*(sj2)*(IKcos(j3))))+(((IkReal(-2.00000000000000))*(cj0)*(cj2)*(j1)*(px)*(r02)*(IKcos(j3))))+(((IkReal(-0.0900000000000000))*(cj0)*(cj2)*(j1)*(r01)*(IKsin(j3))))+(((cj2)*(r02)*((j1)*(j1))*(IKsin(j3))))+(((IkReal(2.00000000000000))*(cj2)*(px)*(pz)*(r00)*(IKsin(j3))))+(((IkReal(0.0900000000000000))*(cj2)*(j1)*(r00)*(sj0)*(IKsin(j3))))+(((IkReal(0.0900000000000000))*(cj0)*(cj2)*(pz)*(r01)*(IKsin(j3))))+(((IkReal(-0.0900000000000000))*(cj0)*(py)*(r02)*(sj2)*(IKcos(j3))))+(((IkReal(-2.43569325189063))*(cj0)*(cj2)*(px)*(IKcos(j3))))+(((IkReal(-0.0254700000000000))*(cj0)*(r01)*(IKcos(j3))))+(((IkReal(0.0900000000000000))*(j1)*(r00)*(sj0)*(sj2)))+(((IkReal(0.116913276090750))*(cj2)*(IKcos(j3))))+(((IkReal(2.00000000000000))*(px)*(pz)*(r00)*(sj2)))+(((IkReal(-0.0960000000000000))*(cj2)*(px)*(r00)*(IKcos(j3))))+(((IkReal(-2.00000000000000))*(j1)*(px)*(r00)*(sj2)))+(((IkReal(-0.0960000000000000))*(cj2)*(pz)*(r02)*(IKcos(j3))))+(((IkReal(2.00000000000000))*(py)*(pz)*(r01)*(sj2)*(IKcos(j3))))+(((IkReal(0.116913276090750))*(cj2)))+(((IkReal(0.0900000000000000))*(cj2)*(px)*(r01)))+(((IkReal(-0.413121116928447))*(cj0)*(px))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  || IKabs(evalcond[8]) > 0.000001  || IKabs(evalcond[9]) > 0.000001  || IKabs(evalcond[10]) > 0.000001  || IKabs(evalcond[11]) > 0.000001  || IKabs(evalcond[12]) > 0.000001  || IKabs(evalcond[13]) > 0.000001  || IKabs(evalcond[14]) > 0.000001  || IKabs(evalcond[15]) > 0.000001  )
{
continue;
}
}

{
IkReal j5array[2], cj5array[2], sj5array[2];
bool j5valid[2]={false};
_nj5 = 2;
cj5array[0]=((((r00)*(sj0)))+(((IkReal(-1.00000000000000))*(cj0)*(r01))));
if( cj5array[0] >= -1-IKFAST_SINCOS_THRESH && cj5array[0] <= 1+IKFAST_SINCOS_THRESH )
{
    j5valid[0] = j5valid[1] = true;
    j5array[0] = IKacos(cj5array[0]);
    sj5array[0] = IKsin(j5array[0]);
    cj5array[1] = cj5array[0];
    j5array[1] = -j5array[0];
    sj5array[1] = -sj5array[0];
}
else if( isnan(cj5array[0]) )
{
    // probably any value will work
    j5valid[0] = true;
    cj5array[0] = 1; sj5array[0] = 0; j5array[0] = 0;
}
for(int ij5 = 0; ij5 < 2; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 2; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[1];
evalcond[0]=((IkReal(-0.0450000000000000))+(((IkReal(0.0450000000000000))*(IKcos(j5))))+(((px)*(sj0)))+(((IkReal(-1.00000000000000))*(cj0)*(py))));
if( IKabs(evalcond[0]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst2;
gconst2=IKsign(((((sj5)*((cj3)*(cj3))))+(((sj5)*((sj3)*(sj3))))));
dummyeval[0]=((((sj5)*((cj3)*(cj3))))+(((sj5)*((sj3)*(sj3)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst3;
IkReal x379=((IkReal(9.00000000000000))*(sj5));
gconst3=IKsign(((((x379)*((sj3)*(sj3))))+(((x379)*((cj3)*(cj3))))));
dummyeval[0]=((((sj5)*((cj3)*(cj3))))+(((sj5)*((sj3)*(sj3)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x380=((cj3)*(sj2));
IkReal x381=((cj2)*(cj3));
IkReal x382=((IkReal(200.000000000000))*(j1));
IkReal x383=((sj2)*(sj3));
IkReal x384=((IkReal(9.00000000000000))*(r02));
IkReal x385=((cj2)*(sj3));
IkReal x386=((IkReal(200.000000000000))*(pz));
IkReal x387=((IkReal(200.000000000000))*(cj0)*(px));
IkReal x388=((IkReal(9.00000000000000))*(cj0)*(r00));
IkReal x389=((IkReal(9.00000000000000))*(r01)*(sj0));
IkReal x390=((IkReal(200.000000000000))*(py)*(sj0));
if( IKabs(((gconst3)*(((((x383)*(x387)))+(((x382)*(x385)))+(((IkReal(-9.60000000000000))*(x383)))+(((x380)*(x384)))+(((IkReal(-1.00000000000000))*(x385)*(x386)))+(((x381)*(x389)))+(((x381)*(x388)))+(((x383)*(x390)))+(((IkReal(76.4000000000000))*((sj3)*(sj3)))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst3)*(((((IkReal(-1.00000000000000))*(x380)*(x387)))+(((IkReal(9.60000000000000))*(x380)))+(((IkReal(-1.00000000000000))*(x381)*(x382)))+(((x383)*(x384)))+(((IkReal(-1.00000000000000))*(x380)*(x390)))+(((IkReal(-76.4000000000000))*(cj3)*(sj3)))+(((x385)*(x388)))+(((x385)*(x389)))+(((x381)*(x386))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst3)*(((((x383)*(x387)))+(((x382)*(x385)))+(((IkReal(-9.60000000000000))*(x383)))+(((x380)*(x384)))+(((IkReal(-1.00000000000000))*(x385)*(x386)))+(((x381)*(x389)))+(((x381)*(x388)))+(((x383)*(x390)))+(((IkReal(76.4000000000000))*((sj3)*(sj3))))))), ((gconst3)*(((((IkReal(-1.00000000000000))*(x380)*(x387)))+(((IkReal(9.60000000000000))*(x380)))+(((IkReal(-1.00000000000000))*(x381)*(x382)))+(((x383)*(x384)))+(((IkReal(-1.00000000000000))*(x380)*(x390)))+(((IkReal(-76.4000000000000))*(cj3)*(sj3)))+(((x385)*(x388)))+(((x385)*(x389)))+(((x381)*(x386)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x391=IKcos(j4);
IkReal x392=IKsin(j4);
IkReal x393=((sj3)*(sj5));
IkReal x394=((IkReal(1.00000000000000))*(sj2));
IkReal x395=((cj0)*(r00));
IkReal x396=((cj3)*(sj5));
IkReal x397=((cj2)*(sj0));
IkReal x398=((cj0)*(px));
IkReal x399=((sj0)*(x394));
IkReal x400=((IkReal(0.0450000000000000))*(x392));
IkReal x401=((IkReal(0.0450000000000000))*(x391));
IkReal x402=((IkReal(1.00000000000000))*(x392));
evalcond[0]=((((r01)*(x397)))+(((r02)*(sj2)))+(((cj2)*(x395)))+(((IkReal(-1.00000000000000))*(x396)*(x402)))+(((IkReal(-1.00000000000000))*(x391)*(x393))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x393)*(x402)))+(((IkReal(-1.00000000000000))*(x394)*(x395)))+(((IkReal(-1.00000000000000))*(r01)*(x399)))+(((x391)*(x396)))+(((cj2)*(r02))));
evalcond[2]=((IkReal(-0.283000000000000))+(((x393)*(x401)))+(((py)*(x397)))+(((IkReal(-0.0480000000000000))*(cj2)))+(((IkReal(-0.382000000000000))*(cj3)))+(((IkReal(-1.00000000000000))*(j1)*(x394)))+(((cj2)*(x398)))+(((pz)*(sj2)))+(((x396)*(x400))));
evalcond[3]=((((IkReal(-0.382000000000000))*(sj3)))+(((IkReal(-1.00000000000000))*(x394)*(x398)))+(((x393)*(x400)))+(((IkReal(-1.00000000000000))*(cj2)*(j1)))+(((IkReal(0.0480000000000000))*(sj2)))+(((IkReal(-1.00000000000000))*(py)*(x399)))+(((cj2)*(pz)))+(((IkReal(-1.00000000000000))*(x396)*(x401))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 17;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x403=((cj2)*(sj3));
IkReal x404=((cj0)*(r00));
IkReal x405=((IkReal(1.00000000000000))*(sj3));
IkReal x406=((cj3)*(r02));
IkReal x407=((cj2)*(cj3));
IkReal x408=((r01)*(sj0));
IkReal x409=((sj2)*(x408));
if( IKabs(((gconst2)*(((((x407)*(x408)))+(((IkReal(-1.00000000000000))*(sj2)*(x404)*(x405)))+(((x404)*(x407)))+(((sj2)*(x406)))+(((IkReal(-1.00000000000000))*(x405)*(x409)))+(((r02)*(x403))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst2)*(((((cj3)*(sj2)*(x404)))+(((IkReal(-1.00000000000000))*(cj2)*(x406)))+(((x403)*(x408)))+(((x403)*(x404)))+(((cj3)*(x409)))+(((r02)*(sj2)*(sj3))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst2)*(((((x407)*(x408)))+(((IkReal(-1.00000000000000))*(sj2)*(x404)*(x405)))+(((x404)*(x407)))+(((sj2)*(x406)))+(((IkReal(-1.00000000000000))*(x405)*(x409)))+(((r02)*(x403)))))), ((gconst2)*(((((cj3)*(sj2)*(x404)))+(((IkReal(-1.00000000000000))*(cj2)*(x406)))+(((x403)*(x408)))+(((x403)*(x404)))+(((cj3)*(x409)))+(((r02)*(sj2)*(sj3)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x410=IKcos(j4);
IkReal x411=IKsin(j4);
IkReal x412=((sj3)*(sj5));
IkReal x413=((IkReal(1.00000000000000))*(sj2));
IkReal x414=((cj0)*(r00));
IkReal x415=((cj3)*(sj5));
IkReal x416=((cj2)*(sj0));
IkReal x417=((cj0)*(px));
IkReal x418=((sj0)*(x413));
IkReal x419=((IkReal(0.0450000000000000))*(x411));
IkReal x420=((IkReal(0.0450000000000000))*(x410));
IkReal x421=((IkReal(1.00000000000000))*(x411));
evalcond[0]=((((IkReal(-1.00000000000000))*(x410)*(x412)))+(((r01)*(x416)))+(((r02)*(sj2)))+(((cj2)*(x414)))+(((IkReal(-1.00000000000000))*(x415)*(x421))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x412)*(x421)))+(((x410)*(x415)))+(((cj2)*(r02)))+(((IkReal(-1.00000000000000))*(r01)*(x418)))+(((IkReal(-1.00000000000000))*(x413)*(x414))));
evalcond[2]=((IkReal(-0.283000000000000))+(((py)*(x416)))+(((IkReal(-1.00000000000000))*(j1)*(x413)))+(((x415)*(x419)))+(((IkReal(-0.0480000000000000))*(cj2)))+(((IkReal(-0.382000000000000))*(cj3)))+(((x412)*(x420)))+(((pz)*(sj2)))+(((cj2)*(x417))));
evalcond[3]=((((IkReal(-0.382000000000000))*(sj3)))+(((IkReal(-1.00000000000000))*(cj2)*(j1)))+(((IkReal(0.0480000000000000))*(sj2)))+(((cj2)*(pz)))+(((x412)*(x419)))+(((IkReal(-1.00000000000000))*(x413)*(x417)))+(((IkReal(-1.00000000000000))*(py)*(x418)))+(((IkReal(-1.00000000000000))*(x415)*(x420))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 17;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}
}
}

}

}
}
}

}

}
}
}

}

}
}
return solutions.GetNumSolutions()>0;
}
};


/// solves the inverse kinematics equations.
/// \param pfree is an array specifying the free joints of the chain.
IKFAST_API bool ComputeIk(const IkReal* eetrans, const IkReal* eerot, const IkReal* pfree, IkSolutionListBase<IkReal>& solutions) {
IKSolver solver;
return solver.ComputeIk(eetrans,eerot,pfree,solutions);
}

IKFAST_API const char* GetKinematicsHash() { return "47627a5f41ce262893a61ab556287097"; }

IKFAST_API const char* GetIkFastVersion() { return IKFAST_STRINGIZE(IKFAST_VERSION); }

#ifdef IKFAST_NAMESPACE
} // end namespace
#endif

#ifndef IKFAST_NO_MAIN
#include <stdio.h>
#include <stdlib.h>
#ifdef IKFAST_NAMESPACE
using namespace IKFAST_NAMESPACE;
#endif
int main(int argc, char** argv)
{
    if( argc != 12+GetNumFreeParameters()+1 ) {
        printf("\nUsage: ./ik r00 r01 r02 t0 r10 r11 r12 t1 r20 r21 r22 t2 free0 ...\n\n"
               "Returns the ik solutions given the transformation of the end effector specified by\n"
               "a 3x3 rotation R (rXX), and a 3x1 translation (tX).\n"
               "There are %d free parameters that have to be specified.\n\n",GetNumFreeParameters());
        return 1;
    }

    IkSolutionList<IkReal> solutions;
    std::vector<IkReal> vfree(GetNumFreeParameters());
    IkReal eerot[9],eetrans[3];
    eerot[0] = atof(argv[1]); eerot[1] = atof(argv[2]); eerot[2] = atof(argv[3]); eetrans[0] = atof(argv[4]);
    eerot[3] = atof(argv[5]); eerot[4] = atof(argv[6]); eerot[5] = atof(argv[7]); eetrans[1] = atof(argv[8]);
    eerot[6] = atof(argv[9]); eerot[7] = atof(argv[10]); eerot[8] = atof(argv[11]); eetrans[2] = atof(argv[12]);
    for(std::size_t i = 0; i < vfree.size(); ++i)
        vfree[i] = atof(argv[13+i]);
    bool bSuccess = ComputeIk(eetrans, eerot, vfree.size() > 0 ? &vfree[0] : NULL, solutions);

    if( !bSuccess ) {
        fprintf(stderr,"Failed to get ik solution\n");
        return -1;
    }

    printf("Found %d ik solutions:\n", (int)solutions.GetNumSolutions());
    std::vector<IkReal> solvalues(GetNumJoints());
    for(std::size_t i = 0; i < solutions.GetNumSolutions(); ++i) {
        const IkSolutionBase<IkReal>& sol = solutions.GetSolution(i);
        printf("sol%d (free=%d): ", (int)i, (int)sol.GetFree().size());
        std::vector<IkReal> vsolfree(sol.GetFree().size());
        sol.GetSolution(&solvalues[0],vsolfree.size()>0?&vsolfree[0]:NULL);
        for( std::size_t j = 0; j < solvalues.size(); ++j)
            printf("%.15f, ", solvalues[j]);
        printf("\n");
    }
    return 0;
}

#endif
