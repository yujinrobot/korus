#!/bin/bash

# Build a laser map with Korus
# The robot identifier is read from environment variable KORUS_ID or -k argument,
# and requested to the user if not

function usage()
{
  echo "Usage: build_map [ -l ] [ -s ] [ -m <map name> ] [ -k <korus id> ] | [ -h ]"
  echo "Option -l enables laser map building"
  echo "Option -s enables stargazer map building, and makes -m argument mandatory"
  echo "If -l is not set, -m must provide an existing laser map path; otherwise it only provides the name of the resulting stargazer map"
  echo "You can build one type of map or both maps simultaneously"
}

# parse command line
while [ "$1" != "" ]; do
  case $1 in
    -l | --laser )  LASER_M="build_laser_map:=true"
                    ;;
    -s | --starg )  STARGZ_M="stargz_laser_map:=true"
                    ;;
    -m | --map )    shift
                    MAP_NAME="map_name:=$1"
                    ;;
    -k | --korus )  shift
                    KORUS_ID=$1
                    ;;
    -h | --help )   usage
                    exit
                    ;;
     * )            usage
                    exit 1
  esac
  shift
done

# make sure KORUS_ID is defined and not empty   NOTE: ignore by now; assume Yujin Korus (1)
KORUS_ID=1 
if [ -z $KORUS_ID ]; then
  while true; do
    read -p "KORUS_ID not specified; which Korus robot are you using? [1: Yujin, 2: SKKU] : " KORUS_ID
    case ${KORUS_ID} in
      [1] ) break;;
      [2] ) break;;
       *  ) echo "Please answer 1 or 2";;
    esac
  done
else
  echo "Korus id: ${KORUS_ID}"
fi

# check MAP_NAME; it isn't mandatory; if it's not provided, we don't create a stargazer map
if [ -z "$MAP_NAME" ] && [ -n "$STARGZ_M" ]; then
  echo "Map name required when creating a stargazer map"
  usage
  exit
fi

if [ -z "$LASER_M" ] && [ -z "$STARGZ_M" ]; then
  echo "You must build at least one map type"
  usage
  exit
fi

roslaunch korus_meta build_map_standalone.launch $LASER_M $STARGZ_M $MAP_NAME --screen
