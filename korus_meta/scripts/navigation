#!/bin/bash

# Launch Korus with full navigation system
# The robot identifier is read from environment variable KORUS_ID or -k argument,
# and requested to the user if not
# The map to use is read from environment variable MAP_NAME or -m argument; if
# not, the default value specified on launch file will be used
#
# TODO: Allow using map names of type $(find <ros package>)/<somewhere in package>

function usage()
{
  echo "usage: navigation [ -m <map name> ] [ -k <korus id> ] | [ -h ]"
}

# parse command line
while [ "$1" != "" ]; do
  case $1 in
    -m | --map )    shift
                    MAP_NAME=$1
                    ;;
    -k | --korus )  shift
                    KORUS_ID=$1
                    ;;
    -h | --help )   usage
                    exit
                    ;;
     * )            usage
                    exit 1
  esac
  shift
done

# make sure KORUS_ID is defined and not empty   NOTE: ignore by now; assume Yujin Korus (1)
KORUS_ID=1
if [ -z $KORUS_ID ]; then
  while true; do
    read -p "KORUS_ID not specified; which Korus robot are you using? [1: Yujin, 2: SKKU] : " KORUS_ID
    case ${KORUS_ID} in
      [1] ) break;;
      [2] ) break;;
       *  ) echo "Please answer 1 or 2";;
    esac
  done
else
  echo "Korus id: ${KORUS_ID}"
fi

# check MAP_NAME; it isn't mandatory, as launch files provide a default value
if [ -z "$MAP_NAME" ]; then
  echo "WARNING: map name not provided; using default map specified on navigation_standalone.launch"
  roslaunch --screen korus_meta navigation_standalone.launch
else
  if [ -f "$MAP_NAME.yaml" ]; then
    echo "Map name: $MAP_NAME"
    roslaunch --screen korus_meta navigation_standalone.launch map_name:=$MAP_NAME
  else
    echo "ERROR: $MAP_NAME.yaml not found"
    exit 1
  fi
fi
