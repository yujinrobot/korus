<!--
  Launches the mighty Korus
  
  In detail:
   * robot core (goo, mechanism model, joint trajectory controller, ...)
   ** uses parameters for Yujin's Korus (V3.1)
   * sensors (if set to true)
 -->
<launch>
  <group ns="korus">
	  <!-- nodelet manager -->
	  <node pkg="nodelet" type="nodelet" name="robot_core" args="manager">
	    <param name="num_worker_threads" value="4"/>
	  </node>
	  <node pkg="nodelet" type="nodelet" name="mechanism_model" args="load ycs_mechanism_model/MechanismModel robot_core">
	    <rosparam file="$(find korus_meta)/resources/yaml/mechanism_model/test_robot_core.yaml" command="load"/>
	    
	    <remap from="mechanism_model/actuator_states" to="actuator_states"/>
	    <remap from="mechanism_model/joint_states" to="joint_states"/>
	  </node>
	  
    <param name="robot_description" command="$(find xacro)/xacro.py '$(find korus_meta)/resources/urdf/korus_v3_diff_drive.urdf.xacro'"/>
	  <node name="robot_state_publisher" pkg="robot_state_publisher" type="state_publisher"/>
	  
	  <node pkg="nodelet" type="nodelet" name="goo" args="load goo/GooNodelet robot_core">
	    <rosparam file="$(find korus_meta)/resources/yaml/goo/simulation.yaml" command="load"/>
	    <rosparam file="$(find korus_meta)/resources/yaml/goo/korus_v3_1.yaml" command="load"/>
	  </node>
	</group>
</launch>