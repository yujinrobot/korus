<!--
    Laser and/or stargazer map building, based on gmapping SLAM.

    Launches the korus base with ros navistack + gmapping slam + scanner to create a laser map.
    Alternatively, use a laser static global map and amcl localization to map stargazer patches
    in the provided map reference system.  
    Argument costmap_sensors must contain the list of observation sources to use in costmaps,
    separated by spaces. All sensors listed here must be launched by setting the corresponding
    launch_<sensor name> argument as true.
 -->
<launch>
  <!-- Parameters for move base -->
  <arg name="costmap_sensors"  default="hokuyo"/>

  <!-- Output map configuration -->
  <arg name="build_laser_map"  default="true"/>
  <arg name="build_stargz_map" default="false"/>
  <arg name="map_name"         default="map"/>
  <arg name="initial_pose_x"   default="0.0"/>
  <arg name="initial_pose_y"   default="0.0"/>
  <arg name="initial_pose_a"   default="0.0"/>
  
  <group ns="korus">

    <!--  ************** Rosnav move base **************  -->
    <include file="$(find korus_meta)/resources/launch/components/move_base.launch">
      <arg name="costmap_sensors" value="$(arg costmap_sensors)"/>
    </include>

    <!--
      Tweaks to adapt the move base node to slam navigation:
       - update global costmap each 5 seconds, keeping pace with slam algorithm updates
       - use really slow velocities, to allow proper mapping and smooth motion
       - allow big delays in sensors readings; necessary on time consuming map updates
       - don't try recovery behaviors; just report "unreachable goal"
       - replan each 5 seconds, as map changes
    -->
    <param name="move_base_node/global_costmap/update_frequency"  value="0.2"/>
    <param name="move_base_node/global_costmap/publish_frequency" value="0.2"/>

    <param name="move_base_node/TrajectoryPlannerROS/max_vel_x" value="0.08"/>
    <param name="move_base_node/TrajectoryPlannerROS/max_rotational_vel" value="0.18"/>
    <param name="move_base_node/TrajectoryPlannerROS/min_in_place_rotational_vel" value="0.1"/>
    
    <param name="move_base_node/local_costmap/hokuyo/expected_update_rate"  value="3.0"/>
    <param name="move_base_node/global_costmap/hokuyo/expected_update_rate" value="3.0"/>
    <param name="move_base_node/local_costmap/kinect/expected_update_rate"  value="3.0"/>
    <param name="move_base_node/global_costmap/kinect/expected_update_rate" value="3.0"/>
    <param name="move_base_node/local_costmap/pctols/expected_update_rate"  value="3.0"/>
    <param name="move_base_node/global_costmap/pctols/expected_update_rate" value="3.0"/>
    
    <param name="move_base_node/recovery_behavior_enabled" value="false"/>
    <param name="move_base_node/planner_frequency" value="0.2"/>

    <!--  ************* Navigation manager *************  -->
    <include file="$(find korus_meta)/resources/launch/components/nav_mng.launch"/>

    <!--  *************** SLAM mapping *****************  -->
    <include if="$(arg build_laser_map)" file="$(find korus_meta)/resources/launch/components/gmapping.launch"/>

    <!--  ***** Stargazer map node in mapping mode ****** -->
    <include if="$(arg build_stargz_map)" file="$(find korus_meta)/resources/launch/components/stargz_map.launch">
      <arg name="landmarks_file_path" value="$(arg map_name).stgz"/>
      <arg name="operation_mode" value="2"/>
    </include>

    <!--  ***************** Map Server *****************  -->
    <node unless="$(arg build_laser_map)" name="map_server" pkg="map_server" type="map_server" args="$(arg map_name).yaml">
      <param name="frame_id" value="/map"/>
    </node>
  
    <!--  ******************** Amcl ********************  -->
    <include unless="$(arg build_laser_map)" file="$(find korus_meta)/resources/launch/components/amcl.launch">
      <!-- Enable amcl tf broadcasting, to replace localization fusion node -->
      <arg name="tf_broadcast" value="true"/>

      <arg name="initial_pose_x" value="$(arg initial_pose_x)"/>
      <arg name="initial_pose_y" value="$(arg initial_pose_y)"/>
      <arg name="initial_pose_a" value="$(arg initial_pose_a)"/>
    </include>

    <!--  *************** Remote control ****************  -->
    <include file="$(find korus_meta)/resources/launch/components/remote_ctrl.launch"/>
  </group>
</launch>
