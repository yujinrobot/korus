# This file contains common configuration options for the two costmaps used in the navigation
# stack for more details on the parameters in this file, and a full list of the parameters used
# by the costmaps, please see http://www.ros.org/wiki/costmap_2d

map_type: costmap

# Costmap specific parameters
track_unknown_space: false

# Set the tolerance we're willing to have for tf transforms
transform_tolerance: 0.5

# Obstacle marking parameters
obstacle_range: 2.5
max_obstacle_height: 1.5
raytrace_range: 3.05

# Robot radius in meters; we assume that Korus is circular, what
# is true as long as the arm is within the base footprint limits
robot_radius: 0.28

# Cost function parameters
inflation_radius: 0.6
cost_scaling_factor: 5.0

# The cost at which a cell is considered an obstacle when a map is read from the map_server
lethal_cost_threshold: 100

# Configuration for the sensors that the costmap will use to update a map
# Note that this list will probably be be changed at launch time
observation_sources: hokuyo sensor_3d sonars virtual

hokuyo: {sensor_frame: /laser_link, data_type: LaserScan, expected_update_rate: 1.0, topic: /korus/base_scan, 
  observation_persistence: 0.0, marking: true, clearing: true, max_obstacle_height: 1.4, min_obstacle_height: 0.08}

sonars: {sensor_frame: /base_link, data_type: PointCloud2, expected_update_rate: 1.0, topic: /korus/sonars_as_pc, 
  observation_persistence: 0.0, marking: true, clearing: true, max_obstacle_height: 1.4, min_obstacle_height: 0.1}

sensor_3d: {sensor_frame: /sensor_3d_link, data_type: PointCloud2, expected_update_rate: 1.0, topic: /korus/pointcloud, 
  observation_persistence: 0.0, marking: true, clearing: true, max_obstacle_height: 1.4, min_obstacle_height: 0.1}

virtual: {sensor_frame: /torso_link, data_type: LaserScan, expected_update_rate: 1.0, topic: /korus/virtual_sensor_scan, 
  observation_persistence: 0.0, marking: true, clearing: true, max_obstacle_height: 1.4, min_obstacle_height: 0.08}
